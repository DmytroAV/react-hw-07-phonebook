{"version":3,"file":"static/js/142.7f90b3e7.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Message/Message.styled.js","components/Message/Message.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsListItem/ContactsListItem.styled.js","components/PopupModal/PopupModal.styled.js","components/PopupModal/PopupModal.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  border: none;\n  cursor: pointer;\n  width: 130px;\n  height: 30px;\n  font-weight: 600;\n  background: #ff8500;\n  color: #f6f8f9;\n  border-radius: 3px;\n  text-transform: uppercase;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover {\n    background: #ea7b00;\n    color: #f6f8f9;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  justify-items: center;\n  width: 100%;\n  span {\n    font-style: italic;\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Message.styled';\n\nexport function Message({ message }) {\n  return (\n    <Container>\n      <span>{message}</span>\n    </Container>\n  );\n}\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-rows: 50px 30px 1fr;\n  row-gap: 20px;\n  padding: 10px;\n  width: 100%;\n  height: 100%;\n  background-color: #f8f8f8;\n  border: 2px solid #c2c2c2;\n  border-radius: 3px;\n  box-shadow: 0 4px 7px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Title = styled.h2`\n  font-weight: bold;\n  font-style: italic;\n  border-bottom: 2px solid #ddd;\n  margin: 20px 0 0;\n  font-size: 22px;\n  padding: 0 0 10px 40px;\n`;\n\nexport const ContactsUl = styled.ul`\n  display: grid;\n  justify-items: center;\n  width: 100%;\n  padding: 0 30px;\n  row-gap: 20px;\n  list-style: none;\n`;\n\nexport const InputFilterContacts = styled.input`\n  width: 300px;\n  border: 1px solid #c2c2c2;\n  box-shadow: 1px 1px 4px #ebebeb;\n  border-radius: 3px;\n  padding: 5px;\n  outline: none;\n  margin: 0 0 0 30px;\n    &:focus {\n      border: 1px solid #0c0;\n    }\n`;\n","import styled from 'styled-components';\n\n\nexport const ListContact = styled.li`\n  display: grid;\n  grid-template-columns: 30% 1fr 10%;\n  justify-items: center;\n  align-items: center;\n  gap: 10px;\n  padding: 5px;\n  width: 100%;\n  background-color: #f8f8f8;\n  border: 2px solid #c2c2c2;\n  border-radius: 3px;\n  box-shadow: 0 4px 7px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Contact = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 15px;\n  width: 100%;\n`;\n\nexport const ImgAvatar = styled.img`\n  width: 200px;\n  border-radius: 50%;\n`;\n\nexport const NameContact = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const JobContact = styled.p`\n  margin: 0;\n  font-size: 16px;\n  font-style: italic;\n  border-bottom: 1px solid #a0a4a7\n`;\n\n\nexport const Label = styled.div`\n  display: grid;\n  grid-template-columns: 10% 1fr;\n  justify-items: stretch;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n  font-size: 16px;\n  font-style: italic;\n     svg {\n      width: 25px;\n      height: 25px;\n      fill: #ff8500;\n    }\n`;\n\nexport const ContainerBtn = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-self: start;\n  width: 100%;\n`\n\nexport const Button = styled.button`\n  justify-self: center;\n  align-self: center;\n  border: none;\n  cursor: pointer;\n  background-color: #f8f8f8;\n  width: 40px;\n  height: 40px;\n  svg {\n      width: 25px;\n      height: 25px;\n      fill: ${props => props.name === \"delete\" ? \"#ff4747\" : \"#84898c\"};\n    }\n`;\n\n\n","import styled from 'styled-components';\nimport { BtnStyled } from 'components/Button/Button.styled.js';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Contents = styled.div`\n  display: grid;\n  grid-template-areas:\n  \"a a\"\n  \"b c\";\n  justify-items: center;\n  align-items: center;\n  max-width: 100%;\n  height: 200px;\n  row-gap: 25px;\n  padding: 25px;\n  background-color: #dadada;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h3`\n  grid-area: a;\n  justify-self: center;\n  align-self: center;\n`;\nexport const ConfirmBtn = styled(BtnStyled)`\n  grid-area: b;\n  justify-self: center;\n  align-self: center;\n`;\n\nexport const CancelBtn = styled(BtnStyled)`\n  grid-area: c;\n  justify-self: center;\n  align-self: center;\n`;\n","import {\n  CancelBtn,\n  ConfirmBtn,\n  Contents,\n  Overlay,\n  Title,\n} from './PopupModal.styled';\n\nexport const PopupModal = ({ handleDeleteTrue, handleDeleteFalse }) => {\n  return (\n    <Overlay>\n      <Contents>\n        <Title>Do you really want to delete the contact?</Title>\n        <ConfirmBtn onClick={handleDeleteTrue} type=\"button\">\n          Confirm\n        </ConfirmBtn>\n        <CancelBtn onClick={handleDeleteFalse} type=\"button\">\n          Cancel\n        </CancelBtn>\n      </Contents>\n    </Overlay>\n  );\n};\n","import { useDeleteContactMutation } from 'redux/contactsApi';\nimport PropTypes from 'prop-types';\nimport {\n  MdLocalPhone,\n  MdMail,\n  MdOutlineCreate,\n  MdOutlineDeleteForever,\n  MdRoom,\n} from 'react-icons/md';\nimport {\n  ListContact,\n  Contact,\n  NameContact,\n  Button,\n  ImgAvatar,\n  JobContact,\n  ContainerBtn,\n  Label,\n} from './ContactsListItem.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { PopupModal } from 'components/PopupModal/PopupModal';\nimport { toast } from 'react-toastify';\n\nconst notifyOptions = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport const ContactsListItem = ({\n  id,\n  avatar,\n  firstName,\n  lastName,\n  email,\n  code_country,\n  user_country,\n  user_region,\n  address_street,\n  job_title,\n  phone,\n}) => {\n  const [deleteContacts] = useDeleteContactMutation();\n  const navigate = useNavigate();\n  const [popup, setPopup] = useState({\n    show: false,\n    id: null,\n  });\n\n  const handleDeleteContact = id => {\n    setPopup({\n      show: true,\n      id,\n    });\n  };\n\n  const handleDeleteTrue = () => {\n    if (popup.show && popup.id) {\n      deleteContacts(id);\n      toast.success(\n        `Contact ${firstName} ${lastName} has been removed from your phone book`,\n        notifyOptions\n      );\n      setPopup({\n        show: false,\n        id: null,\n      });\n    }\n  };\n\n  const handleDeleteFalse = () => {\n    setPopup({\n      show: false,\n      id: null,\n    });\n  };\n\n  return (\n    <>\n      <ListContact key={id}>\n        <ImgAvatar src={avatar} alt=\"avatar\" width={50} />\n        <Contact>\n          <NameContact>\n            {firstName} {lastName}\n          </NameContact>\n          <JobContact>{job_title}</JobContact>\n          <Label>\n            <MdLocalPhone />\n            {phone}\n          </Label>\n          <Label>\n            <MdMail />\n            {email}\n          </Label>\n          <Label>\n            <MdRoom />\n            <>\n              {code_country}, {address_street}, {user_region}, {user_country}\n            </>\n          </Label>\n        </Contact>\n        <ContainerBtn>\n          <Button\n            name=\"edit\"\n            type=\"button\"\n            onClick={() => navigate(`/contacts/edit/${id}`)}\n          >\n            <MdOutlineCreate />\n          </Button>\n          <Button name=\"delete\" type=\"button\" onClick={handleDeleteContact}>\n            <MdOutlineDeleteForever />\n          </Button>\n          {popup.show && (\n            <PopupModal\n              handleDeleteTrue={handleDeleteTrue}\n              handleDeleteFalse={handleDeleteFalse}\n            />\n          )}\n        </ContainerBtn>\n      </ListContact>\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  code_country: PropTypes.string.isRequired,\n  user_country: PropTypes.string.isRequired,\n  user_region: PropTypes.string.isRequired,\n  address_street: PropTypes.string.isRequired,\n  job_title: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Message } from '../Message/Message';\nimport {\n  Container,\n  Title,\n  ContactsUl,\n  InputFilterContacts,\n} from './ContactsList.styled';\nimport { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\n\nexport const ContactsList = ({ items, value, onChange }) => {\n  return (\n    <Container>\n      <Title>Contacts</Title>\n      <InputFilterContacts\n        type=\"text\"\n        placeholder=\"Find contacts by First Name\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      {items.length !== 0 ? (\n        <ContactsUl>\n          {items.map(item => (\n            <ContactsListItem key={item.id} {...item} />\n          ))}\n        </ContactsUl>\n      ) : (\n        <Message message=\"There is no such name in your phonebook. Please enter correct contacts name!\" />\n      )}\n    </Container>\n  );\n};\n\nContactsList.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { BtnStyled } from 'components/Button/Button.styled';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-rows: 50px 1fr;\n  justify-items: center;\n  align-items: center;\n  row-gap: 15px;\n  width: 1080px;\n`;\n\nexport const BtnAddContact = styled(BtnStyled)`\n  display: grid;\n  grid-template-columns: 20% 1fr;\n  justify-items: center;\n  align-items: center;\n  justify-self: start;\n  width: 170px;\n  height: 40px;\n`;\n","import { useState } from 'react';\nimport { useGetContactsQuery } from '../../redux/contactsApi';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { Message } from '../../components/Message/Message';\nimport { Loader } from 'components/Loader/Loader';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { BtnAddContact, Container } from './ContactsPage.styled';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactsPage = () => {\n  const { data, isFetching } = useGetContactsQuery();\n  const [filters, setFilters] = useState('');\n  const navigate = useNavigate();\n\n  const addFilterContacts = () => {\n    const normalFilter = filters.toLowerCase().trim();\n    if (data) {\n      return data.filter(({ firstName }) =>\n        firstName.toLowerCase().includes(normalFilter)\n      );\n    }\n    return;\n  };\n\n  const filteredContacts = addFilterContacts();\n  return (\n    <>\n      {isFetching && <Loader />}\n      <Container>\n        {filteredContacts && (\n          <>\n            <BtnAddContact onClick={() => navigate('/create')}>\n              <MdAddCircleOutline size={30} />\n              Add Contact\n            </BtnAddContact>\n            <ContactsList\n              items={filteredContacts}\n              onChange={e => setFilters(e.target.value)}\n              value={filters}\n            />\n          </>\n        )}\n        {filteredContacts === 0 && (\n          <Message message=\"There are no contacts in your phonebook. Please add your first contact!\" />\n        )}\n        <Outlet />\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["BtnStyled","styled","button","_templateObject","_taggedTemplateLiteral","Container","div","Message","_ref","message","_jsx","children","Title","h2","_templateObject2","ContactsUl","ul","_templateObject3","InputFilterContacts","input","_templateObject4","ListContact","li","Contact","ImgAvatar","img","NameContact","JobContact","p","_templateObject5","Label","_templateObject6","ContainerBtn","_templateObject7","Button","_templateObject8","props","name","Overlay","Contents","h3","ConfirmBtn","CancelBtn","PopupModal","handleDeleteTrue","handleDeleteFalse","_jsxs","onClick","type","notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","ContactsListItem","id","avatar","firstName","lastName","email","code_country","user_country","user_region","address_street","job_title","phone","_useDeleteContactMuta","useDeleteContactMutation","deleteContacts","_slicedToArray","navigate","useNavigate","_useState","useState","show","_useState2","popup","setPopup","_Fragment","src","alt","width","MdLocalPhone","MdMail","MdRoom","concat","MdOutlineCreate","MdOutlineDeleteForever","toast","success","ContactsList","items","value","onChange","placeholder","autoComplete","length","map","item","_objectSpread","BtnAddContact","_useGetContactsQuery","useGetContactsQuery","data","isFetching","filters","setFilters","filteredContacts","normalFilter","toLowerCase","trim","filter","includes","addFilterContacts","Loader","MdAddCircleOutline","size","e","target","Outlet"],"sourceRoot":""}
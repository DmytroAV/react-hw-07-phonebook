/*! For license information please see 868.a154a1da.chunk.js.LICENSE.txt */
(self.webpackChunkreact_hw_07_phonebook=self.webpackChunkreact_hw_07_phonebook||[]).push([[868],{1694:function(e,t){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var o=r.apply(null,n);o&&e.push(o)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var u in n)a.call(n,u)&&n[u]&&e.push(u)}}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},888:function(e,t,n){"use strict";var a=n(9047);function r(){}function i(){}i.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,i,o){if(o!==a){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:r};return n.PropTypes=n,n}},2007:function(e,t,n){e.exports=n(888)()},9047:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},2758:function(e){"use strict";function t(e){this._maxSize=e,this.clear()}t.prototype.clear=function(){this._size=0,this._values=Object.create(null)},t.prototype.get=function(e){return this._values[e]},t.prototype.set=function(e,t){return this._size>=this._maxSize&&this.clear(),e in this._values||this._size++,this._values[e]=t};var n=/[^.^\]^[]+|(?=\[\]|\.\.)/g,a=/^\d+$/,r=/^\d/,i=/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g,o=/^\s*(['"]?)(.*?)(\1)\s*$/,u=new t(512),d=new t(512),s=new t(512);function l(e){return u.get(e)||u.set(e,c(e).map((function(e){return e.replace(o,"$2")})))}function c(e){return e.match(n)||[""]}function f(e){return"string"===typeof e&&e&&-1!==["'",'"'].indexOf(e.charAt(0))}function h(e){return!f(e)&&(function(e){return e.match(r)&&!e.match(a)}(e)||function(e){return i.test(e)}(e))}e.exports={Cache:t,split:c,normalizePath:l,setter:function(e){var t=l(e);return d.get(e)||d.set(e,(function(e,n){for(var a=0,r=t.length,i=e;a<r-1;){var o=t[a];if("__proto__"===o||"constructor"===o||"prototype"===o)return e;i=i[t[a++]]}i[t[a]]=n}))},getter:function(e,t){var n=l(e);return s.get(e)||s.set(e,(function(e){for(var a=0,r=n.length;a<r;){if(null==e&&t)return;e=e[n[a++]]}return e}))},join:function(e){return e.reduce((function(e,t){return e+(f(t)||a.test(t)?"["+t+"]":(e?".":"")+t)}),"")},forEach:function(e,t,n){!function(e,t,n){var a,r,i,o,u=e.length;for(r=0;r<u;r++)(a=e[r])&&(h(a)&&(a='"'+a+'"'),i=!(o=f(a))&&/^\d+$/.test(a),t.call(n,a,o,i,r,e))}(Array.isArray(e)?e:c(e),t,n)}}},3634:function(e,t,n){"use strict";n.d(t,{Px:function(){return b},Xd:function(){return o},Xz:function(){return S}});var a=n(2791),r=n(2007),i=n.n(r),o=[["Afghanistan","AF","Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB"],["\xc5land Islands","AX","Br\xe4nd\xf6~BR|Ecker\xf6~EC|Finstr\xf6m~FN|F\xf6gl\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\xe5rd\xf6~VR"],["Albania","AL","Berat~01|Dib\xebr~09|Durr\xebs~02|Elbasan~03|Fier~04|Gjirokast\xebr~05|Kor\xe7\xeb~06|Kuk\xebs~07|Lezh\xeb~08|Shkod\xebr~10|Tirana~11|Vlor\xeb~12"],["Algeria","DZ","Adrar~01|A\xefn Defla~44|A\xefn T\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\xe9char~08|B\xe9ja\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\xe9ridj~34|Bou\xefra~10|Boumerd\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\xe9d\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\xefda~20|S\xe9tif~19|Sidi Bel Abb\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13"],["American Samoa","AS","Tutuila~01|Aunu'u~02|Ta'\u016b~03|Ofu\u2011Olosega~04|Rose Atoll~21|Swains Island~22"],["Andorra","AD","Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\xe0 de L\xf2ria~06"],["Angola","AO","Bengo~BGO|Benguela~BGU|Bi\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\xedge~UIG|Zaire~ZAI"],["Anguilla","AI","Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22"],["Antarctica","AQ","Antarctica~AQ"],["Antigua and Barbuda","AG","Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37"],["Argentina","AR","Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\xf3rdoba~X|Corrientes~W|Entre R\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\xe9n~Q|R\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\xe1n~T"],["Armenia","AM","Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER"],["Aruba","AW","Aruba~AW"],["Australia","AU","Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA"],["Austria","AT","Burgenland~1|K\xe4rnten~2|Nieder\xf6sterreich~3|Ober\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9"],["Azerbaijan","AZ","Ab\u015feron~ABS|A\u011fcab\u0259di~AGC|A\u011fdam~AGM|A\u011fda\u015f~AGS|A\u011fstafa~AGA|A\u011fsu~AGU|Astara~AST|Bak\u0131~BAK|Bab\u0259k~BAB|Balak\u0259n~BAL|B\u0259rd\u0259~BAR|Beyl\u0259qan~BEY|Bil\u0259suvar~BIL|C\u0259bray\u0131l~CAB|C\u0259lilabad~CAL|Culfa~CUL|Da\u015fk\u0259s\u0259n~DAS|F\xfczuli~FUZ|G\u0259d\u0259b\u0259y~GAD|Goranboy~GOR|G\xf6y\xe7ay~GOY|G\xf6yg\xf6l~GYG|Hac\u0131qabul~HAC|\u0130mi\u015fli~IMI|\u0130smay\u0131ll\u0131~ISM|K\u0259lb\u0259c\u0259r~KAL|K\u01ddng\u01ddrli~KAN|K\xfcrd\u0259mir~KUR|La\xe7\u0131n~LAC|L\u0259nk\u0259ran~LAN|Lerik~LER|Masall\u0131~MAS|Neft\xe7ala~NEF|O\u011fuz~OGU|Ordubad~ORD|Q\u0259b\u0259l\u0259~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatl\u0131~SAT|Sabirabad~SAB|\u015eabran~SBN|S\u0259d\u0259r\u0259k~SAD|\u015eahbuz~SAH|\u015e\u0259ki~SAK|Salyan~SAL|\u015eamax\u0131~SMI|\u015e\u0259mkir~SKR|Samux~SMX|\u015e\u0259rur~SAR|Siy\u0259z\u0259n~SIY|\u015eu\u015fa~SUS|T\u0259rt\u0259r~TAR|Tovuz~TOV|Ucar~UCA|Xa\xe7maz~XAC|X\u0131z\u0131~XIZ|Xocal\u0131~XCI|Xocav\u0259nd~XVD|Yard\u0131ml\u0131~YAR|Yevlax~YEV|Z\u0259ngilan~ZAN|Zaqatala~ZAQ|Z\u0259rdab~ZAR"],["Bahamas","BS","Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore\u2019s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39"],["Bahrain","BH","Al Jan\u016bb\u012byah~14|Al Man\u0101mah~13|Al Mu\u1e29arraq~15|Al Wus\u0163\xe1~16|Ash Sham\u0101l\u012byah~17"],["Bangladesh","BD","Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G"],["Barbados","BB","Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11"],["Belarus","BY","Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI"],["Belgium","BE","Brussels~BRU|Flanders~VLG|Wallonia~WAL"],["Belize","BZ","Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL"],["Benin","BJ","Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\xe9m\xe9~OU|Plateau~PL|Zou~ZO"],["Bermuda","BM","City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11"],["Bhutan","BT","Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34"],["Bolivia","BO","Beni~BE|Chuquisaca~CH|Cochabamba~CB|La Paz~LP|Oruro~OR|Pando~PD|Potos\xed~PT|Santa Cruz~SC|Tarija~TJ"],["Bonaire, Sint Eustatius and Saba","BQ","Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE"],["Bosnia and Herzegovina","BA","Br\u010dko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP"],["Botswana","BW","Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO"],["Bouvet Island","BV","Bouvet Island~BV"],["Brazil","BR","Acre~AC|Alagoas~AL|Amap\xe1~AP|Amazonas~AM|Bahia~BA|Cear\xe1~CE|Distrito Federal~DF|Esp\xedrito Santo~ES|Goi\xe1s~GO|Maranh\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\xe1~PA|Para\xedba~PB|Paran\xe1~PR|Pernambuco~PE|Piau\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO"],["British Indian Ocean Territory","IO","British Indian Ocean Territory~IO"],["Brunei Darussalam","BN","Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU"],["Bulgaria","BG","Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06"],["Burkina Faso","BF","Bal\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\xe9~BLK|Como\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\xe9n\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\xe9logo~KOP|Kouritenga~KOT|Kourw\xe9ogo~KOW|L\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\xe9~PAS|Poni~PON|Sangui\xe9~SNG|Sanmatenga~SMT|S\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\xe9ogo~ZOU"],["Burundi","BI","Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY"],["Cambodia","KH","Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25"],["Cameroon","CM","Adamaoua~AD|Centre~CE|Est~ES|Extr\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW"],["Canada","CA","Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT"],["Cape Verde","CV","Boa Vista~BV|Brava~BR|Calheta de S\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\xe3o Domingos~SD|S\xe3o Filipe~SF|S\xe3o Nicolau~SN|S\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\xe3o Nicolau~TS"],["Cayman Islands","KY","Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined"],["Central African Republic","CF","Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\xe9mo~KG|Lobaye~LB|Mamb\xe9r\xe9-Kad\xe9\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\xe9r\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\xe9nd\xe9~OP|Sangha-Mba\xe9r\xe9~SE|Vakaga~VK"],["Chad","TD","Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF"],["Chile","CL","Ais\xe9n del General Carlos Ib\xe1\xf1ez del Campo~AI|Antofagasta~AN|Araucan\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\xedo-B\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|\xd1uble~NB|Regi\xf3n Metropolitana de Santiago~RM|Tarapac\xe1~TA|Valpara\xedso~VS"],["China","CN","Anhui~AH|Beijing~BJ|Chongqing~CQ|Fujian~FJ|Gansu~GS|Guangdong~GD|Guangxi~GX|Guizhou~GZ|Hainan~HI|Hebei~HE|Heilongjiang~HL|Henan~HA|Hong Kong~HK|Hubei~HB|Hunan~HN|Inner Mongolia~NM|Jiangsu~JS|Jiangxi~JX|Jilin~JL|Liaoning~LN|Macau~MO|Ningxia~NX|Qinghai~QH|Shaanxi~SN|Shandong~SD|Shanghai~SH|Shanxi~SX|Sichuan~SC|Tianjin~TJ|Tibet~XZ|Xinjiang~XJ|Yunnan~YN|Zhejiang~ZJ"],["Christmas Island","CX","Christmas Island~CX"],["Cocos (Keeling) Islands","CC","Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI"],["Colombia","CO","Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\xe9lago de San Andr\xe9s~SAP|Atl\xe1ntico~ATL|Bogot\xe1 D.C.~DC|Bol\xedvar~BOL|Boyac\xe1~BOY|Caldas~CAL|Caquet\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\xf3~CHO|C\xf3rdoba~COR|Cundinamarca~CUN|Guain\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\xe9s~VAU|Vichada~VID"],["Comoros","KM","Andjaz\xeedja~G|Andjou\xe2n~A|Mo\xfbh\xeel\xee~M"],["Congo, Republic of the (Brazzaville)","CG","Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13"],["Congo, the Democratic Republic of the (Kinshasa)","CD","Bandundu~BN|Bas-Congo~BC|\xc9quateur~EQ|Kasa\xef-Occidental~KE|Kasa\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK"],["Cook Islands","CK","Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined"],["Costa Rica","CR","Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\xf3n~7|Puntarenas~6|San Jos\xe9~1"],["C\xf4te d'Ivoire, Republic of","CI","Agn\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\xe9l\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\xe9~12|Moyen-Cavally~19|Moyen-Como\xe9~05|N'zi-Como\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\xe9~13|Vall\xe9e du Bandama~04|Worodougou~14|Zanzan~08"],["Croatia","HR","Bjelovarsko-bilogorska \u017eupanija~07|Brodsko-posavska \u017eupanija~12|Dubrova\u010dko-neretvanska \u017eupanija~19|Grad Zagreb~21|Istarska \u017eupanija~18|Karlova\u010dka \u017eupanija~04|Koprivni\u010dko-kri\u017eeva\u010dka \u017eupanija~06|Krapinsko-zagorska \u017eupanija~02|Li\u010dko-senjska \u017eupanija~09|Me\u0111imurska \u017eupanija~20|Osje\u010dko-baranjska \u017eupanija~14|Po\u017ee\u0161ko-slavonska \u017eupanija~11|Primorsko-goranska \u017eupanija~08|Sisa\u010dko-moslava\u010dka \u017eupanija~03|Splitsko-dalmatinska \u017eupanija~17|\u0160ibensko-kninska \u017eupanija~15|Vara\u017edinska \u017eupanija~05|Viroviti\u010dko-podravska \u017eupanija~10|Vukovarsko-srijemska \u017eupanija~16|Zadarska \u017eupanija~13|Zagreba\u010dka \u017eupanija~01"],["Cuba","CU","Artemisa~15|Camag\xfcey~09|Ciego de \xc1vila~08|Cienfuegos~06|Granma~12|Guant\xe1namo~14|Holgu\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\xedo~01|Sancti Sp\xedritus~07|Santiago de Cuba~13|Villa Clara~05"],["Cura\xe7ao","CW","Cura\xe7ao~CW"],["Cyprus","CY","Ammochostos~04|Keryneia~06|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05"],["Czech Republic","CZ","Hlavn\xed m\u011bsto Praha~10|Jiho\u010desk\xfd kraj~31|Jihomoravsk\xfd kraj~64|Karlovarsk\xfd kraj~41|Kr\xe1lov\xe9hradeck\xfd kraj~52|Libereck\xfd kraj~51|Moravskoslezsk\xfd kraj~80|Olomouck\xfd kraj~71|Pardubick\xfd kraj~53|Plze\u0148sk\xfd kraj~32|St\u0159edo\u010desk\xfd kraj~20|\xdasteck\xfd kraj~42|Vyso\u010dina~63|Zl\xednsk\xfd kraj~72"],["Denmark","DK","Hovedstaden~DK-84|Midtjylland~DK-82|Nordjylland~DK-81|Sj\xe6lland~DK-85|Syddanmark~DK-83"],["Djibouti","DJ","Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA"],["Dominica","DM","Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11"],["Dominican Republic","DO","Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~33|Noroeste~34|Norte~35|Valdesia~42"],["Ecuador","EC","Azuay~A|Bol\xedvar~B|Ca\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\xedos~R|Manab\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\xe1chilas~SD|Sucumb\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z"],["Egypt","EG","Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~GZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS"],["El Salvador","SV","Ahuachap\xe1n~AH|Caba\xf1as~CA|Cuscatl\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\xf3n~UN|Moraz\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\xe1n~US"],["Equatorial Guinea","GQ","Annob\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN"],["Eritrea","ER","Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK"],["Estonia","EE","Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\xe4rvamaa (Paide)~41|J\xf5gevamaa (Jogeva)~49|L\xe4\xe4nemaa~57|L\xe4\xe4ne-Virumaa (Rakvere)~59|P\xe4rnumaa (Parnu)~67|P\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\xf5rumaa (Voru)~86"],["Ethiopia","ET","Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI"],["Falkland Islands (Islas Malvinas)","FK","Falkland Islands (Islas Malvinas)~undefined"],["Faroe Islands","FO","Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined"],["Fiji","FJ","Ba~01|Bua~02|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~11|Rewa~12|Rotuma~R|Serua~13|Tailevu~14"],["Finland","FI","Ahvenanmaan maakunta~FI-01|Etel\xe4-Karjala~FI-02|Etel\xe4-Pohjanmaa~FI-03|Etel\xe4-Savo~FI-04|Kainuu~FI-05|Kanta-H\xe4me~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|P\xe4ij\xe4t-H\xe4me~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19"],["France","FR","Auvergne-Rh\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Nouvelle-Cal\xe9donie~NC|Polyn\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\xe9lemy~BL|Saint Martin~MF|R\xe9union~RE|Terres Australes Fran\xe7aises~TF|Wallis-et-Futuna~WF"],["French Guiana","GF","French Guiana~undefined"],["French Polynesia","PF","Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined"],["French Southern and Antarctic Lands","TF","Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined"],["Gabon","GA","Estuaire~1|Haut-Ogoou\xe9~2|Moyen-Ogoou\xe9~3|Ngouni\xe9~4|Nyanga~5|Ogoou\xe9-Ivindo~6|Ogoou\xe9-Lolo~7|Ogoou\xe9-Maritime~8|Woleu-Ntem~9"],["Gambia, The","GM","Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W"],["Georgia","GE","Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB"],["Germany","DE","Baden-W\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\xfcringen~TH"],["Ghana","GH","Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined"],["Gibraltar","GI","Gibraltar~undefined"],["Greece","GR","Anatolik\xed Makedon\xeda kai Thr\xe1ki~A|Attik\u1e2f~I|Dytik\xed Ell\xe1da~G|Dytik\xed Makedon\xeda~C|Ion\xeda N\xedsia~F|Kentrik\xed Makedon\xeda~B|Kr\xedt\xed~M|Not\xedo Aiga\xedo~L|Peloponn\xedsos~J|Stere\xe1 Ell\xe1da~H|Thessal\xeda~E|Vore\xedo Aiga\xedo~K|\xcdpeiros~D|\xc1gion \xd3ros~69"],["Greenland","GL","Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE"],["Grenada","GD","Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10"],["Guadeloupe","GP","Guadeloupe~undefined"],["Guam","GU","Guam~undefined"],["Guatemala","GT","Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\xe9n~PE|Quetzaltenango~QZ|Quich\xe9~QC|Retalhuleu~Re|Sacatep\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\xe1~SO|Suchitep\xe9quez~SU|Totonicap\xe1n~TO|Zacapa~ZA"],["Guernsey","GG","Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined"],["Guinea","GN","Bok\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\xe9~L|Mamou~M|Nz\xe9r\xe9kor\xe9~N"],["Guinea-Bissau","GW","Bafat\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO"],["Guyana","GY","Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT"],["Haiti","HT","Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE"],["Heard Island and McDonald Islands","HM","Heard Island and McDonald Islands~undefined"],["Holy See (Vatican City)","VA","Holy See (Vatican City)~01"],["Honduras","HN","Atl\xe1ntida~AT|Choluteca~CH|Col\xf3n~CL|Comayagua~CM|Cop\xe1n~CP|Cort\xe9s~CR|El Para\xedso~EP|Francisco Moraz\xe1n~FM|Gracias a Dios~GD|Intibuc\xe1~IN|Islas de la Bah\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\xe1rbara~SB|Valle~VA|Yoro~YO"],["Hong Kong","HK","Hong Kong~HK"],["Hungary","HU","B\xe1cs-Kiskun~BK|Baranya~BA|B\xe9k\xe9s~BE|B\xe9k\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\xe1d~CS|Debrecen~DE|Duna\xfajv\xe1ros~DU|Eger~EG|\xc9rd~ER|Fej\xe9r~FE|Gy\u0151r~GY|Gy\u0151r-Moson-Sopron~GS|Hajd\xfa-Bihar~HB|Heves~HE|H\xf3dmez\u0151v\xe1s\xe1rhely~HV|J\xe1sz-Nagykun-Szolnok~N|Kaposv\xe1r~KV|Kecskem\xe9t~KM|Kom\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\xf3gr\xe1d~NO|Ny\xedregyh\xe1za~NY|P\xe9cs~PS|Pest~PE|Salg\xf3tarj\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\xe1-Bereg~SZ|Szeged~SD|Sz\xe9kesfeh\xe9rv\xe1r~SF|Szeksz\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\xe9m~VE|Veszpr\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE"],["Iceland","IS","Austurland~7|H\xf6fu\xf0borgarsv\xe6\xf0i~1|Nor\xf0urland eystra~6|Nor\xf0urland vestra~5|Su\xf0urland~8|Su\xf0urnes~2|Vestfir\xf0ir~4|Vesturland~3"],["India","IN","Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli and Daman and Diu~DH|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Ladakh~LA|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~SK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB"],["Indonesia","ID","Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO"],["Iran, Islamic Republic of","IR","Alborz~32|Ardab\u012bl~03|\u0100z\u0304arb\u0101yj\u0101n-e Gharb\u012b~02|\u0100z\u0304arb\u0101yj\u0101n-e Sharq\u012b~01|B\u016bshehr~06|Chah\u0101r Ma\u1e29\u0101l va Bakht\u012b\u0101r\u012b~08|E\u015ffah\u0101n~04|F\u0101rs~14|G\u012bl\u0101n~19|Golest\u0101n~27|Hamad\u0101n~24|Hormozg\u0101n~23|\u012al\u0101m~05|Kerm\u0101n~15|Kerm\u0101nsh\u0101h~17|Khor\u0101s\u0101n-e Jon\u016bb\u012b~29|Khor\u0101s\u0101n-e Ra\u1e95av\u012b~30|Khor\u0101s\u0101n-e Shom\u0101l\u012b~61|Kh\u016bzest\u0101n~10|Kohg\u012bl\u016byeh va Bowyer A\u1e29mad~18|Kordest\u0101n~16|Lorest\u0101n~20|Markazi~22|M\u0101zandar\u0101n~21|Qazv\u012bn~28|Qom~26|Semn\u0101n~12|S\u012bst\u0101n va Bal\u016bchest\u0101n~13|Tehr\u0101n~07|Yazd~25|Zanj\u0101n~11"],["Iraq","IQ","Al Anb\u0101r~AN|Al Ba\u015frah~BA|Al Muthann\xe1~MU|Al Q\u0101dis\u012byah~QA|An Najaf~NA|Arb\u012bl~AR|As Sulaym\u0101n\u012byah~SU|B\u0101bil~BB|Baghd\u0101d~BG|Dohuk~DA|Dh\u012b Q\u0101r~DQ|Diy\u0101l\xe1~DI|Karbal\u0101'~KA|Kirkuk~KI|Mays\u0101n~MA|N\u012bnaw\xe1~NI|\u015eal\u0101\u1e29 ad D\u012bn~SD|W\u0101si\u0163~WA"],["Ireland","IE","Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW"],["Isle of Man","IM","Isle of Man~undefined"],["Israel","IL","HaDarom~D|HaMerkaz~M|HaTsafon~Z|H\u0331efa~HA|Tel-Aviv~TA|Yerushalayim~JM"],["Italy","IT","Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34"],["Jamaica","JM","Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10"],["Japan","JP","Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19"],["Jersey","JE","Jersey~undefined"],["Jordan","JO","\u2018Ajl\u016bn~AJ|Al 'Aqabah~AQ|Al Balq\u0101\u2019~BA|Al Karak~KA|Al Mafraq~MA|Al \u2018A\u0305\u015fimah~AM|A\u0163 \u0162af\u012blah~AT|Az Zarq\u0101\u2019~AZ|Irbid~IR|Jarash~JA|Ma\u2018\u0101n~MN|M\u0101dab\u0101~MD"],["Kazakhstan","KZ","Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA"],["Kenya","KE","Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47"],["Kiribati","KI","Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined"],["Korea, Democratic People's Republic of","KP","Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nas\u014fn (Najin-S\u014fnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10"],["Korea, Republic of","KR","Chungcheongbuk-do~43|Chungcheongnam-do~44|Jeju-teukbyeoljachido~49|Jeollabuk-do~45|Jeollanam-do~46|Incheon-gwangyeoksi~28|Gangwon-do~42|Gwangju-gwangyeoksi~29|Gyeonggi-do~41|Gyeongsangbuk-do~47|Gyeongsangnam-do~48|Busan-gwangyeoksi~26|Seoul-teukbyeolsi~11|Sejong-teukbyeoljachisi~50|Daegu-gwangyeoksi~27|Daejeon-gwangyeoksi~30|Ulsan-gwangyeoksi~31"],["Kosovo","XK","Farizaj~FZ|Gjakova~GK|Gjilan~GL|Mitrovica~MI|Peja/Pe\u0107~PE|Pristina~PR|Prizren~PZ"],["Kuwait","KW","Al A\u1e29madi~AH|Al Farw\u0101n\u012byah~FA|Al Jahr\u0101\u2019~JA|Al \u2018\u0100\u015fimah~KU|\u1e28awall\u012b~HA|Mub\u0101rak al Kabir~MU"],["Kyrgyzstan","KG","Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y"],["Laos","LA","Attapu~AT|Bok\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\xf4mxai~OU|Ph\xf4ngsali~PH|Salavan~SL|Savannakh\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI"],["Latvia","LV","Aglona~001|Aizkraukle~002|Aizpute~003|Akn\u012bste~004|Aloja~005|Alsunga~06|Al\u016bksne~007|Amata~008|Ape~009|Auce~010|\u0100da\u017ei~011|Bab\u012bte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Bever\u012bna~017|Broc\u0113ni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|C\u0113sis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|\u0112rg\u013ci~030|Garkalne~031|Grobi\u0146a~032|Gulbene~033|Iecava~034|Ik\u0161\u0137ile~035|Il\u016bkste~036|In\u010dukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|J\u0113kabpils~042|J\u0113kabpils (City)~JKB|J\u016brmala (City)~JUR|Kandava~043|K\u0101rsava~044|Koc\u0113ni~045|Koknese~046|Kr\u0101slava~047|Krimulda~048|Krustpils~049|Kuld\u012bga~050|\u0136egums~051|\u0136ekava~052|Lielv\u0101rde~053|Liep\u0101ja~LPX|Limba\u017ei~054|L\u012bgatne~055|L\u012bv\u0101ni~056|Lub\u0101na~057|Ludza~058|Madona~059|Mazsalaca~060|M\u0101lpils~061|M\u0101rupe~062|M\u0113rsrags~063|Nauk\u0161\u0113ni~064|Nereta~065|N\u012bca~066|Ogre~067|Olaine~068|Ozolnieki~069|P\u0101rgauja~070|P\u0101vilosta~071|P\u013cavi\u0146as~072|Prei\u013ci~073|Priekule~074|Prieku\u013ci~075|Rauna~076|R\u0113zekne~077|R\u0113zekne (City)~REZ|Riebi\u0146i~078|R\u012bga~RIX|Roja~079|Ropa\u017ei~080|Rucava~081|Rug\u0101ji~082|Rund\u0101le~083|R\u016bjiena~084|Sala~085|Salacgr\u012bva~086|Salaspils~087|Saldus~088|Saulkrasti~089|S\u0113ja~090|Sigulda~091|Skr\u012bveri~092|Skrunda~093|Smiltene~094|Stopi\u0146i~095|Stren\u010di~096|Talsi~097|T\u0113rvete~098|Tukums~099|Vai\u0146ode~100|Valka~101|Valmiera~VMR|Varak\u013c\u0101ni~102|V\u0101rkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Vies\u012bte~107|Vi\u013caka~108|Vi\u013c\u0101ni~109|Zilupe~110"],["Lebanon","LB","Aakk\xe2r~AK|Baalbelk-Hermel~BH|B\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\xeey\xe9~NA"],["Lesotho","LS","Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K"],["Liberia","LR","Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI"],["Libya","LY","Al Bu\u0163n\u0101n~BU|Al Jabal al Akh\u1e11ar~JA|Al Jabal al Gharb\u012b~JG|Al Jaf\u0101rah~JI|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al W\u0101\u1e29\u0101t~WA|An Nuqa\u0163 al Khams~NQ|Az Z\u0101wiyah~ZA|Bangh\u0101z\u012b~BA|Darnah~DR|Gh\u0101t~GH|Mi\u015fr\u0101tah~MI|Murzuq~MQ|N\u0101l\u016bt~NL|Sabh\u0101~SB|Surt~SR|\u0162ar\u0101bulus~TB|Yafran~WD|W\u0101d\u012b ash Sh\u0101\u0163i\u02be~WS"],["Liechtenstein","LI","Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11"],["Lithuania","LT","Alytaus~AL|Kauno~KU|Klaip\u0117dos~KL|Marijampol\u0117s~MR|Panev\u0117\u017eio~PN|\u0160iauli\u0173~SA|Taurag\u0117s~TA|Tel\u0161i\u0173~TE|Utenos~UT|Vilniaus~VL"],["Luxembourg","LU","Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI"],["Macao","MO","Macao~undefined"],["Macedonia, Republic of","MK","Ara\u010dinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar \u017dupa~78|\u010ca\u0161ka~80|\u010ce\u0161inovo-Oble\u0161evo~81|\u010cu\u010der Sandevo~82|Debar~21|Debarca~22|Del\u010devo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Ki\u010devo~40|Ko\u010dani~42|Kon\u010de~41|Kratovo~43|Kriva Palanka~44|Krivoga\u0161tani~45|Kru\u0161evo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostu\u0161a~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Peh\u010devo~60|Petrovec~59|Plasnica~61|Prilep~62|Probi\u0161tip~63|Radovi\u0161~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopi\u0161te~70|Staro Nagori\u010dane~71|Struga~72|Strumica~73|Studeni\u010dani~74|Sveti Nikole~69|\u0160tip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vev\u010dani~12|Vinica~14|Vrap\u010di\u0161te~16|Zelenikovo~32|Zrnovci~33|\u017delino~30"],["Madagascar","MG","Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U"],["Malawi","MW","Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO"],["Malaysia","MY","Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16"],["Maldives","MV","Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~26|Laamu~05|Lhaviyani~03|Mal\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04"],["Mali","ML","Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6|Taoud\xe9nit~9|M\xe9naka~10"],["Malta","MT","Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Bir\u017cebbu\u0121a~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|G\u017cira~12|G\u0127ajnsielem~13|G\u0127arb~14|G\u0127arg\u0127ur~15|G\u0127asri~16|G\u0127axaq~17|\u0126amrun~18|Iklin~19|Isla~20|Kalkara~21|Ker\u010bem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellie\u0127a~30|M\u0121arr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat G\u0127awdex~45|Rabat Malta~46|Safi~47|San \u0120iljan~48|San \u0120wann~49|San Lawrenz~50|San Pawl il-Ba\u0127ar~51|Sannat~52|Santa Lu\u010bija~53|Santa Venera~54|Si\u0121\u0121iewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xag\u0127ra~61|Xewkija~62|Xg\u0127ajra~63|\u017babbar~64|\u017bebbu\u0121 G\u0127awde~65|\u017bebbu\u0121 Malta~66|\u017bejtun~67|\u017burrieq~68"],["Marshall Islands","MH","Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ"],["Martinique","MQ","Martinique~undefined"],["Mauritania","MR","Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06"],["Mauritius","MU","Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP"],["Mayotte","YT","Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\xe9l\xe9~05|Kani-K\xe9li~06|Bou\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17"],["Mexico","MX","Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\xe9xico~CMX|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\xe1n~YUC|Zacatecas~ZAC"],["Micronesia, Federated States of","FM","Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP"],["Moldova","MD","Aenii Noi~AN|Basarabeasca~BS|B\u0103l\u021bi~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|C\u0103l\u0103ra\u0219i~CL|C\u0103u\u0219eni~CS|Chi\u0219in\u0103u~CU|Cimi\u0219lia~CM|Criuleni~CR|Dondu\u0219eni~DO|Drochia~DR|Dub\u0103sari~DU|Edine\u021b~ED|F\u0103le\u0219ti~FA|Flore\u0219ti~FL|G\u0103g\u0103uzia~GA|Glodeni~GL|H\xeence\u0219ti~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocni\u021ba~OC|Orhei~OR|Rezina~RE|R\xee\u0219cani~RI|S\xeengerei~SI|Soroca~SO|St\xe2nga Nistrului~SN|Str\u0103\u0219eni~ST|\u0218old\u0103ne\u0219ti~SD|\u0218tefan Vod\u0103~SV|Taraclia~TA|Telene\u0219ti~TE|Ungheni~UN"],["Monaco","MC","Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\xe9vote~SD|Source~SO|Sp\xe9lugues~SP|Vallon de la Rousse~VR"],["Mongolia","MN","Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~057|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046|Erdenet~074"],["Montenegro","ME","Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kola\u0161in~09|Kotor~10|Mojkovac~11|Nik\u0161i\u0107~12|Petnica~23|Plav~13|Plu\u017eine~14|Pljevlja~15|Podgorica~16|Ro\u017eaje~17|\u0160avnik~18|Tivat~19|Ulcinj~20|\u017dabljak~21"],["Montserrat","MS","Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined"],["Morocco","MA","Tanger-T\xe9touan-Al Hoce\xefma~MA-01|L'Oriental~MA-02|F\xe8s-Mekn\xe8s~MA-03|Rabat-Sal\xe9-K\xe9nitra~MA-04|B\xe9ni Mellal-Kh\xe9nifra~MA-05|Casablanca-Settat~MA-06|Marrakech-Safi~MA-07|Dr\xe2a-Tafilalet~MA-08|Souss-Massa~MA-09|Guelmim-Oued Noun~MA-10|La\xe2youne-Sakia El Hamra~MA-11|Dakhla-Oued Ed-Dahab~MA-12"],["Mozambique","MZ","Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q"],["Myanmar","MM","Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06"],["Namibia","NA","Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA"],["Nauru","NR","Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14"],["Nepal","NP","Province No. 1~1|Madhesh Province~2|Bagmati Province~3|Gandaki Province~4|Lumbini Province~5|Karnali Province~6|Sudurpashchim Province~7"],["Netherlands","NL","Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH"],["New Caledonia","NC","Iles Loyaute~undefined|Nord~undefined|Sud~undefined"],["New Zealand","NZ","Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT"],["Nicaragua","NI","Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\xed~ES|Granada~GR|Jinotega~JI|Le\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\xedo San Juan~SJ|Rivas~RI|Atl\xe1ntico Norte~AN|Atl\xe1ntico Sur~AS"],["Niger","NE","Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\xe9ri~6|Zinder~7"],["Nigeria","NG","Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA"],["Niue","NU","Niue~undefined"],["Norfolk Island","NF","Norfolk Island~undefined"],["Northern Mariana Islands","MP","Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined"],["Norway","NO","Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\xf8re og Romsdal~15|Nordland~18|Nord-Tr\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\xf8r-Tr\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\xd8stfold~01|Jan Mayen~22|Svalbard~21"],["Oman","OM","Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU"],["Pakistan","PK","\u0100z\u0101d Kashm\u012br~JK|Bal\u014dchist\u0101n~BA|Gilgit-Baltist\u0101n~GB|Isl\u0101m\u0101b\u0101d~IS|Kha\u012bbar Pakht\u016bnkhw\u0101s~KP|Punj\u0101b~PB|Sindh~SD|Federally Administered Tribal Areas~TA"],["Palau","PW","Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~370"],["Palestine, State of","PS","Ak Khal\u012bl~HBN|Al Quds~JEM|Ar\u012b\u1e29\u0101 wal Aghw\u0101r~JRH|Bayt La\u1e29m~BTH|Dayr al Bala\u1e29~DEB|Ghazzah~GZA|Jan\u012bn~JEN|Kh\u0101n Y\u016bnis~KYS|N\u0101blus~NBS|Qalq\u012byah~QQA|Rafa\u1e29~RFH|R\u0101m All\u0101h wal B\u012brah~RBH|Salf\u012bt~SLT|Sham\u0101l Ghazzah~NGZ|\u0162\u016bb\u0101s~TBS|\u0162\u016blkarm~TKM"],["Panama","PA","Bocas del Toro~1|Chiriqu\xed~4|Cocl\xe9~2|Col\xf3n~3|Dari\xe9n~5|Ember\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\xe4be-Bugl\xe9~NB|Panam\xe1~8|Panam\xe1 Oeste~10|Veraguas~9"],["Papua New Guinea","PG","Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM"],["Paraguay","PY","Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Boqueron~17|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2"],["Peru","PE","Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA"],["Philippines","PH","Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Davao de Oro~COM|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Marinduque~MAD|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|South Cotabato~SCO|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI"],["Pitcairn","PN","Pitcairn Islands~undefined"],["Poland","PL","Dolno\u015bl\u0105skie~02|Kujawsko-pomorskie~04|\u0141\xf3dzkie~10|Lubelskie~06|Lubuskie~08|Ma\u0142opolskie~12|Mazowieckie~14|Opolskie~16|Podkarpackie~18|Podlaskie~20|Pomorskie~22|\u015al\u0105skie~24|\u015awi\u0119tokrzyskie~26|Warmi\u0144sko-mazurskie~28|Wielkopolskie~30|Zachodniopomorskie~32"],["Portugal","PT","A\xe7ores~20|Aveiro~01|Beja~02|Braga~03|Bragan\xe7a~04|Castelo Branco~05|Coimbra~06|\xc9vora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santar\xe9m~14|Set\xfabal~15|Viana do Castelo~16|Vila Real~17|Viseu~18"],["Puerto Rico","PR","Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined"],["Qatar","QA","Ad Daw\u1e29ah~DA|Al Khawr wa adh Dhakh\u012brah~KH|Al Wakrah~WA|Ar Rayy\u0101n~RA|Ash Sham\u0101l~MS|Az\u0327 Za\u0327`\u0101yin~ZA|Umm \u015eal\u0101l~US"],["R\xe9union","RE","R\xe9union~undefined"],["Romania","RO","Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Iifov~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN"],["Russian Federation","RU","Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB"],["Rwanda","RW","Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05"],["Saint Barth\xe9lemy","BL","Au Vent~02|Sous le Vent~01"],["Saint Helena, Ascension and Tristan da Cunha","SH","Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA"],["Saint Kitts and Nevis","KN","Saint Kitts~K|Nevis~N"],["Saint Lucia","LC","Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11"],["Saint Martin","MF","Saint Martin~undefined"],["Saint Pierre and Miquelon","PM","Miquelon~undefined|Saint Pierre~undefined"],["Saint Vincent and the Grenadines","VC","Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05"],["Samoa","WS","A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS"],["San Marino","SM","Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09"],["Sao Tome and Principe","ST","Principe~P|Sao Tome~S"],["Saudi Arabia","SA","'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07"],["Senegal","SN","Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG"],["Serbia","RS","Beograd (Belgrade)~00|Borski~14|Brani\u010devski~11|Jablani\u010dki~23|Ju\u017enoba\u010dki~06|Ju\u017enobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrova\u010dki~28|Kosovsko-Pomoravski~29|Ma\u010dvanski~08|Moravi\u010dki~17|Ni\u0161avski~20|P\u010dinjski~24|Pe\u0107ki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Ra\u0161ki~18|Severnoba\u010dki~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|\u0160umadijski~12|Topli\u010dki~21|Zaje\u010darski~15|Zapadnoba\u010dki~05|Zlatiborski~16"],["Seychelles","SC","Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23"],["Sierra Leone","SL","Eastern~E|Northern~N|Southern~S|Western~W"],["Singapore","SG","Central Singapore~01|North East~02|North West~03|South East~04|South West~05"],["Sint Maarten (Dutch part)","SX","Sint Maarten~undefined"],["Slovakia","SK","Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI"],["Slovenia","SI","Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~060|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~010|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193"],["Solomon Islands","SB","Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE"],["Somalia","SO","Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO"],["South Africa","ZA","Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC"],["South Georgia and South Sandwich Islands","GS","Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined"],["South Sudan","SS","Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW"],["Spain","ES","Albacete~AB|Alicante~A|Almer\xeda~AN|Araba/\xc1lava~VI|Asturias~O|\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\xe1ceres~CC|C\xe1diz~CA|Cantabria~S|Castell\xf3n/Castell\xf3~CS|Ceuta~CE|Ciudad Real~CR|C\xf3rdoba~CO|A Coru\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\xe9n~J|Le\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\xe1laga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/Val\xe8ncia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z"],["Sri Lanka","LK","Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8"],["Sudan","SD","Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC"],["Suriname","SR","Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA"],["Eswatini","SZ","Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH"],["Sweden","SE","Blekinge~K|Dalarna~W|G\xe4vleborg~X|Gotland~I|Halland~N|J\xe4mtland~Z|J\xf6nk\xf6ping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|\xd6rebro~T|\xd6sterg\xf6tland~E|Sk\xe5ne~M|S\xf6dermanland~D|Stockholm~AB|Uppsala~C|V\xe4rmland~S|V\xe4sterbotten~AC|V\xe4sternorrland~Y|V\xe4stmanland~U|V\xe4stra G\xf6taland~O"],["Switzerland","CH","Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\xe8ve~GE|Glarus~GL|Graub\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\xfcrich~ZH"],["Syrian Arab Republic","SY","Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA"],["Taiwan","TW","Changhua~CHA|Chiayi~CYQ|Hsinchu~HSQ|Hualien~HUA|Kaohsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miaoli~MIA|Nantou~NAN|Penghu~PEN|New Taipei~NWT|Pingtung~PIF|Taichung~TXG|Tainan~TNN|Taipei~TPE|Taitung~TTT|Taoyuan~TAO|Yilan~ILA|Yunlin~YUN"],["Tajikistan","TJ","Dushanbe~DU|K\u016dhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU"],["Tanzania, United Republic of","TZ","Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15"],["Thailand","TH","Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~67|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35"],["Timor-Leste","TL","Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI"],["Togo","TG","Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S"],["Tokelau","TK","Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined"],["Tonga","TO","'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05"],["Trinidad and Tobago","TT","Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP"],["Tunisia","TN","Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22"],["Turkey","TR","Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67"],["Turkmenistan","TM","Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M"],["Turks and Caicos Islands","TC","Turks and Caicos Islands~undefined"],["Tuvalu","TV","Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU"],["Uganda","UG","Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313"],["Ukraine","UA","Cherkaska oblast~71|Chernihivska oblast~74|Chernivetska oblast~77|Dnipropetrovska oblast~12|Donetska oblast~14|Ivano-Frankivska oblast~26|Kharkivska oblast~63|Khersonska oblast~65|Khmelnytska oblast~68|Kyivska oblast~32|Kirovohradska oblast~35|Luhanska oblast~09|Lvivska oblast~46|Mykolaivska oblast~48|Odeska oblast~51|Poltavska oblast~53|Rivnenska oblast~56|Sumska oblast~59|Ternopilska oblast~61|Vinnytska oblast~05|Volynska oblast~07|Zakarpatska oblast~21|Zaporizka oblast~23|Zhytomyrska oblast~18|Avtonomna Respublika Krym~43|Kyiv~30|Sevastopol~40"],["United Arab Emirates","AE","Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ"],["United Kingdom","GB","Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh City, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast City~BFS|Berkshire~BRK|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth, Christchurch and Poole~BCP|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham, County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid-Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda Cynon Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|Salford~SLF|Sandwell~SAW|Scottish Borders~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|St. Helens~SHN|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR"],["United States","US","Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP"],["United States Minor Outlying Islands","UM","Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB"],["Uruguay","UY","Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\xfa~PA|R\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\xe9~SJ|Soriano~SO|Tacuaremb\xf3~TA|Treinta y Tres~TT"],["Uzbekistan","UZ","Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg\u2018ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog\u2018iston Respublikasi (Nukus)~QR"],["Vanuatu","VU","Malampa~MAP|P\xe9nama~PAM|Sanma~SAM|Sh\xe9fa~SEE|Taf\xe9a~TAE|Torba~TOB"],["Venezuela, Bolivarian Republic of","VE","Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\xf3n~I|Gu\xe1rico~J|Lara~K|M\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V"],["Vietnam","VN","An Giang~44|B\xe0 R\u1ecba - V\u0169ng T\xe0u~43|B\xecnh D\u01b0\u01a1ng~57|B\xecnh Ph\u01b0\u1edbc~58|B\xecnh \u0110\u1ecbnh~31|B\xecnh Thu\u1eadn~40|B\u1ea1c Li\xeau~55|B\u1eafc Giang~54|B\u1eafc K\u1ea1n~53|B\u1eafc Ninh~56|B\u1ebfn Tre~50|Cao B\u1eb1ng~04|C\xe0 Mau~59|\u0110\u1eafk L\u1eafk~33|\u0110\u1eafk N\xf4ng~72|\u0110i\u1ec7n Bi\xean~71|\u0110\u1ed3ng Nai~39|\u0110\u1ed3ng Th\xe1p~45|Gia Lai~30|H\xe0 Giang~03|H\xe0 Nam~63|H\xe0 T\xe2y~15|H\xe0 T\u0129nh~23|H\u1ea3i D\u01b0\u01a1ng~61|H\u1eadu Giang~73|H\xf2a B\xecnh~14|H\u01b0ng Y\xean~66|Kh\xe1nh H\xf2a~34|Ki\xean Giang~47|Kon Tum~28|Lai Ch\xe2u~01|L\xe2m \u0110\u1ed3ng~35|L\u1ea1ng S\u01a1n~09|L\xe0o Cai~02|Long An~41|Nam \u0110\u1ecbnh~67|Ngh\u1ec7 An~22|Ninh B\xecnh~18|Ninh Thu\u1eadn~36|Ph\xfa Th\u1ecd~68|Ph\xfa Y\xean~32|Qu\u1ea3ng B\xecnh~24|Qu\u1ea3ng Nam~27|Qu\u1ea3ng Ng\xe3i~29|Qu\u1ea3ng Ninh~13|Qu\u1ea3ng Tr\u1ecb~25|S\xf3c Tr\u0103ng~52|S\u01a1n La~05|T\xe2y Ninh~37|Th\xe1i B\xecnh~20|Th\xe1i Nguy\xean~69|Thanh H\xf3a~21|Th\u1eeba Thi\xean\u2013Hu\u1ebf~26|Ti\u1ec1n Giang~46|Tr\xe0 Vinh~51|Tuy\xean Quang~07|V\u0129nh Long~49|V\u0129nh Ph\xfac~70|Y\xean B\xe1i~06|C\u1ea7n Th\u01a1~CT|\u0110\xe0 N\u1eb5ng~DN|H\xe0 N\u1ed9i~HN|H\u1ea3i Ph\xf2ng~HP|H\u1ed3 Ch\xed Minh (S\xe0i G\xf2n)~SG"],["Virgin Islands, British","VG","Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD"],["Virgin Islands, U.S.","VI","St. Thomas~STH|St. John~SJO|St. Croix~SCR"],["Wallis and Futuna","WF","Alo~ALO|Sigave~SIG|Wallis~WAL"],["Western Sahara","EH","Es Smara~ESM|Boujdour~BOD|La\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD"],["Yemen","YE","Aby\u0101n~AB|'Adan~AD|A\u1e11 \u1e10\u0101li'~DA|Al Bay\u1e11\u0101'~BA|Al \u1e28udaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Ma\u1e29w\u012bt~MW|'Amr\u0101n~AM|Dham\u0101r~DH|\u1e28a\u1e11ramawt~HD|\u1e28ajjah~HJ|Ibb~IB|La\u1e29ij~LA|Ma'rib~MA|Raymah~RA|\u015e\u0101\u2018dah~SD|\u015ean\u2018\u0101'~SN|Shabwah~SH|T\u0101\u2018izz~TA"],["Zambia","ZM","Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01"],["Zimbabwe","ZW","Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI"]],u="full",d="short",s="|",l="~",c=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},f=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},p=function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},g=function(e,t){var n={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},m=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t},y=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,r=!1,i=void 0;try{for(var o,u=e[Symbol.iterator]();!(a=(o=u.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(d){r=!0,i=d}finally{try{!a&&u.return&&u.return()}finally{if(r)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},v=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)},$=function(e,t,n,a){var r=[],i=e;return n.length>0?i=e.filter((function(e){var t=y(e,2)[1];return n.indexOf(t)>-1})):a.length>0&&(i=e.filter((function(e){var t=y(e,2)[1];return-1===a.indexOf(t)}))),t.length>0&&(t.forEach((function(e){var t=i.find((function(t){return y(t,2)[1]===e}));t&&r.push(t)})),i=i.filter((function(e){var n=y(e,2)[1];return-1===t.indexOf(n)}))),r.length?[].concat(r,v(i)):i},b=function(e){function t(e){c(this,t);var n=m(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={countries:$(o,e.priorityOptions,e.whitelist,e.blacklist)},n}return p(t,e),f(t,[{key:"getCountries",value:function(){var e=this.props,t=e.valueType,n=e.labelType;return this.state.countries.map((function(e){var r=y(e,2),i=r[0],o=r[1];return a.createElement("option",{value:t===d?o:i,key:o},n===d?o:i)}))}},{key:"getDefaultOption",value:function(){var e=this.props,t=e.showDefaultOption,n=e.defaultOptionLabel;return t?a.createElement("option",{value:"",key:"default"},n):null}},{key:"render",value:function(){var e=this.props,t=e.name,n=e.id,r=e.classes,i=e.value,o=e.onChange,u=e.onBlur,d=e.disabled,s=(e.showDefaultOption,e.defaultOptionLabel,e.labelType,e.valueType,e.whitelist,e.blacklist,e.customOptions,e.priorityOptions,g(e,["name","id","classes","value","onChange","onBlur","disabled","showDefaultOption","defaultOptionLabel","labelType","valueType","whitelist","blacklist","customOptions","priorityOptions"])),l=h({},s,{name:t,value:i,onChange:function(e){return o(e.target.value,e)},onBlur:function(e){return u(e.target.value,e)},disabled:d});return n&&(l.id=n),r&&(l.className=r),a.createElement("select",l,this.getDefaultOption(),this.getCountries())}}]),t}(a.Component);b.propTypes={value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().oneOfType([i().string,i().number]),priorityOptions:i().array,onChange:i().func,onBlur:i().func,labelType:i().oneOf([u,d]),valueType:i().oneOf([u,d]),whitelist:i().array,blacklist:i().array,disabled:i().bool},b.defaultProps={value:"",name:"rcrs-country",id:"",classes:"",showDefaultOption:!0,defaultOptionLabel:"Select Country",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:u,valueType:u,whitelist:[],blacklist:[],disabled:!1};var S=function(e){function t(e){c(this,t);var n=m(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={regions:n.getRegions(e.country)},n.getRegions=n.getRegions.bind(n),n}return p(t,e),f(t,[{key:"componentDidUpdate",value:function(e){var t=this.props.country;if(t!==e.country){var n=this.getRegions(t);this.setState({regions:[].concat(v(n),v(this.getCustomOptions(n)))})}}},{key:"getCustomOptions",value:function(e){var t=this.props.customOptions,n=this.getDuplicates(e);return n.length?(console.error("Error: Duplicate regions present: "+n.toString()+".\nThe above item(s) is/are already getting added to the region dropdown by the library."),[]):t.map((function(e){if(e)return{regionName:e,regionShortCode:e}}))}},{key:"getDuplicates",value:function(e){var t=this.props,n=t.customOptions,a=t.valueType===u?"regionName":"regionShortCode";return e.filter((function(e){return-1!==n.indexOf(e[a])})).map((function(e){return e[a]}))}},{key:"getRegions",value:function(e){if(!e)return[];var t=this.props,n=t.countryValueType,a=t.whitelist,r=t.blacklist,i=n===u?0:1,d=[];if(o.forEach((function(t){t[i]===e&&(d=t)})),!d||0===d.length)return console.error("Error. Unknown country passed: "+e+'. If you\'re passing a country shortcode, be sure to include countryValueType="short" on the RegionDropdown'),[];var c=function(e,t,n){var a=y(e,3),r=a[0],i=a[1],o=a[2],u=t.hasOwnProperty(i)?t[i]:[],d=n.hasOwnProperty(i)?n[i]:[],s=o.split("|");return u.length>0&&s.length>0?s=s.filter((function(e){for(var t=0,n=u.length;t<n;t++)if(e.indexOf(u[t])>-1)return!0;return!1})):d.length>0&&s.length>0&&(s=s.filter((function(e){for(var t=0,n=d.length;t<n;t++)if(e.indexOf(d[t])>-1)return!1;return!0}))),[r,i,s.join("|")]}(d,a,r);return c[2].split(s).map((function(e){var t=e.split(l),n=y(t,2),a=n[0],r=n[1];return{regionName:a,regionShortCode:void 0===r?null:r}}))}},{key:"getRegionList",value:function(){var e=this.props,t=e.labelType,n=e.valueType;return this.state.regions.map((function(e){var r=e.regionName,i=e.regionShortCode,o=t===u?r:i,d=n===u?r:i;return a.createElement("option",{value:d,key:r},o)}))}},{key:"getDefaultOption",value:function(){var e=this.props,t=e.blankOptionLabel,n=e.showDefaultOption,r=e.defaultOptionLabel;return e.country?n?a.createElement("option",{value:""},r):null:a.createElement("option",{value:""},t)}},{key:"render",value:function(){var e=this.props,t=e.value,n=e.country,r=e.onChange,i=e.onBlur,o=e.id,u=e.name,d=e.classes,s=e.disabled,l=(e.blankOptionLabel,e.showDefaultOption,e.defaultOptionLabel,e.labelType,e.valueType,e.countryValueType,e.disableWhenEmpty),c=(e.customOptions,g(e,["value","country","onChange","onBlur","id","name","classes","disabled","blankOptionLabel","showDefaultOption","defaultOptionLabel","labelType","valueType","countryValueType","disableWhenEmpty","customOptions"])),f=h({},c,{name:u,value:t,onChange:function(e){return r(e.target.value,e)},onBlur:function(e){return i(e.target.value,e)},disabled:s||l&&""===n});return o&&(f.id=o),d&&(f.className=d),a.createElement("select",f,this.getDefaultOption(),this.getRegionList())}}]),t}(a.PureComponent);S.propTypes={country:i().string,countryValueType:i().oneOf([u,d]),value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,blankOptionLabel:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().string,onChange:i().func,onBlur:i().func,labelType:i().string,valueType:i().string,whitelist:i().object,blacklist:i().object,disabled:i().bool,disableWhenEmpty:i().bool,customOptions:i().array},S.defaultProps={country:"",value:"",name:"rcrs-region",id:"",classes:"",blankOptionLabel:"-",showDefaultOption:!0,defaultOptionLabel:"Select Region",onChange:function(){},onBlur:function(){},countryValueType:u,labelType:u,valueType:u,whitelist:{},blacklist:{},disabled:!1,disableWhenEmpty:!1,customOptions:[]}},1564:function(e){var t=/[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?|\d*(?:1ST|2ND|3RD|(?![123])\dTH)(?=\b|[a-z_])|\d*(?:1st|2nd|3rd|(?![123])\dth)(?=\b|[A-Z_])|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g,n=function(e){return e.match(t)||[]},a=function(e){return e[0].toUpperCase()+e.slice(1)},r=function(e,t){return n(e).join(t).toLowerCase()},i=function(e){return n(e).reduce((function(e,t){return"".concat(e).concat(e?t[0].toUpperCase()+t.slice(1).toLowerCase():t.toLowerCase())}),"")};e.exports={words:n,upperFirst:a,camelCase:i,pascalCase:function(e){return a(i(e))},snakeCase:function(e){return r(e,"_")},kebabCase:function(e){return r(e,"-")},sentenceCase:function(e){return a(r(e," "))},titleCase:function(e){return n(e).map(a).join(" ")}}},6514:function(e){function t(e,t){var n=e.length,a=new Array(n),r={},i=n,o=function(e){for(var t=new Map,n=0,a=e.length;n<a;n++){var r=e[n];t.has(r[0])||t.set(r[0],new Set),t.has(r[1])||t.set(r[1],new Set),t.get(r[0]).add(r[1])}return t}(t),u=function(e){for(var t=new Map,n=0,a=e.length;n<a;n++)t.set(e[n],n);return t}(e);for(t.forEach((function(e){if(!u.has(e[0])||!u.has(e[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")}));i--;)r[i]||d(e[i],i,new Set);return a;function d(e,t,i){if(i.has(e)){var s;try{s=", node was:"+JSON.stringify(e)}catch(f){s=""}throw new Error("Cyclic dependency"+s)}if(!u.has(e))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(e));if(!r[t]){r[t]=!0;var l=o.get(e)||new Set;if(t=(l=Array.from(l)).length){i.add(e);do{var c=l[--t];d(c,u.get(c),i)}while(t);i.delete(e)}a[--n]=e}}}e.exports=function(e){return t(function(e){for(var t=new Set,n=0,a=e.length;n<a;n++){var r=e[n];t.add(r[0]),t.add(r[1])}return Array.from(t)}(e),e)},e.exports.array=t},6727:function(e,t,n){"use strict";n.d(t,{Ry:function(){return ke},Z_:function(){return ce}});var a=n(1120);function r(){return r="undefined"!==typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=(0,a.Z)(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},r.apply(this,arguments)}var i=n(4942),o=n(9439),u=n(7762),d=n(3433),s=n(5671),l=n(3144),c=n(7326),f=n(136),h=n(7277),p=n(8737),g=n(2758),m=n(1564),y=n(6514),v=n.n(y),$=Object.prototype.toString,b=Error.prototype.toString,S=RegExp.prototype.toString,C="undefined"!==typeof Symbol?Symbol.prototype.toString:function(){return""},A=/^Symbol\((.*)\)(.*)$/;function k(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null==e||!0===e||!1===e)return""+e;var n=typeof e;if("number"===n)return function(e){return e!=+e?"NaN":0===e&&1/e<0?"-0":""+e}(e);if("string"===n)return t?'"'.concat(e,'"'):e;if("function"===n)return"[Function "+(e.name||"anonymous")+"]";if("symbol"===n)return C.call(e).replace(A,"Symbol($1)");var a=$.call(e).slice(8,-1);return"Date"===a?isNaN(e.getTime())?""+e:e.toISOString(e):"Error"===a||e instanceof Error?"["+b.call(e)+"]":"RegExp"===a?S.call(e):null}function N(e,t){var n=k(e,t);return null!==n?n:JSON.stringify(e,(function(e,n){var a=k(this[e],t);return null!==a?a:n}),2)}function O(e){return null==e?[]:[].concat(e)}var P=/\$\{\s*(\w+)\s*\}/g,M=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(e,a,r,i){var o;return(0,s.Z)(this,n),(o=t.call(this)).value=void 0,o.path=void 0,o.type=void 0,o.errors=void 0,o.params=void 0,o.inner=void 0,o.name="ValidationError",o.value=a,o.path=r,o.type=i,o.errors=[],o.inner=[],O(e).forEach((function(e){var t;n.isError(e)?((t=o.errors).push.apply(t,(0,d.Z)(e.errors)),o.inner=o.inner.concat(e.inner.length?e.inner:e)):o.errors.push(e)})),o.message=o.errors.length>1?"".concat(o.errors.length," errors occurred"):o.errors[0],Error.captureStackTrace&&Error.captureStackTrace((0,c.Z)(o),n),o}return(0,l.Z)(n,null,[{key:"formatError",value:function(e,t){var n=t.label||t.path||"this";return n!==t.path&&(t=Object.assign({},t,{path:n})),"string"===typeof e?e.replace(P,(function(e,n){return N(t[n])})):"function"===typeof e?e(t):e}},{key:"isError",value:function(e){return e&&"ValidationError"===e.name}}]),n}((0,p.Z)(Error)),T={default:"${path} is invalid",required:"${path} is a required field",defined:"${path} must be defined",notNull:"${path} cannot be null",oneOf:"${path} must be one of the following values: ${values}",notOneOf:"${path} must not be one of the following values: ${values}",notType:function(e){var t=e.path,n=e.type,a=e.value,r=e.originalValue,i=null!=r&&r!==a?" (cast from the value `".concat(N(r,!0),"`)."):".";return"mixed"!==n?"".concat(t," must be a `").concat(n,"` type, ")+"but the final value was: `".concat(N(a,!0),"`")+i:"".concat(t," must match the configured type. ")+"The validated value was: `".concat(N(a,!0),"`")+i}},B={length:"${path} must be exactly ${length} characters",min:"${path} must be at least ${min} characters",max:"${path} must be at most ${max} characters",matches:'${path} must match the following: "${regex}"',email:"${path} must be a valid email",url:"${path} must be a valid URL",uuid:"${path} must be a valid UUID",trim:"${path} must be a trimmed string",lowercase:"${path} must be a lowercase string",uppercase:"${path} must be a upper case string"},w={min:"${path} must be greater than or equal to ${min}",max:"${path} must be less than or equal to ${max}",lessThan:"${path} must be less than ${less}",moreThan:"${path} must be greater than ${more}",positive:"${path} must be a positive number",negative:"${path} must be a negative number",integer:"${path} must be an integer"},E={min:"${path} field must be later than ${min}",max:"${path} field must be at earlier than ${max}"},x={isValue:"${path} field must be ${value}"},I={noUnknown:"${path} field has unspecified keys: ${unknown}"},L={min:"${path} field must have at least ${min} items",max:"${path} field must have less than or equal to ${max} items",length:"${path} must have ${length} items"},D=function(e){var t=e.path,n=e.value,a=e.spec.types.length;if(Array.isArray(n)){if(n.length<a)return"".concat(t," tuple value has too few items, expected a length of ").concat(a," but got ").concat(n.length," for value: `").concat(N(n,!0),"`");if(n.length>a)return"".concat(t," tuple value has too many items, expected a length of ").concat(a," but got ").concat(n.length," for value: `").concat(N(n,!0),"`")}return M.formatError(T.notType,e)},R=(Object.assign(Object.create(null),{mixed:T,string:B,number:w,date:E,object:I,array:L,boolean:x}),function(e){return e&&e.__isYupSchema__}),K=function(){function e(t,n){(0,s.Z)(this,e),this.fn=void 0,this.refs=t,this.refs=t,this.fn=n}return(0,l.Z)(e,[{key:"resolve",value:function(e,t){var n=this.refs.map((function(e){return e.getValue(null==t?void 0:t.value,null==t?void 0:t.parent,null==t?void 0:t.context)})),a=this.fn(n,e,t);if(void 0===a||a===e)return e;if(!R(a))throw new TypeError("conditions must return a schema object");return a.resolve(t)}}],[{key:"fromOptions",value:function(t,n){if(!n.then&&!n.otherwise)throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");var a=n.is,r=n.then,i=n.otherwise,o="function"===typeof a?a:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.every((function(e){return e===a}))};return new e(t,(function(e,t){var n,a=o.apply(void 0,(0,d.Z)(e))?r:i;return null!=(n=null==a?void 0:a(t))?n:t}))}}]),e}(),j="$",F=".";var G=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if((0,s.Z)(this,e),this.key=void 0,this.isContext=void 0,this.isValue=void 0,this.isSibling=void 0,this.path=void 0,this.getter=void 0,this.map=void 0,"string"!==typeof t)throw new TypeError("ref must be a string, got: "+t);if(this.key=t.trim(),""===t)throw new TypeError("ref must be a non-empty string");this.isContext=this.key[0]===j,this.isValue=this.key[0]===F,this.isSibling=!this.isContext&&!this.isValue;var a=this.isContext?j:this.isValue?F:"";this.path=this.key.slice(a.length),this.getter=this.path&&(0,g.getter)(this.path,!0),this.map=n.map}return(0,l.Z)(e,[{key:"getValue",value:function(e,t,n){var a=this.isContext?n:this.isValue?e:t;return this.getter&&(a=this.getter(a||{})),this.map&&(a=this.map(a)),a}},{key:"cast",value:function(e,t){return this.getValue(e,null==t?void 0:t.parent,null==t?void 0:t.context)}},{key:"resolve",value:function(){return this}},{key:"describe",value:function(){return{type:"ref",key:this.key}}},{key:"toString",value:function(){return"Ref(".concat(this.key,")")}}],[{key:"isRef",value:function(e){return e&&e.__isYupRef}}]),e}();G.prototype.__isYupRef=!0;var Z=function(e){return null==e};function V(e){function t(t,n,a){var r=t.value,i=t.path,o=void 0===i?"":i,u=t.options,d=t.originalValue,s=t.schema,l=e.name,c=e.test,f=e.params,h=e.message,p=e.skipAbsent,g=u.parent,m=u.context,y=u.abortEarly;function v(e){return G.isRef(e)?e.getValue(r,g,m):e}function $(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({value:r,originalValue:d,label:s.spec.label,path:e.path||o,spec:s.spec},f,e.params),n=0,a=Object.keys(t);n<a.length;n++){var i=a[n];t[i]=v(t[i])}var u=new M(M.formatError(e.message||h,t),r,t.path,e.type||l);return u.params=t,u}var b=(void 0===y?s.spec.abortEarly:y)?n:a,S={path:o,parent:g,type:l,from:u.from,createError:$,resolve:v,options:u,originalValue:d,schema:s},C=function(e){M.isError(e)?b(e):e?a(null):b($())},A=function(e){M.isError(e)?b(e):n(e)},k=p&&Z(r);if(u.sync){var N;try{var O;if("function"===typeof(null==(O=N=!!k||c.call(S,r,S))?void 0:O.then))throw new Error('Validation test of type: "'.concat(S.type,'" returned a Promise during a synchronous validate. ')+"This test will finish after the validate call has returned")}catch(P){return void A(P)}C(N)}else try{Promise.resolve(!!k||c.call(S,r,S)).then(C,A)}catch(P){A(P)}}return t.OPTIONS=e,t}function H(e,t,n){var a,r,i,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n;return t?((0,g.forEach)(t,(function(u,d,s){var l=d?u.slice(1,u.length-1):u,c="tuple"===(e=e.resolve({context:o,parent:a,value:n})).type,f=s?parseInt(l,10):0;if(e.innerType||c){if(c&&!s)throw new Error('Yup.reach cannot implicitly index into a tuple type. the path part "'.concat(i,'" must contain an index to the tuple element, e.g. "').concat(i,'[0]"'));if(n&&f>=n.length)throw new Error("Yup.reach cannot resolve an array item at index: ".concat(u,", in the path: ").concat(t,". ")+"because there is no value at that index. ");a=n,n=n&&n[f],e=c?e.spec.types[f]:e.innerType}if(!s){if(!e.fields||!e.fields[l])throw new Error("The schema does not contain the path: ".concat(t,". ")+"(failed at: ".concat(i,' which is a type: "').concat(e.type,'")'));a=n,n=n&&n[l],e=e.fields[l]}r=l,i=d?"["+u+"]":"."+u})),{schema:e,parent:a,parentPath:r}):{parent:a,parentPath:t,schema:e}}var U=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(){return(0,s.Z)(this,n),t.apply(this,arguments)}return(0,l.Z)(n,[{key:"describe",value:function(){var e,t=[],n=(0,u.Z)(this.values());try{for(n.s();!(e=n.n()).done;){var a=e.value;t.push(G.isRef(a)?a.describe():a)}}catch(r){n.e(r)}finally{n.f()}return t}},{key:"resolveAll",value:function(e){var t,n=[],a=(0,u.Z)(this.values());try{for(a.s();!(t=a.n()).done;){var r=t.value;n.push(e(r))}}catch(i){a.e(i)}finally{a.f()}return n}},{key:"clone",value:function(){return new n(this.values())}},{key:"merge",value:function(e,t){var n=this.clone();return e.forEach((function(e){return n.add(e)})),t.forEach((function(e){return n.delete(e)})),n}}]),n}((0,p.Z)(Set));function _(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(R(e)||!e||"object"!==typeof e)return e;if(n.has(e))return n.get(e);if(e instanceof Date)t=new Date(e.getTime()),n.set(e,t);else if(e instanceof RegExp)t=new RegExp(e),n.set(e,t);else if(Array.isArray(e)){t=new Array(e.length),n.set(e,t);for(var a=0;a<e.length;a++)t[a]=_(e[a],n)}else if(e instanceof Map){t=new Map,n.set(e,t);var r,i=(0,u.Z)(e.entries());try{for(i.s();!(r=i.n()).done;){var d=(0,o.Z)(r.value,2),s=d[0],l=d[1];t.set(s,_(l,n))}}catch($){i.e($)}finally{i.f()}}else if(e instanceof Set){t=new Set,n.set(e,t);var c,f=(0,u.Z)(e);try{for(f.s();!(c=f.n()).done;){var h=c.value;t.add(_(h,n))}}catch($){f.e($)}finally{f.f()}}else{if(!(e instanceof Object))throw Error("Unable to clone ".concat(e));t={},n.set(e,t);for(var p=0,g=Object.entries(e);p<g.length;p++){var m=(0,o.Z)(g[p],2),y=m[0],v=m[1];t[y]=_(v,n)}}return t}var W=function(){function e(t){var n=this;(0,s.Z)(this,e),this.type=void 0,this.deps=[],this.tests=void 0,this.transforms=void 0,this.conditions=[],this._mutate=void 0,this.internalTests={},this._whitelist=new U,this._blacklist=new U,this.exclusiveTests=Object.create(null),this._typeCheck=void 0,this.spec=void 0,this.tests=[],this.transforms=[],this.withMutation((function(){n.typeError(T.notType)})),this.type=t.type,this._typeCheck=t.check,this.spec=Object.assign({strip:!1,strict:!1,abortEarly:!0,recursive:!0,nullable:!1,optional:!0,coerce:!0},null==t?void 0:t.spec),this.withMutation((function(e){e.nonNullable()}))}return(0,l.Z)(e,[{key:"_type",get:function(){return this.type}},{key:"clone",value:function(e){if(this._mutate)return e&&Object.assign(this.spec,e),this;var t=Object.create(Object.getPrototypeOf(this));return t.type=this.type,t._typeCheck=this._typeCheck,t._whitelist=this._whitelist.clone(),t._blacklist=this._blacklist.clone(),t.internalTests=Object.assign({},this.internalTests),t.exclusiveTests=Object.assign({},this.exclusiveTests),t.deps=(0,d.Z)(this.deps),t.conditions=(0,d.Z)(this.conditions),t.tests=(0,d.Z)(this.tests),t.transforms=(0,d.Z)(this.transforms),t.spec=_(Object.assign({},this.spec,e)),t}},{key:"label",value:function(e){var t=this.clone();return t.spec.label=e,t}},{key:"meta",value:function(){if(0===arguments.length)return this.spec.meta;var e=this.clone();return e.spec.meta=Object.assign(e.spec.meta||{},arguments.length<=0?void 0:arguments[0]),e}},{key:"withMutation",value:function(e){var t=this._mutate;this._mutate=!0;var n=e(this);return this._mutate=t,n}},{key:"concat",value:function(e){if(!e||e===this)return this;if(e.type!==this.type&&"mixed"!==this.type)throw new TypeError("You cannot `concat()` schema's of different types: ".concat(this.type," and ").concat(e.type));var t=this,n=e.clone(),a=Object.assign({},t.spec,n.spec);return n.spec=a,n.internalTests=Object.assign({},t.internalTests,n.internalTests),n._whitelist=t._whitelist.merge(e._whitelist,e._blacklist),n._blacklist=t._blacklist.merge(e._blacklist,e._whitelist),n.tests=t.tests,n.exclusiveTests=t.exclusiveTests,n.withMutation((function(t){e.tests.forEach((function(e){t.test(e.OPTIONS)}))})),n.transforms=[].concat((0,d.Z)(t.transforms),(0,d.Z)(n.transforms)),n}},{key:"isType",value:function(e){return null==e?!(!this.spec.nullable||null!==e)||!(!this.spec.optional||void 0!==e):this._typeCheck(e)}},{key:"resolve",value:function(e){var t=this;if(t.conditions.length){var n=t.conditions;(t=t.clone()).conditions=[],t=(t=n.reduce((function(t,n){return n.resolve(t,e)}),t)).resolve(e)}return t}},{key:"resolveOptions",value:function(e){var t,n,a;return Object.assign({},e,{from:e.from||[],strict:null!=(t=e.strict)?t:this.spec.strict,abortEarly:null!=(n=e.abortEarly)?n:this.spec.abortEarly,recursive:null!=(a=e.recursive)?a:this.spec.recursive})}},{key:"cast",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.resolve(Object.assign({value:e},t)),a="ignore-optionality"===t.assert,r=n._cast(e,t);if(!1!==t.assert&&!n.isType(r)){if(a&&Z(r))return r;var i=N(e),o=N(r);throw new TypeError("The value of ".concat(t.path||"field"," could not be cast to a value ")+'that satisfies the schema type: "'.concat(n.type,'". \n\n')+"attempted value: ".concat(i," \n")+(o!==i?"result of cast: ".concat(o):""))}return r}},{key:"_cast",value:function(e,t){var n=this,a=void 0===e?e:this.transforms.reduce((function(t,a){return a.call(n,t,e,n)}),e);return void 0===a&&(a=this.getDefault(t)),a}},{key:"_validate",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,i=n.path,o=n.originalValue,u=void 0===o?e:o,d=n.strict,s=void 0===d?this.spec.strict:d,l=e;s||(l=this._cast(l,Object.assign({assert:!1},n)));for(var c=[],f=0,h=Object.values(this.internalTests);f<h.length;f++){var p=h[f];p&&c.push(p)}this.runTests({path:i,value:l,originalValue:u,options:n,tests:c},a,(function(e){if(e.length)return r(e,l);t.runTests({path:i,value:l,originalValue:u,options:n,tests:t.tests},a,r)}))}},{key:"runTests",value:function(e,t,n){var a=!1,r=e.tests,i=e.value,o=e.originalValue,u=e.path,d=e.options,s=function(e){a||(a=!0,t(e,i))},l=function(e){a||(a=!0,n(e,i))},c=r.length,f=[];if(!c)return l([]);for(var h={value:i,originalValue:o,path:u,options:d,schema:this},p=0;p<r.length;p++){(0,r[p])(h,s,(function(e){e&&(f=f.concat(e)),--c<=0&&l(f)}))}}},{key:"asNestedTest",value:function(e){var t,n=this,a=e.key,r=e.index,o=e.parent,u=e.parentPath,d=e.originalParent,s=e.options,l=null!=a?a:r;if(null==l)throw TypeError("Must include `key` or `index` for nested validations");var c="number"===typeof l,f=o[l],h=Object.assign({},s,(t={strict:!0,parent:o,value:f,originalValue:d[l],key:void 0},(0,i.Z)(t,c?"index":"key",l),(0,i.Z)(t,"path",c||l.includes(".")?"".concat(u||"","[").concat(f?l:'"'.concat(l,'"'),"]"):(u?"".concat(u,"."):"")+a),t));return function(e,t,a){return n.resolve(h)._validate(f,h,t,a)}}},{key:"validate",value:function(e,t){var n=this.resolve(Object.assign({},t,{value:e}));return new Promise((function(a,r){return n._validate(e,t,(function(e,t){M.isError(e)&&(e.value=t),r(e)}),(function(e,t){e.length?r(new M(e,t)):a(t)}))}))}},{key:"validateSync",value:function(e,t){var n;return this.resolve(Object.assign({},t,{value:e}))._validate(e,Object.assign({},t,{sync:!0}),(function(e,t){throw M.isError(e)&&(e.value=t),e}),(function(t,a){if(t.length)throw new M(t,e);n=a})),n}},{key:"isValid",value:function(e,t){return this.validate(e,t).then((function(){return!0}),(function(e){if(M.isError(e))return!1;throw e}))}},{key:"isValidSync",value:function(e,t){try{return this.validateSync(e,t),!0}catch(n){if(M.isError(n))return!1;throw n}}},{key:"_getDefault",value:function(e){var t=this.spec.default;return null==t?t:"function"===typeof t?t.call(this,e):_(t)}},{key:"getDefault",value:function(e){return this.resolve(e||{})._getDefault(e)}},{key:"default",value:function(e){return 0===arguments.length?this._getDefault():this.clone({default:e})}},{key:"strict",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.clone({strict:e})}},{key:"nullability",value:function(e,t){var n=this.clone({nullable:e});return n.internalTests.nullable=V({message:t,name:"nullable",test:function(e){return null!==e||this.schema.spec.nullable}}),n}},{key:"optionality",value:function(e,t){var n=this.clone({optional:e});return n.internalTests.optionality=V({message:t,name:"optionality",test:function(e){return void 0!==e||this.schema.spec.optional}}),n}},{key:"optional",value:function(){return this.optionality(!0)}},{key:"defined",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T.defined;return this.optionality(!1,e)}},{key:"nullable",value:function(){return this.nullability(!0)}},{key:"nonNullable",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T.notNull;return this.nullability(!1,e)}},{key:"required",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T.required;return this.clone().withMutation((function(t){return t.nonNullable(e).defined(e)}))}},{key:"notRequired",value:function(){return this.clone().withMutation((function(e){return e.nullable().optional()}))}},{key:"transform",value:function(e){var t=this.clone();return t.transforms.push(e),t}},{key:"test",value:function(){var e;if(void 0===(e=1===arguments.length?"function"===typeof(arguments.length<=0?void 0:arguments[0])?{test:arguments.length<=0?void 0:arguments[0]}:arguments.length<=0?void 0:arguments[0]:2===arguments.length?{name:arguments.length<=0?void 0:arguments[0],test:arguments.length<=1?void 0:arguments[1]}:{name:arguments.length<=0?void 0:arguments[0],message:arguments.length<=1?void 0:arguments[1],test:arguments.length<=2?void 0:arguments[2]}).message&&(e.message=T.default),"function"!==typeof e.test)throw new TypeError("`test` is a required parameters");var t=this.clone(),n=V(e),a=e.exclusive||e.name&&!0===t.exclusiveTests[e.name];if(e.exclusive&&!e.name)throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");return e.name&&(t.exclusiveTests[e.name]=!!e.exclusive),t.tests=t.tests.filter((function(t){if(t.OPTIONS.name===e.name){if(a)return!1;if(t.OPTIONS.test===n.OPTIONS.test)return!1}return!0})),t.tests.push(n),t}},{key:"when",value:function(e,t){Array.isArray(e)||"string"===typeof e||(t=e,e=".");var n=this.clone(),a=O(e).map((function(e){return new G(e)}));return a.forEach((function(e){e.isSibling&&n.deps.push(e.key)})),n.conditions.push("function"===typeof t?new K(a,t):K.fromOptions(a,t)),n}},{key:"typeError",value:function(e){var t=this.clone();return t.internalTests.typeError=V({message:e,name:"typeError",skipAbsent:!0,test:function(e){return!!this.schema._typeCheck(e)||this.createError({params:{type:this.schema.type}})}}),t}},{key:"oneOf",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T.oneOf,n=this.clone();return e.forEach((function(e){n._whitelist.add(e),n._blacklist.delete(e)})),n.internalTests.whiteList=V({message:t,name:"oneOf",skipAbsent:!0,test:function(e){var t=this.schema._whitelist,n=t.resolveAll(this.resolve);return!!n.includes(e)||this.createError({params:{values:Array.from(t).join(", "),resolved:n}})}}),n}},{key:"notOneOf",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T.notOneOf,n=this.clone();return e.forEach((function(e){n._blacklist.add(e),n._whitelist.delete(e)})),n.internalTests.blacklist=V({message:t,name:"notOneOf",test:function(e){var t=this.schema._blacklist,n=t.resolveAll(this.resolve);return!n.includes(e)||this.createError({params:{values:Array.from(t).join(", "),resolved:n}})}}),n}},{key:"strip",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=this.clone();return t.spec.strip=e,t}},{key:"describe",value:function(e){var t=(e?this.resolve(e):this).clone(),n=t.spec,a=n.label;return{meta:n.meta,label:a,optional:n.optional,nullable:n.nullable,default:t.getDefault(e),type:t.type,oneOf:t._whitelist.describe(),notOneOf:t._blacklist.describe(),tests:t.tests.map((function(e){return{name:e.OPTIONS.name,params:e.OPTIONS.params}})).filter((function(e,t,n){return n.findIndex((function(t){return t.name===e.name}))===t}))}}}]),e}();W.prototype.__isYupSchema__=!0;for(var z=function(){var e=Y[J];W.prototype["".concat(e,"At")]=function(t,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=H(this,t,n,a.context),i=r.parent,o=r.parentPath;return r.schema[e](i&&i[o],Object.assign({},a,{parent:i,path:t}))}},J=0,Y=["validate","validateSync"];J<Y.length;J++)z();for(var q=0,Q=["equals","is"];q<Q.length;q++){var X=Q[q];W.prototype[X]=W.prototype.oneOf}for(var ee=0,te=["not","nope"];ee<te.length;ee++){var ne=te[ee];W.prototype[ne]=W.prototype.notOneOf}var ae=function(){return!0};var re=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(e){return(0,s.Z)(this,n),t.call(this,"function"===typeof e?{type:"mixed",check:e}:Object.assign({type:"mixed",check:ae},e))}return(0,l.Z)(n)}(W);re.prototype;var ie=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(){var e;return(0,s.Z)(this,n),(e=t.call(this,{type:"boolean",check:function(e){return e instanceof Boolean&&(e=e.valueOf()),"boolean"===typeof e}})).withMutation((function(){e.transform((function(e,t,n){if(n.spec.coerce&&!n.isType(e)){if(/^(true|1)$/i.test(String(e)))return!0;if(/^(false|0)$/i.test(String(e)))return!1}return e}))})),e}return(0,l.Z)(n,[{key:"isTrue",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.isValue;return this.test({message:e,name:"is-value",exclusive:!0,params:{value:"true"},test:function(e){return Z(e)||!0===e}})}},{key:"isFalse",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.isValue;return this.test({message:e,name:"is-value",exclusive:!0,params:{value:"false"},test:function(e){return Z(e)||!1===e}})}},{key:"default",value:function(e){return r((0,a.Z)(n.prototype),"default",this).call(this,e)}},{key:"defined",value:function(e){return r((0,a.Z)(n.prototype),"defined",this).call(this,e)}},{key:"optional",value:function(){return r((0,a.Z)(n.prototype),"optional",this).call(this)}},{key:"required",value:function(e){return r((0,a.Z)(n.prototype),"required",this).call(this,e)}},{key:"notRequired",value:function(){return r((0,a.Z)(n.prototype),"notRequired",this).call(this)}},{key:"nullable",value:function(){return r((0,a.Z)(n.prototype),"nullable",this).call(this)}},{key:"nonNullable",value:function(e){return r((0,a.Z)(n.prototype),"nonNullable",this).call(this,e)}},{key:"strip",value:function(e){return r((0,a.Z)(n.prototype),"strip",this).call(this,e)}}]),n}(W);ie.prototype;var oe=/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,ue=/^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,de=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,se=function(e){return Z(e)||e===e.trim()},le={}.toString();function ce(){return new fe}var fe=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(){var e;return(0,s.Z)(this,n),(e=t.call(this,{type:"string",check:function(e){return e instanceof String&&(e=e.valueOf()),"string"===typeof e}})).withMutation((function(){e.transform((function(e,t,n){if(!n.spec.coerce||n.isType(e))return e;if(Array.isArray(e))return e;var a=null!=e&&e.toString?e.toString():e;return a===le?e:a}))})),e}return(0,l.Z)(n,[{key:"required",value:function(e){return r((0,a.Z)(n.prototype),"required",this).call(this,e).withMutation((function(t){return t.test({message:e||T.required,name:"required",skipAbsent:!0,test:function(e){return!!e.length}})}))}},{key:"notRequired",value:function(){return r((0,a.Z)(n.prototype),"notRequired",this).call(this).withMutation((function(e){return e.tests=e.tests.filter((function(e){return"required"!==e.OPTIONS.name})),e}))}},{key:"length",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:B.length;return this.test({message:t,name:"length",exclusive:!0,params:{length:e},skipAbsent:!0,test:function(t){return t.length===this.resolve(e)}})}},{key:"min",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:B.min;return this.test({message:t,name:"min",exclusive:!0,params:{min:e},skipAbsent:!0,test:function(t){return t.length>=this.resolve(e)}})}},{key:"max",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:B.max;return this.test({name:"max",exclusive:!0,message:t,params:{max:e},skipAbsent:!0,test:function(t){return t.length<=this.resolve(e)}})}},{key:"matches",value:function(e,t){var n,a,r=!1;if(t)if("object"===typeof t){var i=t.excludeEmptyString;r=void 0!==i&&i,n=t.message,a=t.name}else n=t;return this.test({name:a||"matches",message:n||B.matches,params:{regex:e},skipAbsent:!0,test:function(t){return""===t&&r||-1!==t.search(e)}})}},{key:"email",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.email;return this.matches(oe,{name:"email",message:e,excludeEmptyString:!0})}},{key:"url",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.url;return this.matches(ue,{name:"url",message:e,excludeEmptyString:!0})}},{key:"uuid",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.uuid;return this.matches(de,{name:"uuid",message:e,excludeEmptyString:!1})}},{key:"ensure",value:function(){return this.default("").transform((function(e){return null===e?"":e}))}},{key:"trim",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.trim;return this.transform((function(e){return null!=e?e.trim():e})).test({message:e,name:"trim",test:se})}},{key:"lowercase",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.lowercase;return this.transform((function(e){return Z(e)?e:e.toLowerCase()})).test({message:e,name:"string_case",exclusive:!0,skipAbsent:!0,test:function(e){return Z(e)||e===e.toLowerCase()}})}},{key:"uppercase",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:B.uppercase;return this.transform((function(e){return Z(e)?e:e.toUpperCase()})).test({message:e,name:"string_case",exclusive:!0,skipAbsent:!0,test:function(e){return Z(e)||e===e.toUpperCase()}})}}]),n}(W);ce.prototype=fe.prototype;var he=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(){var e;return(0,s.Z)(this,n),(e=t.call(this,{type:"number",check:function(e){return e instanceof Number&&(e=e.valueOf()),"number"===typeof e&&!function(e){return e!=+e}(e)}})).withMutation((function(){e.transform((function(e,t,n){if(!n.spec.coerce)return e;var a=e;if("string"===typeof a){if(""===(a=a.replace(/\s/g,"")))return NaN;a=+a}return n.isType(a)||null===a?a:parseFloat(a)}))})),e}return(0,l.Z)(n,[{key:"min",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.min;return this.test({message:t,name:"min",exclusive:!0,params:{min:e},skipAbsent:!0,test:function(t){return t>=this.resolve(e)}})}},{key:"max",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.max;return this.test({message:t,name:"max",exclusive:!0,params:{max:e},skipAbsent:!0,test:function(t){return t<=this.resolve(e)}})}},{key:"lessThan",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.lessThan;return this.test({message:t,name:"max",exclusive:!0,params:{less:e},skipAbsent:!0,test:function(t){return t<this.resolve(e)}})}},{key:"moreThan",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.moreThan;return this.test({message:t,name:"min",exclusive:!0,params:{more:e},skipAbsent:!0,test:function(t){return t>this.resolve(e)}})}},{key:"positive",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:w.positive;return this.moreThan(0,e)}},{key:"negative",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:w.negative;return this.lessThan(0,e)}},{key:"integer",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:w.integer;return this.test({name:"integer",message:e,skipAbsent:!0,test:function(e){return Number.isInteger(e)}})}},{key:"truncate",value:function(){return this.transform((function(e){return Z(e)?e:0|e}))}},{key:"round",value:function(e){var t,n=["ceil","floor","round","trunc"];if("trunc"===(e=(null==(t=e)?void 0:t.toLowerCase())||"round"))return this.truncate();if(-1===n.indexOf(e.toLowerCase()))throw new TypeError("Only valid options for round() are: "+n.join(", "));return this.transform((function(t){return Z(t)?t:Math[e](t)}))}}]),n}(W);he.prototype;var pe=/^(\d{4}|[+\-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,\.](\d{1,}))?)?(?:(Z)|([+\-])(\d{2})(?::?(\d{2}))?)?)?$/;var ge=new Date("");function me(){return new ye}var ye=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(){var e;return(0,s.Z)(this,n),(e=t.call(this,{type:"date",check:function(e){return t=e,"[object Date]"===Object.prototype.toString.call(t)&&!isNaN(e.getTime());var t}})).withMutation((function(){e.transform((function(e,t,a){return!a.spec.coerce||a.isType(e)||null===e?e:(e=function(e){var t,n,a=[1,4,5,6,7,10,11],r=0;if(n=pe.exec(e)){for(var i,o=0;i=a[o];++o)n[i]=+n[i]||0;n[2]=(+n[2]||1)-1,n[3]=+n[3]||1,n[7]=n[7]?String(n[7]).substr(0,3):0,void 0!==n[8]&&""!==n[8]||void 0!==n[9]&&""!==n[9]?("Z"!==n[8]&&void 0!==n[9]&&(r=60*n[10]+n[11],"+"===n[9]&&(r=0-r)),t=Date.UTC(n[1],n[2],n[3],n[4],n[5]+r,n[6],n[7])):t=+new Date(n[1],n[2],n[3],n[4],n[5],n[6],n[7])}else t=Date.parse?Date.parse(e):NaN;return t}(e),isNaN(e)?n.INVALID_DATE:new Date(e))}))})),e}return(0,l.Z)(n,[{key:"prepareParam",value:function(e,t){var n;if(G.isRef(e))n=e;else{var a=this.cast(e);if(!this._typeCheck(a))throw new TypeError("`".concat(t,"` must be a Date or a value that can be `cast()` to a Date"));n=a}return n}},{key:"min",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:E.min,n=this.prepareParam(e,"min");return this.test({message:t,name:"min",exclusive:!0,params:{min:e},skipAbsent:!0,test:function(e){return e>=this.resolve(n)}})}},{key:"max",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:E.max,n=this.prepareParam(e,"max");return this.test({message:t,name:"max",exclusive:!0,params:{max:e},skipAbsent:!0,test:function(e){return e<=this.resolve(n)}})}}]),n}(W);function ve(e,t){var n=1/0;return e.some((function(e,a){var r;if(null!=(r=t.path)&&r.includes(e))return n=a,!0})),n}function $e(e){return function(t,n){return ve(e,t)-ve(e,n)}}ye.INVALID_DATE=ge,me.prototype=ye.prototype,me.INVALID_DATE=ge;var be=function(e,t,n){if("string"!==typeof e)return e;var a=e;try{a=JSON.parse(e)}catch(r){}return n.isType(a)?a:e};function Se(e){if("fields"in e){for(var t={},n=0,a=Object.entries(e.fields);n<a.length;n++){var r=(0,o.Z)(a[n],2),i=r[0],u=r[1];t[i]=Se(u)}return e.setFields(t)}if("array"===e.type){var d=e.optional();return d.innerType&&(d.innerType=Se(d.innerType)),d}return"tuple"===e.type?e.optional().clone({types:e.spec.types.map(Se)}):"optional"in e?e.optional():e}var Ce=function(e){return"[object Object]"===Object.prototype.toString.call(e)};var Ae=$e([]);function ke(e){return new Ne(e)}var Ne=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(e){var a;return(0,s.Z)(this,n),(a=t.call(this,{type:"object",check:function(e){return Ce(e)||"function"===typeof e}})).fields=Object.create(null),a._sortErrors=Ae,a._nodes=[],a._excludedEdges=[],a.withMutation((function(){e&&a.shape(e)})),a}return(0,l.Z)(n,[{key:"_cast",value:function(e){var t,i=this,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=r((0,a.Z)(n.prototype),"_cast",this).call(this,e,o);if(void 0===d)return this.getDefault(o);if(!this._typeCheck(d))return d;var s,l=this.fields,c=null!=(t=o.stripUnknown)?t:this.spec.noUnknown,f=[].concat(this._nodes,Object.keys(d).filter((function(e){return!i._nodes.includes(e)}))),h={},p=Object.assign({},o,{parent:h,__validating:o.__validating||!1}),g=!1,m=(0,u.Z)(f);try{for(m.s();!(s=m.n()).done;){var y=s.value,v=l[y],$=y in d;if(v){var b,S=d[y];p.path=(o.path?"".concat(o.path,"."):"")+y;var C=(v=v.resolve({value:S,context:o.context,parent:h}))instanceof W?v.spec:void 0,A=null==C?void 0:C.strict;if(null!=C&&C.strip){g=g||y in d;continue}void 0!==(b=o.__validating&&A?d[y]:v.cast(d[y],p))&&(h[y]=b)}else $&&!c&&(h[y]=d[y]);$===y in h&&h[y]===d[y]||(g=!0)}}catch(k){m.e(k)}finally{m.f()}return g?h:d}},{key:"_validate",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,l=i.from,c=void 0===l?[]:l,f=i.originalValue,h=void 0===f?e:f,p=i.recursive,g=void 0===p?this.spec.recursive:p;i.from=[{schema:this,value:h}].concat((0,d.Z)(c)),i.__validating=!0,i.originalValue=h,r((0,a.Z)(n.prototype),"_validate",this).call(this,e,i,o,(function(e,n){if(g&&Ce(n)){h=h||n;var a,r=[],d=(0,u.Z)(t._nodes);try{for(d.s();!(a=d.n()).done;){var l=a.value,c=t.fields[l];c&&!G.isRef(c)&&r.push(c.asNestedTest({options:i,key:l,parent:n,parentPath:i.path,originalParent:h}))}}catch(f){d.e(f)}finally{d.f()}t.runTests({tests:r,value:n,originalValue:h,options:i},o,(function(a){s(a.sort(t._sortErrors).concat(e),n)}))}else s(e,n)}))}},{key:"clone",value:function(e){var t=r((0,a.Z)(n.prototype),"clone",this).call(this,e);return t.fields=Object.assign({},this.fields),t._nodes=this._nodes,t._excludedEdges=this._excludedEdges,t._sortErrors=this._sortErrors,t}},{key:"concat",value:function(e){for(var t=this,i=r((0,a.Z)(n.prototype),"concat",this).call(this,e),u=i.fields,s=0,l=Object.entries(this.fields);s<l.length;s++){var c=(0,o.Z)(l[s],2),f=c[0],h=c[1],p=u[f];u[f]=void 0===p?h:p}return i.withMutation((function(n){return n.setFields(u,[].concat((0,d.Z)(t._excludedEdges),(0,d.Z)(e._excludedEdges)))}))}},{key:"_getDefault",value:function(e){var t=this;if("default"in this.spec)return r((0,a.Z)(n.prototype),"_getDefault",this).call(this,e);if(this._nodes.length){var i={};return this._nodes.forEach((function(n){var a,r=t.fields[n],o=e;null!=(a=o)&&a.value&&(o=Object.assign({},o,{parent:o.value,value:o.value[n]})),i[n]=r&&"getDefault"in r?r.getDefault(o):void 0})),i}}},{key:"setFields",value:function(e,t){var n=this.clone();return n.fields=e,n._nodes=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=[],a=new Set,r=new Set(t.map((function(e){var t=(0,o.Z)(e,2),n=t[0],a=t[1];return"".concat(n,"-").concat(a)})));function i(e,t){var i=(0,g.split)(e)[0];a.add(i),r.has("".concat(t,"-").concat(i))||n.push([t,i])}for(var u=function(){var t=s[d],n=e[t];a.add(t),G.isRef(n)&&n.isSibling?i(n.path,t):R(n)&&"deps"in n&&n.deps.forEach((function(e){return i(e,t)}))},d=0,s=Object.keys(e);d<s.length;d++)u();return v().array(Array.from(a),n).reverse()}(e,t),n._sortErrors=$e(Object.keys(e)),t&&(n._excludedEdges=t),n}},{key:"shape",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this.clone().withMutation((function(n){var a=n._excludedEdges;return t.length&&(Array.isArray(t[0])||(t=[t]),a=[].concat((0,d.Z)(n._excludedEdges),(0,d.Z)(t))),n.setFields(Object.assign(n.fields,e),a)}))}},{key:"partial",value:function(){for(var e={},t=0,n=Object.entries(this.fields);t<n.length;t++){var a=(0,o.Z)(n[t],2),r=a[0],i=a[1];e[r]="optional"in i&&i.optional instanceof Function?i.optional():i}return this.setFields(e)}},{key:"deepPartial",value:function(){return Se(this)}},{key:"pick",value:function(e){var t,n={},a=(0,u.Z)(e);try{for(a.s();!(t=a.n()).done;){var r=t.value;this.fields[r]&&(n[r]=this.fields[r])}}catch(i){a.e(i)}finally{a.f()}return this.setFields(n)}},{key:"omit",value:function(e){var t,n=Object.assign({},this.fields),a=(0,u.Z)(e);try{for(a.s();!(t=a.n()).done;){delete n[t.value]}}catch(r){a.e(r)}finally{a.f()}return this.setFields(n)}},{key:"from",value:function(e,t,n){var a=(0,g.getter)(e,!0);return this.transform((function(r){if(!r)return r;var i=r;return function(e,t){var n=(0,d.Z)((0,g.normalizePath)(t));if(1===n.length)return n[0]in e;var a=n.pop(),r=(0,g.getter)((0,g.join)(n),!0)(e);return!(!r||!(a in r))}(r,e)&&(i=Object.assign({},r),n||delete i[e],i[t]=a(r)),i}))}},{key:"json",value:function(){return this.transform(be)}},{key:"noUnknown",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I.noUnknown;"boolean"!==typeof e&&(t=e,e=!0);var n=this.test({name:"noUnknown",exclusive:!0,message:t,test:function(t){if(null==t)return!0;var n=function(e,t){var n=Object.keys(e.fields);return Object.keys(t).filter((function(e){return-1===n.indexOf(e)}))}(this.schema,t);return!e||0===n.length||this.createError({params:{unknown:n.join(", ")}})}});return n.spec.noUnknown=e,n}},{key:"unknown",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I.noUnknown;return this.noUnknown(!e,t)}},{key:"transformKeys",value:function(e){return this.transform((function(t){if(!t)return t;for(var n={},a=0,r=Object.keys(t);a<r.length;a++){var i=r[a];n[e(i)]=t[i]}return n}))}},{key:"camelCase",value:function(){return this.transformKeys(m.camelCase)}},{key:"snakeCase",value:function(){return this.transformKeys(m.snakeCase)}},{key:"constantCase",value:function(){return this.transformKeys((function(e){return(0,m.snakeCase)(e).toUpperCase()}))}},{key:"describe",value:function(e){var t=r((0,a.Z)(n.prototype),"describe",this).call(this,e);t.fields={};for(var i=0,u=Object.entries(this.fields);i<u.length;i++){var d,s=(0,o.Z)(u[i],2),l=s[0],c=s[1],f=e;null!=(d=f)&&d.value&&(f=Object.assign({},f,{parent:f.value,value:f.value[l]})),t.fields[l]=c.describe(f)}return t}}]),n}(W);ke.prototype=Ne.prototype;var Oe=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(e){var a;return(0,s.Z)(this,n),(a=t.call(this,{type:"array",spec:{types:e},check:function(e){return Array.isArray(e)}})).innerType=void 0,a.innerType=e,a}return(0,l.Z)(n,[{key:"_cast",value:function(e,t){var i=this,o=r((0,a.Z)(n.prototype),"_cast",this).call(this,e,t);if(!this._typeCheck(o)||!this.innerType)return o;var u=!1,d=o.map((function(e,n){var a=i.innerType.cast(e,Object.assign({},t,{path:"".concat(t.path||"","[").concat(n,"]")}));return a!==e&&(u=!0),a}));return u?d:o}},{key:"_validate",value:function(e){var t,i=this,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},u=arguments.length>2?arguments[2]:void 0,d=arguments.length>3?arguments[3]:void 0,s=this.innerType,l=null!=(t=o.recursive)?t:this.spec.recursive;null!=o.originalValue&&o.originalValue,r((0,a.Z)(n.prototype),"_validate",this).call(this,e,o,u,(function(t,n){var a;if(l&&s&&i._typeCheck(n)){for(var r=new Array(n.length),c=0;c<n.length;c++){var f;r[c]=s.asNestedTest({options:o,index:c,parent:n,parentPath:o.path,originalParent:null!=(f=o.originalValue)?f:e})}i.runTests({value:n,tests:r,originalValue:null!=(a=o.originalValue)?a:e,options:o},u,(function(e){return d(e.concat(t),n)}))}else d(t,n)}))}},{key:"clone",value:function(e){var t=r((0,a.Z)(n.prototype),"clone",this).call(this,e);return t.innerType=this.innerType,t}},{key:"json",value:function(){return this.transform(be)}},{key:"concat",value:function(e){var t=r((0,a.Z)(n.prototype),"concat",this).call(this,e);return t.innerType=this.innerType,e.innerType&&(t.innerType=t.innerType?t.innerType.concat(e.innerType):e.innerType),t}},{key:"of",value:function(e){var t=this.clone();if(!R(e))throw new TypeError("`array.of()` sub-schema must be a valid yup schema not: "+N(e));return t.innerType=e,t.spec=Object.assign({},t.spec,{types:e}),t}},{key:"length",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L.length;return this.test({message:t,name:"length",exclusive:!0,params:{length:e},skipAbsent:!0,test:function(t){return t.length===this.resolve(e)}})}},{key:"min",value:function(e,t){return t=t||L.min,this.test({message:t,name:"min",exclusive:!0,params:{min:e},skipAbsent:!0,test:function(t){return t.length>=this.resolve(e)}})}},{key:"max",value:function(e,t){return t=t||L.max,this.test({message:t,name:"max",exclusive:!0,params:{max:e},skipAbsent:!0,test:function(t){return t.length<=this.resolve(e)}})}},{key:"ensure",value:function(){var e=this;return this.default((function(){return[]})).transform((function(t,n){return e._typeCheck(t)?t:null==n?[]:[].concat(n)}))}},{key:"compact",value:function(e){var t=e?function(t,n,a){return!e(t,n,a)}:function(e){return!!e};return this.transform((function(e){return null!=e?e.filter(t):e}))}},{key:"describe",value:function(e){var t=r((0,a.Z)(n.prototype),"describe",this).call(this,e);if(this.innerType){var i,o=e;null!=(i=o)&&i.value&&(o=Object.assign({},o,{parent:o.value,value:o.value[0]})),t.innerType=this.innerType.describe(o)}return t}}]),n}(W);Oe.prototype;var Pe=function(e){(0,f.Z)(n,e);var t=(0,h.Z)(n);function n(e){var a;return(0,s.Z)(this,n),(a=t.call(this,{type:"tuple",spec:{types:e},check:function(e){var t=this.spec.types;return Array.isArray(e)&&e.length===t.length}})).withMutation((function(){a.typeError(D)})),a}return(0,l.Z)(n,[{key:"_cast",value:function(e,t){var i=this.spec.types,o=r((0,a.Z)(n.prototype),"_cast",this).call(this,e,t);if(!this._typeCheck(o))return o;var u=!1,d=i.map((function(e,n){var a=e.cast(o[n],Object.assign({},t,{path:"".concat(t.path||"","[").concat(n,"]")}));return a!==o[n]&&(u=!0),a}));return u?d:o}},{key:"_validate",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,l=this.spec.types;r((0,a.Z)(n.prototype),"_validate",this).call(this,e,i,d,(function(n,a){var r;if(t._typeCheck(a)){var c,f=[],h=(0,u.Z)(l.entries());try{for(h.s();!(c=h.n()).done;){var p,g=(0,o.Z)(c.value,2),m=g[0],y=g[1];f[m]=y.asNestedTest({options:i,index:m,parent:a,parentPath:i.path,originalParent:null!=(p=i.originalValue)?p:e})}}catch(v){h.e(v)}finally{h.f()}t.runTests({value:a,tests:f,originalValue:null!=(r=i.originalValue)?r:e,options:i},d,(function(e){return s(e.concat(n),a)}))}else s(n,a)}))}},{key:"describe",value:function(e){var t=r((0,a.Z)(n.prototype),"describe",this).call(this,e);return t.innerType=this.spec.types.map((function(t,n){var a,r=e;return null!=(a=r)&&a.value&&(r=Object.assign({},r,{parent:r.value,value:r.value[n]})),t.describe(r)})),t}}]),n}(W);Pe.prototype},4719:function(){},5861:function(e,t,n){"use strict";function a(e,t,n,a,r,i,o){try{var u=e[i](o),d=u.value}catch(s){return void n(s)}u.done?t(d):Promise.resolve(d).then(a,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function u(e){a(o,r,i,u,d,"next",e)}function d(e){a(o,r,i,u,d,"throw",e)}u(void 0)}))}}n.d(t,{Z:function(){return r}})},4165:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(1002);function r(){r=function(){return t};var e,t={},n=Object.prototype,i=n.hasOwnProperty,o=Object.defineProperty||function(e,t,n){e[t]=n.value},u="function"==typeof Symbol?Symbol:{},d=u.iterator||"@@iterator",s=u.asyncIterator||"@@asyncIterator",l=u.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function f(e,t,n,a){var r=t&&t.prototype instanceof $?t:$,i=Object.create(r.prototype),u=new E(a||[]);return o(i,"_invoke",{value:M(e,n,u)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=f;var p="suspendedStart",g="suspendedYield",m="executing",y="completed",v={};function $(){}function b(){}function S(){}var C={};c(C,d,(function(){return this}));var A=Object.getPrototypeOf,k=A&&A(A(x([])));k&&k!==n&&i.call(k,d)&&(C=k);var N=S.prototype=$.prototype=Object.create(C);function O(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function n(r,o,u,d){var s=h(e[r],e,o);if("throw"!==s.type){var l=s.arg,c=l.value;return c&&"object"==(0,a.Z)(c)&&i.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,u,d)}),(function(e){n("throw",e,u,d)})):t.resolve(c).then((function(e){l.value=e,u(l)}),(function(e){return n("throw",e,u,d)}))}d(s.arg)}var r;o(this,"_invoke",{value:function(e,a){function i(){return new t((function(t,r){n(e,a,t,r)}))}return r=r?r.then(i,i):i()}})}function M(t,n,a){var r=p;return function(i,o){if(r===m)throw new Error("Generator is already running");if(r===y){if("throw"===i)throw o;return{value:e,done:!0}}for(a.method=i,a.arg=o;;){var u=a.delegate;if(u){var d=T(u,a);if(d){if(d===v)continue;return d}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(r===p)throw r=y,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);r=m;var s=h(t,n,a);if("normal"===s.type){if(r=a.done?y:g,s.arg===v)continue;return{value:s.arg,done:a.done}}"throw"===s.type&&(r=y,a.method="throw",a.arg=s.arg)}}}function T(t,n){var a=n.method,r=t.iterator[a];if(r===e)return n.delegate=null,"throw"===a&&t.iterator.return&&(n.method="return",n.arg=e,T(t,n),"throw"===n.method)||"return"!==a&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+a+"' method")),v;var i=h(r,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,v;var o=i.arg;return o?o.done?(n[t.resultName]=o.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,v):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,v)}function B(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function w(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(B,this),this.reset(!0)}function x(t){if(t||""===t){var n=t[d];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,o=function n(){for(;++r<t.length;)if(i.call(t,r))return n.value=t[r],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError((0,a.Z)(t)+" is not iterable")}return b.prototype=S,o(N,"constructor",{value:S,configurable:!0}),o(S,"constructor",{value:b,configurable:!0}),b.displayName=c(S,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,c(e,l,"GeneratorFunction")),e.prototype=Object.create(N),e},t.awrap=function(e){return{__await:e}},O(P.prototype),c(P.prototype,s,(function(){return this})),t.AsyncIterator=P,t.async=function(e,n,a,r,i){void 0===i&&(i=Promise);var o=new P(f(e,n,a,r),i);return t.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},O(N),c(N,l,"Generator"),c(N,d,(function(){return this})),c(N,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},t.values=x,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(w),!t)for(var n in this)"t"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(a,r){return u.type="throw",u.arg=t,n.next=a,r&&(n.method="next",n.arg=e),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],u=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var d=i.call(o,"catchLoc"),s=i.call(o,"finallyLoc");if(d&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(d){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&i.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var r=a;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=e,o.arg=t,r?(this.method="next",this.next=r.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),w(n),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var r=a.arg;w(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,a){return this.delegate={iterator:x(t),resultName:n,nextLoc:a},"next"===this.method&&(this.arg=e),v}},t}},4695:function(e,t,n){"use strict";n.d(t,{X:function(){return s}});var a=n(1134),r=function(e,t,n){if(e&&"reportValidity"in e){var r=(0,a.U2)(n,t);e.setCustomValidity(r&&r.message||""),e.reportValidity()}},i=function(e,t){var n=function(n){var a=t.fields[n];a&&a.ref&&"reportValidity"in a.ref?r(a.ref,n,e):a.refs&&a.refs.forEach((function(t){return r(t,n,e)}))};for(var a in t.fields)n(a)},o=function(e,t){t.shouldUseNativeValidation&&i(e,t);var n={};for(var r in e){var o=(0,a.U2)(t.fields,r),s=Object.assign(e[r]||{},{ref:o&&o.ref});if(d(t.names||Object.keys(e),r)){var l=Object.assign({},u((0,a.U2)(n,r)));(0,a.t8)(l,"root",s),(0,a.t8)(n,r,l)}else(0,a.t8)(n,r,s)}return n},u=function(e){return Array.isArray(e)?e.filter(Boolean):[]},d=function(e,t){return e.some((function(e){return e.startsWith(t+".")}))};function s(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),function(r,u,d){try{return Promise.resolve(function(a,o){try{var s=(t.context,Promise.resolve(e["sync"===n.mode?"validateSync":"validate"](r,Object.assign({abortEarly:!1},t,{context:u}))).then((function(e){return d.shouldUseNativeValidation&&i({},d),{values:n.raw?r:e,errors:{}}})))}catch(l){return o(l)}return s&&s.then?s.then(void 0,o):s}(0,(function(e){if(!e.inner)throw e;return{values:{},errors:o((t=e,n=!d.shouldUseNativeValidation&&"all"===d.criteriaMode,(t.inner||[]).reduce((function(e,t){if(e[t.path]||(e[t.path]={message:t.message,type:t.type}),n){var r=e[t.path].types,i=r&&r[t.type];e[t.path]=(0,a.KN)(t.path,n,e,t.type,i?[].concat(i,t.message):t.message)}return e}),{})),d)};var t,n})))}catch(s){return Promise.reject(s)}}}},3919:function(e,t,n){"use strict";n.d(t,{Z:function(){return A}});var a=n(6874),r=n(9099),i=n(2479),o=n(7377);function u(e,t,n){var r=new a.ZP(n).getCountryCodesForCallingCode(e);return r?r.filter((function(e){return function(e,t,n){var r=new a.ZP(n);if(r.selectNumberingPlan(t),r.numberingPlan.possibleLengths().indexOf(e.length)>=0)return!0;return!1}(t,e,n)})):[]}var d=n(5066),s=/^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;function l(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g={formatExtension:function(e,t,n){return"".concat(e).concat(n.ext()).concat(t)}};function m(e,t,n,r){if(n=n?h(h({},g),n):g,r=new a.ZP(r),e.country&&"001"!==e.country){if(!r.hasCountry(e.country))throw new Error("Unknown country: ".concat(e.country));r.country(e.country)}else{if(!e.countryCallingCode)return e.phone||"";r.selectNumberingPlan(e.countryCallingCode)}var i,o=r.countryCallingCode(),u=n.v2?e.nationalNumber:e.phone;switch(t){case"NATIONAL":return u?v(i=y(u,e.carrierCode,"NATIONAL",r,n),e.ext,r,n.formatExtension):"";case"INTERNATIONAL":return u?(i=y(u,null,"INTERNATIONAL",r,n),v(i="+".concat(o," ").concat(i),e.ext,r,n.formatExtension)):"+".concat(o);case"E.164":return"+".concat(o).concat(u);case"RFC3966":return function(e){var t=e.number,n=e.ext;if(!t)return"";if("+"!==t[0])throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');return"tel:".concat(t).concat(n?";ext="+n:"")}({number:"+".concat(o).concat(u),ext:e.ext});case"IDD":if(!n.fromCountry)return;var d=function(e,t,n,r,i){var o=(0,a.Gg)(r,i.metadata);if(o===n){var u=y(e,t,"NATIONAL",i);return"1"===n?n+" "+u:u}var d=function(e,t,n){var r=new a.ZP(n);return r.selectNumberingPlan(e,t),r.defaultIDDPrefix()?r.defaultIDDPrefix():s.test(r.IDDPrefix())?r.IDDPrefix():void 0}(r,void 0,i.metadata);if(d)return"".concat(d," ").concat(n," ").concat(y(e,null,"INTERNATIONAL",i))}(u,e.carrierCode,o,n.fromCountry,r);return v(d,e.ext,r,n.formatExtension);default:throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(t,'"'))}}function y(e,t,n,a,r){var o=function(e,t){for(var n,a=l(e);!(n=a()).done;){var r=n.value;if(r.leadingDigitsPatterns().length>0){var o=r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length-1];if(0!==t.search(o))continue}if((0,i.Z)(t,r.pattern()))return r}}(a.formats(),e);return o?(0,d.Z)(e,o,{useInternationalFormat:"INTERNATIONAL"===n,withNationalPrefix:!o.nationalPrefixIsOptionalWhenFormattingInNationalFormat()||!r||!1!==r.nationalPrefix,carrierCode:t,metadata:a}):e}function v(e,t,n,a){return t?a(e,t,n):e}function $(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$(Object(n),!0).forEach((function(t){S(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function S(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function C(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var A=function(){function e(t,n,r){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new TypeError("`country` or `countryCallingCode` not passed");if(!n)throw new TypeError("`nationalNumber` not passed");if(!r)throw new TypeError("`metadata` not passed");var i=function(e,t){var n,r,i=new a.ZP(t);k(e)?(n=e,i.selectNumberingPlan(n),r=i.countryCallingCode()):r=e;return{country:n,countryCallingCode:r}}(t,r),o=i.country,u=i.countryCallingCode;this.country=o,this.countryCallingCode=u,this.nationalNumber=n,this.number="+"+this.countryCallingCode+this.nationalNumber,this.getMetadata=function(){return r}}var t,n,d;return t=e,(n=[{key:"setExt",value:function(e){this.ext=e}},{key:"getPossibleCountries",value:function(){return this.country?[this.country]:u(this.countryCallingCode,this.nationalNumber,this.getMetadata())}},{key:"isPossible",value:function(){return(0,r.Z)(this,{v2:!0},this.getMetadata())}},{key:"isValid",value:function(){return function(e,t,n){if(t=t||{},(n=new a.ZP(n)).selectNumberingPlan(e.country,e.countryCallingCode),n.hasTypes())return void 0!==(0,o.Z)(e,t,n.metadata);var r=t.v2?e.nationalNumber:e.phone;return(0,i.Z)(r,n.nationalNumberPattern())}(this,{v2:!0},this.getMetadata())}},{key:"isNonGeographic",value:function(){return new a.ZP(this.getMetadata()).isNonGeographicCallingCode(this.countryCallingCode)}},{key:"isEqual",value:function(e){return this.number===e.number&&this.ext===e.ext}},{key:"getType",value:function(){return(0,o.Z)(this,{v2:!0},this.getMetadata())}},{key:"format",value:function(e,t){return m(this,e,t?b(b({},t),{},{v2:!0}):{v2:!0},this.getMetadata())}},{key:"formatNational",value:function(e){return this.format("NATIONAL",e)}},{key:"formatInternational",value:function(e){return this.format("INTERNATIONAL",e)}},{key:"getURI",value:function(e){return this.format("RFC3966",e)}}])&&C(t.prototype,n),d&&C(t,d),Object.defineProperty(t,"prototype",{writable:!1}),e}(),k=function(e){return/^[A-Z]{2}$/.test(e)}},3258:function(e,t,n){"use strict";n.d(t,{ex:function(){return a},sJ:function(){return r},uv:function(){return u},xc:function(){return o},xg:function(){return i},xy:function(){return d}});var a=2,r=17,i=3,o="0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9",u="".concat("-\u2010-\u2015\u2212\u30fc\uff0d").concat("\uff0f/").concat("\uff0e.").concat(" \xa0\xad\u200b\u2060\u3000").concat("()\uff08\uff09\uff3b\uff3d\\[\\]").concat("~\u2053\u223c\uff5e"),d="+\uff0b"},2488:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(3258);function r(e){return e.replace(new RegExp("[".concat(a.uv,"]+"),"g")," ").trim()}},2444:function(e,t,n){"use strict";function a(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function i(e,t){return o(e,void 0,t)}function o(e,t,n){var r=n.type(t),i=r&&r.possibleLengths()||n.possibleLengths();if(!i)return"IS_POSSIBLE";if("FIXED_LINE_OR_MOBILE"===t){if(!n.type("FIXED_LINE"))return o(e,"MOBILE",n);var u=n.type("MOBILE");u&&(i=function(e,t){for(var n,r=e.slice(),i=a(t);!(n=i()).done;){var o=n.value;e.indexOf(o)<0&&r.push(o)}return r.sort((function(e,t){return e-t}))}(i,u.possibleLengths()))}else if(t&&!r)return"INVALID_LENGTH";var d=e.length,s=i[0];return s===d?"IS_POSSIBLE":s>d?"TOO_SHORT":i[i.length-1]<d?"TOO_LONG":i.indexOf(d,1)>=0?"IS_POSSIBLE":"INVALID_LENGTH"}n.d(t,{Z:function(){return i}})},9511:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(3291),r=n(9647),i=n(6874),o=n(3258);function u(e,t,n,u){if(!e)return{};var d;if("+"!==e[0]){var s=(0,a.Z)(e,t,n,u);if(!s||s===e){if(t||n){var l=(0,r.Z)(e,t,n,u),c=l.countryCallingCode,f=l.number;if(c)return{countryCallingCodeSource:"FROM_NUMBER_WITHOUT_PLUS_SIGN",countryCallingCode:c,number:f}}return{number:e}}d=!0,e="+"+s}if("0"===e[1])return{};u=new i.ZP(u);for(var h=2;h-1<=o.xg&&h<=e.length;){var p=e.slice(1,h);if(u.hasCallingCode(p))return u.selectNumberingPlan(p),{countryCallingCodeSource:d?"FROM_NUMBER_WITH_IDD":"FROM_NUMBER_WITH_PLUS_SIGN",countryCallingCode:p,number:e.slice(h)};h++}return{}}},9647:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(6874),r=n(2479),i=n(6406),o=n(2444);function u(e,t,n,u){var d=t?(0,a.Gg)(t,u):n;if(0===e.indexOf(d)){(u=new a.ZP(u)).selectNumberingPlan(t,n);var s=e.slice(d.length),l=(0,i.Z)(s,u).nationalNumber,c=(0,i.Z)(e,u).nationalNumber;if(!(0,r.Z)(c,u.nationalNumberPattern())&&(0,r.Z)(l,u.nationalNumberPattern())||"TOO_LONG"===(0,o.Z)(c,u))return{countryCallingCode:d,number:s}}return{number:e}}},6406:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(9690),r=n(2479),i=n(2444);function o(e,t){var n=(0,a.Z)(e,t),o=n.carrierCode,u=n.nationalNumber;if(u!==e){if(!function(e,t,n){if((0,r.Z)(e,n.nationalNumberPattern())&&!(0,r.Z)(t,n.nationalNumberPattern()))return!1;return!0}(e,u,t))return{nationalNumber:e};if(t.possibleLengths()&&!function(e,t){switch((0,i.Z)(e,t)){case"TOO_SHORT":case"INVALID_LENGTH":return!1;default:return!0}}(u,t))return{nationalNumber:e}}return{nationalNumber:u,carrierCode:o}}},9690:function(e,t,n){"use strict";function a(e,t){if(e&&t.numberingPlan.nationalPrefixForParsing()){var n=new RegExp("^(?:"+t.numberingPlan.nationalPrefixForParsing()+")"),a=n.exec(e);if(a){var r,i,o,u=a.length-1,d=u>0&&a[u];if(t.nationalPrefixTransformRule()&&d)r=e.replace(n,t.nationalPrefixTransformRule()),u>1&&(i=a[1]);else{var s=a[0];r=e.slice(s.length),d&&(i=a[1])}if(d){var l=e.indexOf(a[1]);e.slice(0,l)===t.numberingPlan.nationalPrefix()&&(o=t.numberingPlan.nationalPrefix())}else o=a[0];return{nationalNumber:r,nationalPrefix:o,carrierCode:i}}}return{nationalNumber:e}}n.d(t,{Z:function(){return a}})},5066:function(e,t,n){"use strict";n.d(t,{Z:function(){return i},i:function(){return r}});var a=n(2488),r=/(\$\d)/;function i(e,t,n){var i=n.useInternationalFormat,o=n.withNationalPrefix,u=(n.carrierCode,n.metadata,e.replace(new RegExp(t.pattern()),i?t.internationalFormat():o&&t.nationalPrefixFormattingRule()?t.format().replace(r,t.nationalPrefixFormattingRule()):t.format()));return i?(0,a.Z)(u):u}},8060:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var a=n(6065),r=!1;function i(e,t){var n=t.nationalNumber,i=t.defaultCountry,o=t.metadata;if(r&&o.isNonGeographicCallingCode(e))return"001";var u=o.getCountryCodesForCallingCode(e);return u?1===u.length?u[0]:(0,a.Z)(n,{countries:u,defaultCountry:i,metadata:o.metadata}):void 0}},6065:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(6874),r=n(7377);function i(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function u(e,t){var n=t.countries,o=t.defaultCountry,u=t.metadata;u=new a.ZP(u);for(var d,s=[],l=i(n);!(d=l()).done;){var c=d.value;if(u.country(c),u.leadingDigits()){if(e&&0===e.search(u.leadingDigits()))return c}else if((0,r.Z)({phone:e,country:c},void 0,u.metadata)){if(!o)return c;if(c===o)return c;s.push(c)}}if(s.length>0)return s[0]}},7377:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a=n(6874),r=n(2479);function i(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var u=["MOBILE","PREMIUM_RATE","TOLL_FREE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL"];function d(e,t,n){if(t=t||{},e.country){(n=new a.ZP(n)).selectNumberingPlan(e.country,e.countryCallingCode);var o=t.v2?e.nationalNumber:e.phone;if((0,r.Z)(o,n.nationalNumberPattern())){if(s(o,"FIXED_LINE",n))return n.type("MOBILE")&&""===n.type("MOBILE").pattern()?"FIXED_LINE_OR_MOBILE":n.type("MOBILE")?s(o,"MOBILE",n)?"FIXED_LINE_OR_MOBILE":"FIXED_LINE":"FIXED_LINE_OR_MOBILE";for(var d,l=i(u);!(d=l()).done;){var c=d.value;if(s(o,c,n))return c}}}}function s(e,t,n){return!(!(t=n.type(t))||!t.pattern())&&(!(t.possibleLengths()&&t.possibleLengths().indexOf(e.length)<0)&&(0,r.Z)(e,t.pattern()))}},2479:function(e,t,n){"use strict";function a(e,t){return e=e||"",new RegExp("^(?:"+t+")$").test(e)}n.d(t,{Z:function(){return a}})},3298:function(e,t,n){"use strict";function a(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}n.d(t,{ZP:function(){return u},xh:function(){return o}});var i={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9","\uff10":"0","\uff11":"1","\uff12":"2","\uff13":"3","\uff14":"4","\uff15":"5","\uff16":"6","\uff17":"7","\uff18":"8","\uff19":"9","\u0660":"0","\u0661":"1","\u0662":"2","\u0663":"3","\u0664":"4","\u0665":"5","\u0666":"6","\u0667":"7","\u0668":"8","\u0669":"9","\u06f0":"0","\u06f1":"1","\u06f2":"2","\u06f3":"3","\u06f4":"4","\u06f5":"5","\u06f6":"6","\u06f7":"7","\u06f8":"8","\u06f9":"9"};function o(e){return i[e]}function u(e){for(var t,n="",r=a(e.split(""));!(t=r()).done;){var i=o(t.value);i&&(n+=i)}return n}},3291:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(6874),r=n(3258),i=new RegExp("(["+r.xc+"])");function o(e,t,n,r){if(t){var o=new a.ZP(r);o.selectNumberingPlan(t,n);var u=new RegExp(o.IDDPrefix());if(0===e.search(u)){var d=(e=e.slice(e.match(u)[0].length)).match(i);if(!(d&&null!=d[1]&&d[1].length>0&&"0"===d[1]))return e}}}},9099:function(e,t,n){"use strict";n.d(t,{D:function(){return o},Z:function(){return i}});var a=n(6874),r=n(2444);function i(e,t,n){if(void 0===t&&(t={}),n=new a.ZP(n),t.v2){if(!e.countryCallingCode)throw new Error("Invalid phone number object passed");n.selectNumberingPlan(e.countryCallingCode)}else{if(!e.phone)return!1;if(e.country){if(!n.hasCountry(e.country))throw new Error("Unknown country: ".concat(e.country));n.country(e.country)}else{if(!e.countryCallingCode)throw new Error("Invalid phone number object passed");n.selectNumberingPlan(e.countryCallingCode)}}if(n.possibleLengths())return o(e.phone||e.nationalNumber,n);if(e.countryCallingCode&&n.isNonGeographicCallingCode(e.countryCallingCode))return!0;throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')}function o(e,t){return"IS_POSSIBLE"===(0,r.Z)(e,t)}},6874:function(e,t,n){"use strict";function a(e,t){e=e.split("-"),t=t.split("-");for(var n=e[0].split("."),a=t[0].split("."),r=0;r<3;r++){var i=Number(n[r]),o=Number(a[r]);if(i>o)return 1;if(o>i)return-1;if(!isNaN(i)&&isNaN(o))return 1;if(isNaN(i)&&!isNaN(o))return-1}return e[1]&&t[1]?e[1]>t[1]?1:e[1]<t[1]?-1:0:!e[1]&&t[1]?1:e[1]&&!t[1]?-1:0}function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function u(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}n.d(t,{ZP:function(){return l},Gg:function(){return v},aS:function(){return $}});var d=" ext. ",s=/^\d+$/,l=function(){function e(t){i(this,e),function(e){if(!e)throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");if(!m(e)||!m(e.countries))throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(m(e)?"an object of shape: { "+Object.keys(e).join(", ")+" }":"a "+y(e)+": "+e,"."))}(t),this.metadata=t,b.call(this,t)}return u(e,[{key:"getCountries",value:function(){return Object.keys(this.metadata.countries).filter((function(e){return"001"!==e}))}},{key:"getCountryMetadata",value:function(e){return this.metadata.countries[e]}},{key:"nonGeographic",value:function(){if(!(this.v1||this.v2||this.v3))return this.metadata.nonGeographic||this.metadata.nonGeographical}},{key:"hasCountry",value:function(e){return void 0!==this.getCountryMetadata(e)}},{key:"hasCallingCode",value:function(e){if(this.getCountryCodesForCallingCode(e))return!0;if(this.nonGeographic()){if(this.nonGeographic()[e])return!0}else{var t=this.countryCallingCodes()[e];if(t&&1===t.length&&"001"===t[0])return!0}}},{key:"isNonGeographicCallingCode",value:function(e){return this.nonGeographic()?!!this.nonGeographic()[e]:!this.getCountryCodesForCallingCode(e)}},{key:"country",value:function(e){return this.selectNumberingPlan(e)}},{key:"selectNumberingPlan",value:function(e,t){if(e&&s.test(e)&&(t=e,e=null),e&&"001"!==e){if(!this.hasCountry(e))throw new Error("Unknown country: ".concat(e));this.numberingPlan=new c(this.getCountryMetadata(e),this)}else if(t){if(!this.hasCallingCode(t))throw new Error("Unknown calling code: ".concat(t));this.numberingPlan=new c(this.getNumberingPlanMetadata(t),this)}else this.numberingPlan=void 0;return this}},{key:"getCountryCodesForCallingCode",value:function(e){var t=this.countryCallingCodes()[e];if(t){if(1===t.length&&3===t[0].length)return;return t}}},{key:"getCountryCodeForCallingCode",value:function(e){var t=this.getCountryCodesForCallingCode(e);if(t)return t[0]}},{key:"getNumberingPlanMetadata",value:function(e){var t=this.getCountryCodeForCallingCode(e);if(t)return this.getCountryMetadata(t);if(this.nonGeographic()){var n=this.nonGeographic()[e];if(n)return n}else{var a=this.countryCallingCodes()[e];if(a&&1===a.length&&"001"===a[0])return this.metadata.countries["001"]}}},{key:"countryCallingCode",value:function(){return this.numberingPlan.callingCode()}},{key:"IDDPrefix",value:function(){return this.numberingPlan.IDDPrefix()}},{key:"defaultIDDPrefix",value:function(){return this.numberingPlan.defaultIDDPrefix()}},{key:"nationalNumberPattern",value:function(){return this.numberingPlan.nationalNumberPattern()}},{key:"possibleLengths",value:function(){return this.numberingPlan.possibleLengths()}},{key:"formats",value:function(){return this.numberingPlan.formats()}},{key:"nationalPrefixForParsing",value:function(){return this.numberingPlan.nationalPrefixForParsing()}},{key:"nationalPrefixTransformRule",value:function(){return this.numberingPlan.nationalPrefixTransformRule()}},{key:"leadingDigits",value:function(){return this.numberingPlan.leadingDigits()}},{key:"hasTypes",value:function(){return this.numberingPlan.hasTypes()}},{key:"type",value:function(e){return this.numberingPlan.type(e)}},{key:"ext",value:function(){return this.numberingPlan.ext()}},{key:"countryCallingCodes",value:function(){return this.v1?this.metadata.country_phone_code_to_countries:this.metadata.country_calling_codes}},{key:"chooseCountryByCountryCallingCode",value:function(e){return this.selectNumberingPlan(e)}},{key:"hasSelectedNumberingPlan",value:function(){return void 0!==this.numberingPlan}}]),e}(),c=function(){function e(t,n){i(this,e),this.globalMetadataObject=n,this.metadata=t,b.call(this,n.metadata)}return u(e,[{key:"callingCode",value:function(){return this.metadata[0]}},{key:"getDefaultCountryMetadataForRegion",value:function(){return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())}},{key:"IDDPrefix",value:function(){if(!this.v1&&!this.v2)return this.metadata[1]}},{key:"defaultIDDPrefix",value:function(){if(!this.v1&&!this.v2)return this.metadata[12]}},{key:"nationalNumberPattern",value:function(){return this.v1||this.v2?this.metadata[1]:this.metadata[2]}},{key:"possibleLengths",value:function(){if(!this.v1)return this.metadata[this.v2?2:3]}},{key:"_getFormats",value:function(e){return e[this.v1?2:this.v2?3:4]}},{key:"formats",value:function(){var e=this,t=this._getFormats(this.metadata)||this._getFormats(this.getDefaultCountryMetadataForRegion())||[];return t.map((function(t){return new f(t,e)}))}},{key:"nationalPrefix",value:function(){return this.metadata[this.v1?3:this.v2?4:5]}},{key:"_getNationalPrefixFormattingRule",value:function(e){return e[this.v1?4:this.v2?5:6]}},{key:"nationalPrefixFormattingRule",value:function(){return this._getNationalPrefixFormattingRule(this.metadata)||this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())}},{key:"_nationalPrefixForParsing",value:function(){return this.metadata[this.v1?5:this.v2?6:7]}},{key:"nationalPrefixForParsing",value:function(){return this._nationalPrefixForParsing()||this.nationalPrefix()}},{key:"nationalPrefixTransformRule",value:function(){return this.metadata[this.v1?6:this.v2?7:8]}},{key:"_getNationalPrefixIsOptionalWhenFormatting",value:function(){return!!this.metadata[this.v1?7:this.v2?8:9]}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata)||this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())}},{key:"leadingDigits",value:function(){return this.metadata[this.v1?8:this.v2?9:10]}},{key:"types",value:function(){return this.metadata[this.v1?9:this.v2?10:11]}},{key:"hasTypes",value:function(){return(!this.types()||0!==this.types().length)&&!!this.types()}},{key:"type",value:function(e){if(this.hasTypes()&&g(this.types(),e))return new p(g(this.types(),e),this)}},{key:"ext",value:function(){return this.v1||this.v2?d:this.metadata[13]||d}}]),e}(),f=function(){function e(t,n){i(this,e),this._format=t,this.metadata=n}return u(e,[{key:"pattern",value:function(){return this._format[0]}},{key:"format",value:function(){return this._format[1]}},{key:"leadingDigitsPatterns",value:function(){return this._format[2]||[]}},{key:"nationalPrefixFormattingRule",value:function(){return this._format[3]||this.metadata.nationalPrefixFormattingRule()}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return!!this._format[4]||this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"nationalPrefixIsMandatoryWhenFormattingInNationalFormat",value:function(){return this.usesNationalPrefix()&&!this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"usesNationalPrefix",value:function(){return!(!this.nationalPrefixFormattingRule()||h.test(this.nationalPrefixFormattingRule()))}},{key:"internationalFormat",value:function(){return this._format[5]||this.format()}}]),e}(),h=/^\(?\$1\)?$/,p=function(){function e(t,n){i(this,e),this.type=t,this.metadata=n}return u(e,[{key:"pattern",value:function(){return this.metadata.v1?this.type:this.type[0]}},{key:"possibleLengths",value:function(){if(!this.metadata.v1)return this.type[1]||this.metadata.possibleLengths()}}]),e}();function g(e,t){switch(t){case"FIXED_LINE":return e[0];case"MOBILE":return e[1];case"TOLL_FREE":return e[2];case"PREMIUM_RATE":return e[3];case"PERSONAL_NUMBER":return e[4];case"VOICEMAIL":return e[5];case"UAN":return e[6];case"PAGER":return e[7];case"VOIP":return e[8];case"SHARED_COST":return e[9]}}var m=function(e){return"object"===r(e)},y=function(e){return r(e)};function v(e,t){if((t=new l(t)).hasCountry(e))return t.country(e).countryCallingCode();throw new Error("Unknown country: ".concat(e))}function $(e,t){return t.countries.hasOwnProperty(e)}function b(e){var t=e.version;"number"===typeof t?(this.v1=1===t,this.v2=2===t,this.v3=3===t,this.v4=4===t):t?-1===a(t,"1.2.0")?this.v2=!0:-1===a(t,"1.7.35")?this.v3=!0:this.v4=!0:this.v1=!0}},7044:function(e,t,n){"use strict";function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,i=[],o=!0,u=!1;try{for(n=n.call(e);!(o=(a=n.next()).done)&&(i.push(a.value),!t||i.length!==t);o=!0);}catch(d){u=!0,r=d}finally{try{o||null==n.return||n.return()}finally{if(u)throw r}}return i}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return u(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function d(e){var t,n,a,u=o(Array.prototype.slice.call(e),4),d=u[0],l=u[1],c=u[2],f=u[3];if("string"!==typeof d)throw new TypeError("A text for parsing must be a string.");if(t=d,l&&"string"!==typeof l){if(!s(l))throw new Error("Invalid second argument: ".concat(l));c?(n=l,a=c):a=l}else f?(n=c,a=f):(n=void 0,a=c),l&&(n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({defaultCountry:l},n));return{text:t,options:n,metadata:a}}n.d(t,{Z:function(){return d}});var s=function(e){return"object"===a(e)}},3527:function(e,t,n){"use strict";n.d(t,{J:function(){return u},Z:function(){return o}});var a=n(3298);function r(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function o(e){for(var t,n="",a=r(e.split(""));!(t=a()).done;){n+=u(t.value,n)||""}return n}function u(e,t){if("+"===e){if(t)return;return"+"}return(0,a.xh)(e)}},7853:function(e,t,n){"use strict";n.d(t,{Z:function(){return q}});var a=n(3258);function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function o(e){var t=l();return function(){var n,a=f(e);if(t){var i=f(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return function(e,t){if(t&&("object"===r(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return u(e)}(this,n)}}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e){var t="function"===typeof Map?new Map:void 0;return d=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return s(e,arguments,f(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),c(a,e)},d(e)}function s(e,t,n){return s=l()?Reflect.construct:function(e,t,n){var a=[null];a.push.apply(a,t);var r=new(Function.bind.apply(e,a));return n&&c(r,n.prototype),r},s.apply(null,arguments)}function l(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function c(e,t){return c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},c(e,t)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var h=function(e){!function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(d,e);var t,n,a,r=o(d);function d(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),t=r.call(this,e),Object.setPrototypeOf(u(t),d.prototype),t.name=t.constructor.name,t}return t=d,n&&i(t.prototype,n),a&&i(t,a),Object.defineProperty(t,"prototype",{writable:!1}),t}(d(Error)),p=n(6874),g=function(e){return"([".concat(a.xc,"]{1,").concat(e,"})")};function m(e){var t="[ \xa0\\t,]*",n="[:\\.\uff0e]?[ \xa0\\t,-]*",a="#?",r="[ \xa0\\t]*";return";ext="+g("20")+"|"+(t+"(?:e?xt(?:ensi(?:o\u0301?|\xf3))?n?|\uff45?\uff58\uff54\uff4e?|\u0434\u043e\u0431|anexo)"+n+g("20")+a)+"|"+(t+"(?:[x\uff58#\uff03~\uff5e]|int|\uff49\uff4e\uff54)"+n+g("9")+a)+"|"+("[- ]+"+g("6")+"#")+"|"+(r+"(?:,{2}|;)"+n+g("15")+a)+"|"+(r+"(?:,)+"+n+g("9")+a)}var y="["+a.xc+"]{"+a.ex+"}",v="["+a.xy+"]{0,1}(?:["+a.uv+"]*["+a.xc+"]){3,}["+a.uv+a.xc+"]*",$=new RegExp("^["+a.xy+"]{0,1}(?:["+a.uv+"]*["+a.xc+"]){1,2}$","i"),b=v+"(?:"+m()+")?",S=new RegExp("^"+y+"$|^"+b+"$","i");var C=new RegExp("(?:"+m()+")$","i");var A=n(3527),k=n(9099),N=n(3919),O=n(2479),P=n(9511),M=n(6406),T=n(8060),B="+",w="(["+a.xc+"]|[\\-\\.\\(\\)]?)",E="^\\"+B+w+"*["+a.xc+"]"+w+"*$",x=new RegExp(E,"g"),I=a.xc,L=new RegExp("^("+("["+I+"]+((\\-)*["+I+"])*")+"\\.)*"+("[a-zA-Z]+((\\-)*["+I+"])*")+"\\.?$","g"),D="tel:",R=";phone-context=",K=";isub=";function j(e,t){var n,a=t.extractFormattedPhoneNumber,r=function(e){var t=e.indexOf(R);if(t<0)return null;var n=t+R.length;if(n>=e.length)return"";var a=e.indexOf(";",n);return a>=0?e.substring(n,a):e.substring(n)}(e);if(!function(e){return null===e||0!==e.length&&(x.test(e)||L.test(e))}(r))throw new h("NOT_A_NUMBER");if(null===r)n=a(e)||"";else{n="",r.charAt(0)===B&&(n+=r);var i,o=e.indexOf(D);i=o>=0?o+D.length:0;var u=e.indexOf(R);n+=e.substring(i,u)}var d=n.indexOf(K);if(d>0&&(n=n.substring(0,d)),""!==n)return n}var F=250,G=new RegExp("["+a.xy+a.xc+"]"),Z=new RegExp("[^"+a.xc+"#]+$"),V=!1;function H(e,t,n){if(t=t||{},n=new p.ZP(n),t.defaultCountry&&!n.hasCountry(t.defaultCountry)){if(t.v2)throw new h("INVALID_COUNTRY");throw new Error("Unknown country: ".concat(t.defaultCountry))}var r=function(e,t,n){var r=j(e,{extractFormattedPhoneNumber:function(e){return function(e,t,n){if(!e)return;if(e.length>F){if(n)throw new h("TOO_LONG");return}if(!1===t)return e;var a=e.search(G);if(a<0)return;return e.slice(a).replace(Z,"")}(e,n,t)}});if(!r)return{};if(!function(e){return e.length>=a.ex&&S.test(e)}(r))return function(e){return $.test(e)}(r)?{error:"TOO_SHORT"}:{};var i=function(e){var t=e.search(C);if(t<0)return{};for(var n=e.slice(0,t),a=e.match(C),r=1;r<a.length;){if(a[r])return{number:n,ext:a[r]};r++}}(r);if(i.ext)return i;return{number:r}}(e,t.v2,t.extract),i=r.number,o=r.ext,u=r.error;if(!i){if(t.v2){if("TOO_SHORT"===u)throw new h("TOO_SHORT");throw new h("NOT_A_NUMBER")}return{}}var d=function(e,t,n,a){var r,i=(0,P.Z)((0,A.Z)(e),t,n,a.metadata),o=i.countryCallingCodeSource,u=i.countryCallingCode,d=i.number;if(u)a.selectNumberingPlan(u);else{if(!d||!t&&!n)return{};a.selectNumberingPlan(t,n),t?r=t:V&&a.isNonGeographicCallingCode(n)&&(r="001"),u=n||(0,p.Gg)(t,a.metadata)}if(!d)return{countryCallingCodeSource:o,countryCallingCode:u};var s=(0,M.Z)((0,A.Z)(d),a),l=s.nationalNumber,c=s.carrierCode,f=(0,T.Z)(u,{nationalNumber:l,defaultCountry:t,metadata:a});f&&(r=f,"001"===f||a.country(r));return{country:r,countryCallingCode:u,countryCallingCodeSource:o,nationalNumber:l,carrierCode:c}}(i,t.defaultCountry,t.defaultCallingCode,n),s=d.country,l=d.nationalNumber,c=d.countryCallingCode,f=d.countryCallingCodeSource,g=d.carrierCode;if(!n.hasSelectedNumberingPlan()){if(t.v2)throw new h("INVALID_COUNTRY");return{}}if(!l||l.length<a.ex){if(t.v2)throw new h("TOO_SHORT");return{}}if(l.length>a.sJ){if(t.v2)throw new h("TOO_LONG");return{}}if(t.v2){var m=new N.Z(c,l,n.metadata);return s&&(m.country=s),g&&(m.carrierCode=g),o&&(m.ext=o),m.__countryCallingCodeSource=f,m}var y=!!(t.extended?n.hasSelectedNumberingPlan():s)&&(0,O.Z)(l,n.nationalNumberPattern());return t.extended?{country:s,countryCallingCode:c,carrierCode:g,valid:y,possible:!!y||!(!0!==t.extended||!n.possibleLengths()||!(0,k.D)(l,n)),phone:l,ext:o}:y?function(e,t,n){var a={country:e,phone:t};n&&(a.ext=n);return a}(s,l,o):{}}function U(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function _(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?U(Object(n),!0).forEach((function(t){W(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):U(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function W(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function z(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function J(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?z(Object(n),!0).forEach((function(t){Y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):z(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function q(e,t,n){t&&t.defaultCountry&&!(0,p.aS)(t.defaultCountry,n)&&(t=J(J({},t),{},{defaultCountry:void 0}));try{return function(e,t,n){return H(e,_(_({},t),{},{v2:!0}),n)}(e,t,n)}catch(a){if(!(a instanceof h))throw a}}},6946:function(e,t){"use strict";t.Z={version:4,country_calling_codes:{1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],692:["MH"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],880:["BD"],886:["TW"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},countries:{AC:["247","00","(?:[01589]\\d|[46])\\d{4}",[5,6]],AD:["376","00","(?:1|6\\d)\\d{7}|[135-9]\\d{5}",[6,8,9],[["(\\d{3})(\\d{3})","$1 $2",["[135-9]"]],["(\\d{4})(\\d{4})","$1 $2",["1"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]]],AE:["971","00","(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",[5,6,7,8,9,10,11,12],[["(\\d{3})(\\d{2,9})","$1 $2",["60|8"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\d{3})(\\d)(\\d{5})","$1 $2 $3",["[479]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],AF:["93","00","[2-7]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],AG:["1","011","(?:268|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([457]\\d{6})$|1","268$1",0,"268"],AI:["1","011","(?:264|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2457]\\d{6})$|1","264$1",0,"264"],AL:["355","00","(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",[6,7,8,9],[["(\\d{3})(\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],AM:["374","00","(?:[1-489]\\d|55|60|77)\\d{6}",[8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\d{3})(\\d{5})","$1 $2",["2|3[12]"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[3-9]"],"0$1"]],"0"],AO:["244","00","[29]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[29]"]]]],AR:["54","00","(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",[10,11],[["(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\d)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\d{3})(\\d{3})(\\d{5})","$1-$2-$3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],AS:["1","011","(?:[58]\\d\\d|684|900)\\d{7}",[10],0,"1",0,"([267]\\d{6})$|1","684$1",0,"684"],AT:["43","00","1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\d)(\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\d{3})(\\d{2})","$1 $2",["517"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\d{3})(\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\d{4})(\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],AU:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",[5,6,7,8,9,10,12],[["(\\d{2})(\\d{3,4})","$1 $2",["16"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["14|4"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"(183[12])|0",0,0,0,[["(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8]))\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,["163\\d{2,6}",[5,6,7,8,9]],["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],AW:["297","00","(?:[25-79]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[25-9]"]]]],AX:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",[5,6,7,8,9,10,11,12],0,"0",0,0,0,0,"18",0,"00"],AZ:["994","00","365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[28]|2|365|46","1[28]|2|365[45]|46","1[28]|2|365(?:4|5[02])|46"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[13-9]"],"0$1"]],"0"],BA:["387","00","6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-3]|[7-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]|6[56]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],BB:["1","011","(?:246|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","246$1",0,"246"],BD:["880","00","[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{4,6})","$1-$2",["31[5-8]|[459]1"],"0$1"],["(\\d{3})(\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\d{4})(\\d{3,6})","$1-$2",["[13-9]|22"],"0$1"],["(\\d)(\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],BE:["32","00","4\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],BF:["226","00","[025-7]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[025-7]"]]]],BG:["359","00","00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",[6,7,8,9,12],[["(\\d)(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],BH:["973","00","[136-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[13679]|8[02-4679]"]]]],BI:["257","00","(?:[267]\\d|31)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2367]"]]]],BJ:["229","00","[24-689]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-689]"]]]],BL:["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|3[3-7]|5[12]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-5])\\d{4}"]]],BM:["1","011","(?:441|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","441$1",0,"441"],BN:["673","00","[2-578]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-578]"]]]],BO:["591","00(?:1\\d)?","(?:[2-467]\\d\\d|8001)\\d{5}",[8,9],[["(\\d)(\\d{7})","$1 $2",["[23]|4[46]"]],["(\\d{8})","$1",["[67]"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\d)?"],BQ:["599","00","(?:[34]1|7\\d)\\d{5}",[7],0,0,0,0,0,0,"[347]"],BR:["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",[8,9,10,11],[["(\\d{4})(\\d{4})","$1-$2",["300|4(?:0[02]|37)","4(?:02|37)0|[34]00"]],["(\\d{3})(\\d{2,3})(\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],"($1)"],["(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["[16][1-9]|[2-57-9]"],"($1)"]],"0",0,"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2"],BS:["1","011","(?:242|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([3-8]\\d{6})$|1","242$1",0,"242"],BT:["975","00","[17]\\d{7}|[2-8]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[2-68]|7[246]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[67]|7"]]]],BW:["267","00","(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",[7,8,10],[["(\\d{2})(\\d{5})","$1 $2",["90"]],["(\\d{3})(\\d{4})","$1 $2",["[24-6]|3[15-9]"]],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37]"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["8"]]]],BY:["375","810","(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3})","$1 $2",["800"],"8 $1"],["(\\d{3})(\\d{2})(\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],BZ:["501","00","(?:0800\\d|[2-8])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],["(\\d)(\\d{3})(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]]],CA:["1","011","(?:[2-8]\\d|90)\\d{8}|3\\d{6}",[7,10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",[10]],["",[10]],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",[10]],["900[2-9]\\d{6}",[10]],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\d{6}",[10]],0,["310\\d{4}",[7]],0,["600[2-9]\\d{6}",[10]]]],CC:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CD:["243","00","[189]\\d{8}|[1-68]\\d{6}",[7,9],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]"],"0$1"]],"0"],CF:["236","00","(?:[27]\\d{3}|8776)\\d{4}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[278]"]]]],CG:["242","00","222\\d{6}|(?:0\\d|80)\\d{7}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]]]],CH:["41","00","8\\d{11}|[2-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],CI:["225","00","[02]\\d{9}",[10],[["(\\d{2})(\\d{2})(\\d)(\\d{5})","$1 $2 $3 $4",["2"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3 $4",["0"]]]],CK:["682","00","[2-578]\\d{4}",[5],[["(\\d{2})(\\d{3})","$1 $2",["[2-578]"]]]],CL:["56","(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0","12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",[9,10,11],[["(\\d{5})(\\d{4})","$1 $2",["219","2196"],"($1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["44"]],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[1-36]"],"($1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9[2-9]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],"($1)"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{3})(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"]]]],CM:["237","00","[26]\\d{8}|88\\d{6,7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["88"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]|88"]]]],CN:["86","00|1(?:[12]\\d|79)\\d\\d00","1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",[7,8,9,10,11,12],[["(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]","(?:10|2[0-57-9])(?:10|9[56])","10(?:10|9[56])|2[0-57-9](?:100|9[56])"],"0$1"],["(\\d{3})(\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\d{3})(\\d{7,8})","$1 $2",["9"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"(1(?:[12]\\d|79)\\d\\d)|0",0,0,0,0,"00"],CO:["57","00(?:4(?:[14]4|56)|[579])","(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}",[10,11],[["(\\d{3})(\\d{7})","$1 $2",["6"],"($1)"],["(\\d{3})(\\d{7})","$1 $2",["3[0-357]|91"]],["(\\d)(\\d{3})(\\d{7})","$1-$2-$3",["1"],"0$1",0,"$1 $2 $3"]],"0",0,"0(4(?:[14]4|56)|[579])?"],CR:["506","00","(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",[8,10],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[3-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],CU:["53","119","[27]\\d{6,7}|[34]\\d{5,7}|63\\d{6}|(?:5|8\\d\\d)\\d{7}",[6,7,8,10],[["(\\d{2})(\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["[56]"],"0$1"],["(\\d{3})(\\d{7})","$1 $2",["8"],"0$1"]],"0"],CV:["238","0","(?:[2-59]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2-589]"]]]],CW:["599","00","(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[3467]"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],CX:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",[9]],["4(?:(?:79|94)[01]|83[0-389])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CY:["357","00","(?:[279]\\d|[58]0)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[257-9]"]]]],CZ:["420","00","(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["96"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]]],DE:["49","00","[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\d{2})(\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\d{3})(\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["138"],"0$1"],["(\\d{5})(\\d{2,10})","$1 $2",["3"],"0$1"],["(\\d{3})(\\d{5,11})","$1 $2",["181"],"0$1"],["(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\d{3})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\d{3})(\\d{7,12})","$1 $2",["8"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["15[0568]"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\d{3})(\\d{8})","$1 $2",["18"],"0$1"],["(\\d{3})(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\d{4})(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\d{3})(\\d{2})(\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],DJ:["253","00","(?:2\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[27]"]]]],DK:["45","00","[2-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],DM:["1","011","(?:[58]\\d\\d|767|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","767$1",0,"767"],DO:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,0,0,0,"8001|8[024]9"],DZ:["213","00","(?:[1-4]|[5-79]\\d|80)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],EC:["593","00","1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",[8,9,10,11],[["(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{3})(\\d{3,4})","$1 $2 $3",["1"]]],"0"],EE:["372","00","8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],["(\\d{4})(\\d{3,4})","$1 $2",["[45]|8(?:00|[1-49])","[45]|8(?:00[1-9]|[1-49])"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],EG:["20","00","[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",[8,9,10],[["(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{8})","$1 $2",["1"],"0$1"]],"0"],EH:["212","00","[5-8]\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],ER:["291","00","[178]\\d{6}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],ES:["34","00","[5-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],ET:["251","00","(?:11|[2-579]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-579]"],"0$1"]],"0"],FI:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",[5,6,7,8,9,10,11,12],[["(\\d)(\\d{4,9})","$1 $2",["[2568][1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"],["(\\d{3})(\\d{3,7})","$1 $2",["[12]00|[368]|70[07-9]"],"0$1"],["(\\d{2})(\\d{4,8})","$1 $2",["[1245]|7[135]"],"0$1"],["(\\d{2})(\\d{6,10})","$1 $2",["7"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],FJ:["679","0(?:0|52)","45\\d{5}|(?:0800\\d|[235-9])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1 $2",["[235-9]|45"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],FK:["500","00","[2-7]\\d{4}",[5]],FM:["691","00","(?:[39]\\d\\d|820)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[389]"]]]],FO:["298","00","[2-9]\\d{5}",[6],[["(\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],FR:["33","00","[1-9]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],GA:["241","00","(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",[7,8],[["(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["11|[67]"],"0$1"]],0,0,"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})","$1"],GB:["44","00","[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",[7,9,10],[["(\\d{3})(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["800"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[25]|7(?:0|6[02-9])","[25]|7(?:0|6(?:[03-9]|2[356]))"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,0,0,0,0,[["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0235])|4(?:[0-5]\\d\\d|69[7-9]|70[0-79])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-2]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]],0," x"],GD:["1","011","(?:473|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","473$1",0,"473"],GE:["995","00","(?:[3-57]\\d\\d|800)\\d{6}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],GF:["594","00","[56]94\\d{6}|(?:80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[56]|9[47]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[89]"],"0$1"]],"0"],GG:["44","00","(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",[7,9,10],0,"0",0,"([25-9]\\d{5})$|0","1481$1",0,0,[["1481[25-9]\\d{5}",[10]],["7(?:(?:781|839)\\d|911[17])\\d{5}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]]],GH:["233","00","(?:[235]\\d{3}|800)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],GI:["350","00","(?:[25]\\d|60)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["2"]]]],GL:["299","00","(?:19|[2-689]\\d|70)\\d{4}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["19|[2-9]"]]]],GM:["220","00","[2-9]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],GN:["224","00","722\\d{6}|(?:3|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]]],GP:["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-5])\\d{4}"]]],GQ:["240","00","222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],["(\\d{3})(\\d{6})","$1 $2",["[89]"]]]],GR:["30","00","5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",[10,11,12],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],["(\\d{4})(\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2689]"]],["(\\d{3})(\\d{3,4})(\\d{5})","$1 $2 $3",["8"]]]],GT:["502","00","(?:1\\d{3}|[2-7])\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],GU:["1","011","(?:[58]\\d\\d|671|900)\\d{7}",[10],0,"1",0,"([3-9]\\d{6})$|1","671$1",0,"671"],GW:["245","00","[49]\\d{8}|4\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["40"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"]]]],GY:["592","001","9008\\d{3}|(?:[2-467]\\d\\d|510|862)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],HK:["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",[5,6,7,8,9,11],[["(\\d{3})(\\d{2,5})","$1 $2",["900","9003"]],["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{3})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],HN:["504","00","8\\d{10}|[237-9]\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1-$2",["[237-9]"]]]],HR:["385","00","(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}",[6,7,8,9],[["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["6[01]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-5]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],HT:["509","00","(?:[2-489]\\d|55)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[2-589]"]]]],HU:["36","00","[235-7]\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"06 $1"]],"06"],ID:["62","00[89]","(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}",[7,8,9,10,11,12,13],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["15"]],["(\\d{2})(\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\d{3})(\\d{5,7})","$1 $2",["800"],"0$1"],["(\\d{3})(\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\d{3})(\\d{3,4})(\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\d{3})(\\d{6,8})","$1 $2",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\d{3})(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],IE:["353","00","(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\d{3})(\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["4"],"(0$1)"],["(\\d{2})(\\d)(\\d{3})(\\d{4})","$1 $2 $3 $4",["8"],"0$1"]],"0"],IL:["972","0(?:0|1[2-9])","1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",[7,8,9,10,11,12],[["(\\d{4})(\\d{3})","$1-$2",["125"]],["(\\d{4})(\\d{2})(\\d{2})","$1-$2-$3",["121"]],["(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1-$2-$3",["12"]],["(\\d{4})(\\d{6})","$1-$2",["159"]],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})","$1-$2 $3-$4",["15"]]],"0"],IM:["44","00","1624\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([25-8]\\d{5})$|0","1624$1",0,"74576|(?:16|7[56])24"],IN:["91","00","(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",[8,9,10,11,12,13],[["(\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\d{4})(\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["140"],0,1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"],"0$1",1],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\d{5})(\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\d{4})(\\d{2,4})(\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],IO:["246","00","3\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["3"]]]],IQ:["964","00","(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],IR:["98","00","[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",[4,5,6,7,10],[["(\\d{4,5})","$1",["96"],"0$1"],["(\\d{2})(\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],IS:["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\d|[4-9])\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],IT:["39","00","0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",[6,7,8,9,10,11],[["(\\d{2})(\\d{4,6})","$1 $2",["0[26]"]],["(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],["(\\d{4})(\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\d{4})(\\d{4})","$1 $2",["894"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["1(?:44|[679])|[378]"]],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]|14"]],["(\\d{2})(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["3"]]],0,0,0,0,0,0,[["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],["3[1-9]\\d{8}|3[2-9]\\d{7}",[9,10]],["80(?:0\\d{3}|3)\\d{3}",[6,9]],["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",[6,8,9,10]],["1(?:78\\d|99)\\d{6}",[9,10]],0,0,0,["55\\d{8}",[10]],["84(?:[08]\\d{3}|[17])\\d{3}",[6,9]]]],JE:["44","00","1534\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([0-24-8]\\d{5})$|0","1534$1",0,0,[["1534[0-24-8]\\d{5}"],["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"],["80(?:07(?:35|81)|8901)\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],["701511\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],["56\\d{8}"]]],JM:["1","011","(?:[58]\\d\\d|658|900)\\d{7}",[10],0,"1",0,0,0,0,"658|876"],JO:["962","00","(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\d{3})(\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["70"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],JP:["81","010","00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["[36]|4(?:2[09]|7[01])","[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["[14]|[289][2-9]|5[3-9]|7[2-4679]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[257-9]"],"0$1"]],"0",0,"(000[259]\\d{6})$|(?:(?:003768)0?)|0","$1"],KE:["254","000","(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",[7,8,9,10],[["(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[17]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],KG:["996","00","8\\d{9}|[235-9]\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-79]|88"],"0$1"],["(\\d{3})(\\d{3})(\\d)(\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],KH:["855","00[14-9]","1\\d{9}|[1-9]\\d{7,8}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],KI:["686","00","(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",[5,8],0,"0"],KM:["269","00","[3478]\\d{6}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[3478]"]]]],KN:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","869$1",0,"869"],KP:["850","00|99","85\\d{6}|(?:19\\d|[2-7])\\d{7}",[8,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],KR:["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\d{2})(\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\d{4})(\\d{4})","$1-$2",["1"]],["(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60|8"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{2})(\\d{5})(\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\d\\d))?"],KW:["965","00","18\\d{5}|(?:[2569]\\d|41)\\d{6}",[7,8],[["(\\d{4})(\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\d{3})(\\d{5})","$1 $2",["[245]"]]]],KY:["1","011","(?:345|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","345$1",0,"345"],KZ:["7","810","(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",[10,14],0,"8",0,0,0,0,"33|7",0,"8~10"],LA:["856","00","[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["30[013-9]"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[23]"],"0$1"]],"0"],LB:["961","00","[27-9]\\d{7}|[13-9]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27-9]"]]],"0"],LC:["1","011","(?:[58]\\d\\d|758|900)\\d{7}",[10],0,"1",0,"([2-8]\\d{6})$|1","758$1",0,"758"],LI:["423","00","[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",[7,9],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2379]|8(?:0[09]|7)","[2379]|8(?:0(?:02|9)|7)"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["69"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]],"0",0,"(1001)|0"],LK:["94","00","[1-9]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],LR:["231","00","(?:[25]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[4-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23578]"],"0$1"]],"0"],LS:["266","00","(?:[256]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2568]"]]]],LT:["370","00","(?:[3469]\\d|52|[78]0)\\d{6}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["52[0-7]"],"(8-$1)",1],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"8 $1",1],["(\\d{2})(\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(8-$1)",1],["(\\d{3})(\\d{5})","$1 $2",["[3-6]"],"(8-$1)",1]],"8",0,"[08]"],LU:["352","00","35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\d{2})(\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"],LV:["371","00","(?:[268]\\d|90)\\d{6}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[269]|8[01]"]]]],LY:["218","00","[2-9]\\d{8}",[9],[["(\\d{2})(\\d{7})","$1-$2",["[2-9]"],"0$1"]],"0"],MA:["212","00","[5-8]\\d{8}",[9],[["(\\d{5})(\\d{4})","$1-$2",["5(?:29|38)","5(?:29[1289]|389)","529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\d{4})(\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|9)|892","5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"],"0$1"],["(\\d{2})(\\d{7})","$1-$2",["8"],"0$1"],["(\\d{3})(\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5293[01]\\d{4}|5(?:2(?:[0-25-7]\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}"],["80\\d{7}"],["89\\d{7}"],0,0,0,0,["592(?:4[0-2]|93)\\d{4}"]]],MC:["377","00","(?:[3489]|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[389]"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],MD:["373","00","(?:[235-7]\\d|[89]0)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],ME:["382","00","(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],MF:["590","00","590\\d{6}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:395|76[018])\\d|475[0-5])\\d{4}"]]],MG:["261","00","[23]\\d{8}",[9],[["(\\d{2})(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"([24-9]\\d{6})$|0","20$1"],MH:["692","011","329\\d{4}|(?:[256]\\d|45)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1-$2",["[2-6]"]]],"1"],MK:["389","00","[2-578]\\d{7}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2|34[47]|4(?:[37]7|5[47]|64)"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],ML:["223","00","[24-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],MM:["95","00","1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",[6,7,8,9,10],[["(\\d)(\\d{2})(\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\d)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\d)(\\d{5})(\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],MN:["976","001","[12]\\d{7,9}|[5-9]\\d{7}",[8,9,10],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[5-9]"]],["(\\d{3})(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],MO:["853","00","0800\\d{3}|(?:28|[68]\\d)\\d{6}",[7,8],[["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{4})(\\d{4})","$1 $2",["[268]"]]]],MP:["1","011","[58]\\d{9}|(?:67|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","670$1",0,"670"],MQ:["596","00","596\\d{6}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],MR:["222","00","(?:[2-4]\\d\\d|800)\\d{5}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],MS:["1","011","(?:[58]\\d\\d|664|900)\\d{7}",[10],0,"1",0,"([34]\\d{6})$|1","664$1",0,"664"],MT:["356","00","3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2357-9]"]]]],MU:["230","0(?:0|[24-7]0|3[03])","(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\d{4})(\\d{4})","$1 $2",["[57]"]],["(\\d{5})(\\d{5})","$1 $2",["8"]]],0,0,0,0,0,0,0,"020"],MV:["960","0(?:0|19)","(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",[7,10],[["(\\d{3})(\\d{4})","$1-$2",["[34679]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],MW:["265","00","(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",[7,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[137-9]"],"0$1"]],"0"],MX:["52","0[09]","1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\d{7}|(?:1(?:[01]\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\d)\\d{8}",[10,11],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["33|5[56]|81"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2-9]"],0,1],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 $3 $4",["1(?:33|5[56]|81)"],0,1],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 $3 $4",["1"],0,1]],"01",0,"0(?:[12]|4[45])|1",0,0,0,0,"00"],MY:["60","00","1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1-$2 $3",["1(?:[02469]|[378][1-9]|53)|8","1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3-$4",["1(?:[367]|80)"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],MZ:["258","00","(?:2|8\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2|8[2-79]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],NA:["264","00","[68]\\d{7,8}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],NC:["687","00","(?:050|[2-57-9]\\d\\d)\\d{3}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[02-57-9]"]]]],NE:["227","00","[027-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["08"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[089]|2[013]|7[047]"]]]],NF:["672","00","[13]\\d{5}",[6],[["(\\d{2})(\\d{4})","$1 $2",["1[0-3]"]],["(\\d)(\\d{5})","$1 $2",["[13]"]]],0,0,"([0-258]\\d{4})$","3$1"],NG:["234","009","(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}",[7,8,10,11,12,13,14],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["78"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[3-7]|8[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\d{3})(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],NI:["505","00","(?:1800|[25-8]\\d{3})\\d{4}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[125-8]"]]]],NL:["31","00","(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",[5,6,7,8,9,10,11],[["(\\d{3})(\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["66"],"0$1"],["(\\d)(\\d{8})","$1 $2",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-578]|91"],"0$1"],["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3",["9"],"0$1"]],"0"],NO:["47","00","(?:0|[2-9]\\d{3})\\d{4}",[5,8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],NP:["977","00","(?:1\\d|9)\\d{9}|[1-9]\\d{7}",[8,10,11],[["(\\d)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],"0$1"],["(\\d{3})(\\d{7})","$1-$2",["9"]]],"0"],NR:["674","00","(?:444|(?:55|8\\d)\\d|666)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[4-68]"]]]],NU:["683","00","(?:[47]|888\\d)\\d{3}",[4,7],[["(\\d{3})(\\d{4})","$1 $2",["8"]]]],NZ:["64","0(?:0|161)","[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,8})","$1 $2",["8[1-79]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["50[036-8]|8|90","50(?:[0367]|88)|8|90"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|[589]"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["1|2[028]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7"],"0$1"]],"0",0,0,0,0,0,0,"00"],OM:["968","00","(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",[7,8,9],[["(\\d{3})(\\d{4,6})","$1 $2",["[58]"]],["(\\d{2})(\\d{6})","$1 $2",["2"]],["(\\d{4})(\\d{4})","$1 $2",["[179]"]]]],PA:["507","00","(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",[7,8,10,11],[["(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],["(\\d{4})(\\d{4})","$1-$2",["[68]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]]],PE:["51","00|19(?:1[124]|77|90)00","(?:[14-8]|9\\d)\\d{7}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["1"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,"00"," Anexo "],PF:["689","00","4\\d{5}(?:\\d{2})?|8\\d{7,8}",[6,8,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4|8[7-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],PG:["675","00|140[1-3]","(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\d{4})(\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],PH:["63","00","(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",[6,8,9,10,11,12,13],[["(\\d)(\\d{5})","$1 $2",["2"],"(0$1)"],["(\\d{4})(\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1"]]],"0"],PK:["92","00","122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,7})","$1 $2 $3",["[89]0"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["1"]],["(\\d{3})(\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\d{5})(\\d{5})","$1 $2",["58"],"(0$1)"],["(\\d{3})(\\d{7})","$1 $2",["3"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],PL:["48","00","(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",[6,7,8,9,10],[["(\\d{5})","$1",["19"]],["(\\d{3})(\\d{3})","$1 $2",["11|20|64"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-7]|8[1-79]|9[145]"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["8"]]]],PM:["508","00","[45]\\d{5}|(?:708|80\\d)\\d{6}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[45]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],PR:["1","011","(?:[589]\\d\\d|787)\\d{7}",[10],0,"1",0,0,0,0,"787|939"],PS:["970","00","[2489]2\\d{6}|(?:1\\d|5)\\d{8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],PT:["351","00","1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["16|[236-9]"]]]],PW:["680","01[12]","(?:[24-8]\\d\\d|345|900)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],PY:["595","00","59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\d{3})(\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["87"]],["(\\d{3})(\\d{6})","$1 $2",["9(?:[5-79]|8[1-6])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],"0"],QA:["974","00","800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",[7,8,9,11],[["(\\d{3})(\\d{4})","$1 $2",["2[16]|8"]],["(\\d{4})(\\d{4})","$1 $2",["[3-7]"]]]],RE:["262","00","(?:26|[689]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2689]"],"0$1"]],"0",0,0,0,0,0,[["26(?:2\\d\\d|3(?:0\\d|1[0-5]))\\d{4}"],["69(?:2\\d\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\d|5[0-5]|7[0-27]|8[0-8]|9[0-479]))\\d{4}"],["80\\d{7}"],["89[1-37-9]\\d{6}"],0,0,0,0,["9(?:399[0-3]|479[0-5]|76(?:2[27]|3[0-37]))\\d{4}"],["8(?:1[019]|2[0156]|84|90)\\d{6}"]]],RO:["40","00","(?:[2378]\\d|90)\\d{7}|[23]\\d{5}",[6,9],[["(\\d{3})(\\d{3})","$1 $2",["2[3-6]","2[3-6]\\d9"],"0$1"],["(\\d{2})(\\d{4})","$1 $2",["219|31"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[237-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],RS:["381","00","38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",[6,7,8,9,10,11,12],[["(\\d{3})(\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\d{2})(\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],RU:["7","810","8\\d{13}|[347-9]\\d{9}",[10,14],[["(\\d{4})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\d{5})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[349]|8(?:[02-7]|1[1-8])"],"8 ($1)",1],["(\\d{4})(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["8"],"8 ($1)"]],"8",0,0,0,0,"3[04-689]|[489]",0,"8~10"],RW:["250","00","(?:06|[27]\\d\\d|[89]00)\\d{6}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"]],"0"],SA:["966","00","92\\d{7}|(?:[15]|8\\d)\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["9"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["81"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]],"0"],SB:["677","0[01]","(?:[1-6]|[7-9]\\d\\d)\\d{4}",[5,7],[["(\\d{2})(\\d{5})","$1 $2",["7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],SC:["248","010|0[0-2]","800\\d{4}|(?:[249]\\d|64)\\d{5}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]|9[57]"]]],0,0,0,0,0,0,0,"00"],SD:["249","00","[19]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],SE:["46","00","(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{4})","$1-$2",["9(?:00|39|44|9)"],"0$1",0,"$1 $2"],["(\\d{2})(\\d{3})(\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{2,3})(\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["10|7"],"0$1",0,"$1 $2 $3 $4"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],SG:["65","0[0-3]\\d","(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["[369]|8(?:0[1-8]|[1-9])"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]],["(\\d{4})(\\d{4})(\\d{3})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],SH:["290","00","(?:[256]\\d|8)\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],SI:["386","00|10(?:22|66|88|99)","[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",[5,6,7,8],[["(\\d{2})(\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["59|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],SJ:["47","00","0\\d{4}|(?:[489]\\d|79)\\d{6}",[5,8],0,0,0,0,0,0,"79"],SK:["421","00","[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",[6,7,9],[["(\\d)(\\d{2})(\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],SL:["232","00","(?:[237-9]\\d|66)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[236-9]"],"(0$1)"]],"0"],SM:["378","00","(?:0549|[5-7]\\d)\\d{6}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\d{4})(\\d{6})","$1 $2",["0"]]],0,0,"([89]\\d{5})$","0549$1"],SN:["221","00","(?:[378]\\d|93)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]]]],SO:["252","00","[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",[6,7,8,9],[["(\\d{2})(\\d{4})","$1 $2",["8[125]"]],["(\\d{6})","$1",["[134]"]],["(\\d)(\\d{6})","$1 $2",["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],["(\\d)(\\d{7})","$1 $2",["(?:2|90)4|[67]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[348]|64|79|90"]],["(\\d{2})(\\d{5,7})","$1 $2",["1|28|6[0-35-9]|77|9[2-9]"]]],"0"],SR:["597","00","(?:[2-5]|68|[78]\\d)\\d{5}",[6,7],[["(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],["(\\d{3})(\\d{3})","$1-$2",["[2-5]"]],["(\\d{3})(\\d{4})","$1-$2",["[6-8]"]]]],SS:["211","00","[19]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],ST:["239","00","(?:22|9\\d)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[29]"]]]],SV:["503","00","[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?",[7,8,11],[["(\\d{3})(\\d{4})","$1 $2",["[89]"]],["(\\d{4})(\\d{4})","$1 $2",["[267]"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]]],SX:["1","011","7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"(5\\d{6})$|1","721$1",0,"721"],SY:["963","00","[1-39]\\d{8}|[1-5]\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-5]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1",1]],"0"],SZ:["268","00","0800\\d{4}|(?:[237]\\d|900)\\d{6}",[8,9],[["(\\d{4})(\\d{4})","$1 $2",["[0237]"]],["(\\d{5})(\\d{4})","$1 $2",["9"]]]],TA:["290","00","8\\d{3}",[4],0,0,0,0,0,0,"8"],TC:["1","011","(?:[58]\\d\\d|649|900)\\d{7}",[10],0,"1",0,"([2-479]\\d{6})$|1","649$1",0,"649"],TD:["235","00|16","(?:22|[69]\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2679]"]]],0,0,0,0,0,0,0,"00"],TG:["228","00","[279]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[279]"]]]],TH:["66","00[1-9]","(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",[8,9,10,13],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],TJ:["992","810","[0-57-9]\\d{8}",[9],[["(\\d{6})(\\d)(\\d{2})","$1 $2 $3",["331","3317"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["44[04]|[34]7"]],["(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3[1-5]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[0-57-9]"]]],0,0,0,0,0,0,0,"8~10"],TK:["690","00","[2-47]\\d{3,6}",[4,5,6,7]],TL:["670","00","7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[2-489]|70"]],["(\\d{4})(\\d{4})","$1 $2",["7"]]]],TM:["993","810","[1-6]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\d{2})(\\d{6})","$1 $2",["6"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],TN:["216","00","[2-57-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]"]]]],TO:["676","00","(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",[5,7],[["(\\d{2})(\\d{3})","$1-$2",["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[5-9]"]]]],TR:["90","00","4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",[7,10,12,13],[["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["512|8[01589]|90"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|616)","5(?:[0-59]|6161)"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1],["(\\d{3})(\\d{3})(\\d{6,7})","$1 $2 $3",["80"],"0$1",1]],"0"],TT:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-46-8]\\d{6})$|1","868$1",0,"868"],TV:["688","00","(?:2|7\\d\\d|90)\\d{4}",[5,6,7],[["(\\d{2})(\\d{3})","$1 $2",["2"]],["(\\d{2})(\\d{4})","$1 $2",["90"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],TW:["886","0(?:0[25-79]|19)","[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",[7,8,9,10,11],[["(\\d{2})(\\d)(\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[258]0"],"0$1"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]","[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,5})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],TZ:["255","00[056]","(?:[25-8]\\d|41|90)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["5"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],UA:["380","00","[89]\\d{9}|[3-9]\\d{8}",[9,10],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])","3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|89|9[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],UG:["256","00[057]","800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",[9],[["(\\d{4})(\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],US:["1","011","[2-9]\\d{9}|3\\d{6}",[10],[["(\\d{3})(\\d{4})","$1-$2",["310"],0,1],["(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["5056(?:[0-35-9]\\d|4[46])\\d{4}|(?:4722|505[2-57-9]|983[29])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],["900[2-9]\\d{6}"],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"]]],UY:["598","0(?:0|1[3-9]\\d)","(?:0004|4)\\d{9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}",[7,8,10,13],[["(\\d{3})(\\d{4})","$1 $2",["405|8|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[124]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["4"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["0"]]],"0",0,0,0,0,0,0,"00"," int. "],UZ:["998","810","200\\d{6}|(?:33|[5-79]\\d|88)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[235-9]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],VA:["39","00","0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",[6,7,8,9,10,11],0,0,0,0,0,0,"06698"],VC:["1","011","(?:[58]\\d\\d|784|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","784$1",0,"784"],VE:["58","00","[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",[10],[["(\\d{3})(\\d{7})","$1-$2",["[24-689]"],"0$1"]],"0"],VG:["1","011","(?:284|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-578]\\d{6})$|1","284$1",0,"284"],VI:["1","011","[58]\\d{9}|(?:34|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","340$1",0,"340"],VN:["84","00","[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["80"],"0$1",1],["(\\d{4})(\\d{4,6})","$1 $2",["1"],0,1],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["6"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[357-9]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],VU:["678","00","[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",[5,7],[["(\\d{3})(\\d{4})","$1 $2",["[57-9]"]]]],WF:["681","00","(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[478]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],WS:["685","0","(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",[5,6,7,10],[["(\\d{5})","$1",["[2-5]|6[1-9]"]],["(\\d{3})(\\d{3,7})","$1 $2",["[68]"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],XK:["383","00","[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[23]"],"0$1"]],"0"],YE:["967","00","(?:1|7\\d)\\d{7}|[1-7]\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7(?:[24-6]|8[0-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],YT:["262","00","(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}",[9],0,"0",0,0,0,0,0,[["269(?:0[0-467]|5[0-4]|6\\d|[78]0)\\d{4}"],["639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])\\d{4}"],["80\\d{7}"],0,0,0,0,0,["9(?:(?:39|47)8[01]|769\\d)\\d{4}"]]],ZA:["27","00","[1-79]\\d{8}|8\\d{4,9}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],ZM:["260","00","800\\d{6}|(?:21|63|[79]\\d)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[79]"],"0$1"]],"0"],ZW:["263","00","2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",[5,6,7,8,9,10],[["(\\d{3})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\d)(\\d{3})(\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["80"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\d{4})(\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"]},nonGeographic:{800:["800",0,"(?:00|[1-9]\\d)\\d{6}",[8],[["(\\d{4})(\\d{4})","$1 $2",["\\d"]]],0,0,0,0,0,0,[0,0,["(?:00|[1-9]\\d)\\d{6}"]]],808:["808",0,"[1-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[1-9]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,["[1-9]\\d{7}"]]],870:["870",0,"7\\d{11}|[35-7]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[35-7]"]]],0,0,0,0,0,0,[0,["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"]]],878:["878",0,"10\\d{10}",[12],[["(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3",["1"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["10\\d{10}"]]],881:["881",0,"[0-36-9]\\d{8}",[9],[["(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[0-36-9]"]]],0,0,0,0,0,0,[0,["[0-36-9]\\d{8}"]]],882:["882",0,"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",[7,8,9,10,11,12],[["(\\d{2})(\\d{5})","$1 $2",["16|342"]],["(\\d{2})(\\d{6})","$1 $2",["49"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1[36]|9"]],["(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|23|3(?:[15]|4[57])|4|51"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["34"]],["(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["[1-35]"]]],0,0,0,0,0,0,[0,["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",[7,8,9,10,12]],0,0,0,0,0,0,["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]],883:["883",0,"(?:[1-4]\\d|51)\\d{6,10}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,8})","$1 $2 $3",["[14]|2[24-689]|3[02-689]|51[24-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["21"]],["(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[235]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]],888:["888",0,"\\d{11}",[11],[["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3"]],0,0,0,0,0,0,[0,0,0,0,0,0,["\\d{11}"]]],979:["979",0,"[1359]\\d{8}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[1359]"]]],0,0,0,0,0,0,[0,0,0,["[1359]\\d{8}"]]]}}},1134:function(e,t,n){"use strict";n.d(t,{KN:function(){return Q},Qr:function(){return q},U2:function(){return P},cI:function(){return je},t8:function(){return J}});var a=n(3433),r=n(4942),i=n(4165),o=n(7762),u=n(5861),d=n(1413),s=n(9439),l=n(4925),c=n(2791),f=["name"],h=["_f"],p=["_f"],g=function(e){return"checkbox"===e.type},m=function(e){return e instanceof Date},y=function(e){return null==e},v=function(e){return"object"===typeof e},$=function(e){return!y(e)&&!Array.isArray(e)&&v(e)&&!m(e)},b=function(e){return $(e)&&e.target?g(e.target)?e.target.checked:e.target.value:e},S=function(e,t){return e.has(function(e){return e.substring(0,e.search(/\.\d+(\.|$)/))||e}(t))},C=function(e){var t=e.constructor&&e.constructor.prototype;return $(t)&&t.hasOwnProperty("isPrototypeOf")},A="undefined"!==typeof window&&"undefined"!==typeof window.HTMLElement&&"undefined"!==typeof document;function k(e){var t,n=Array.isArray(e);if(e instanceof Date)t=new Date(e);else if(e instanceof Set)t=new Set(e);else{if(A&&(e instanceof Blob||e instanceof FileList)||!n&&!$(e))return e;if(t=n?[]:{},n||C(e))for(var a in e)e.hasOwnProperty(a)&&(t[a]=k(e[a]));else t=e}return t}var N=function(e){return Array.isArray(e)?e.filter(Boolean):[]},O=function(e){return void 0===e},P=function(e,t,n){if(!t||!$(e))return n;var a=N(t.split(/[,[\].]+?/)).reduce((function(e,t){return y(e)?e:e[t]}),e);return O(a)||a===e?O(e[t])?n:e[t]:a},M={BLUR:"blur",FOCUS_OUT:"focusout",CHANGE:"change"},T={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},B="max",w="min",E="maxLength",x="minLength",I="pattern",L="required",D="validate",R=c.createContext(null),K=function(){return c.useContext(R)},j=function(e,t,n){var a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r={defaultValues:t._defaultValues},i=function(i){Object.defineProperty(r,i,{get:function(){var r=i;return t._proxyFormState[r]!==T.all&&(t._proxyFormState[r]=!a||T.all),n&&(n[r]=!0),e[r]}})};for(var o in e)i(o);return r},F=function(e){return $(e)&&!Object.keys(e).length},G=function(e,t,n,a){n(e);e.name;var r=(0,l.Z)(e,f);return F(r)||Object.keys(r).length>=Object.keys(t).length||Object.keys(r).find((function(e){return t[e]===(!a||T.all)}))},Z=function(e){return Array.isArray(e)?e:[e]},V=function(e,t,n){return n&&t?e===t||Array.isArray(e)&&e.some((function(e){return e&&n&&e===t})):!e||!t||e===t||Z(e).some((function(e){return e&&(e.startsWith(t)||t.startsWith(e))}))};function H(e){var t=c.useRef(e);t.current=e,c.useEffect((function(){var n=!e.disabled&&t.current.subject&&t.current.subject.subscribe({next:t.current.next});return function(){n&&n.unsubscribe()}}),[e.disabled])}var U=function(e){return"string"===typeof e},_=function(e,t,n,a,r){return U(e)?(a&&t.watch.add(e),P(n,e,r)):Array.isArray(e)?e.map((function(e){return a&&t.watch.add(e),P(n,e)})):(a&&(t.watchAll=!0),n)};var W=function(e){return/^\w*$/.test(e)},z=function(e){return N(e.replace(/["|']|\]/g,"").split(/\.|\[/))};function J(e,t,n){for(var a=-1,r=W(t)?[t]:z(t),i=r.length,o=i-1;++a<i;){var u=r[a],d=n;if(a!==o){var s=e[u];d=$(s)||Array.isArray(s)?s:isNaN(+r[a+1])?{}:[]}e[u]=d,e=e[u]}return e}function Y(e){var t=K(),n=e.name,a=e.disabled,r=e.control,i=void 0===r?t.control:r,o=e.shouldUnregister,u=S(i._names.array,n),l=function(e){var t=K(),n=e||{},a=n.control,r=void 0===a?t.control:a,i=n.name,o=n.defaultValue,u=n.disabled,d=n.exact,l=c.useRef(i);l.current=i,H({disabled:u,subject:r._subjects.values,next:function(e){V(l.current,e.name,d)&&g(k(_(l.current,r._names,e.values||r._formValues,!1,o)))}});var f=c.useState(r._getWatch(i,o)),h=(0,s.Z)(f,2),p=h[0],g=h[1];return c.useEffect((function(){return r._removeUnmounted()})),p}({control:i,name:n,defaultValue:P(i._formValues,n,P(i._defaultValues,n,e.defaultValue)),exact:!0}),f=function(e){var t=K(),n=e||{},a=n.control,r=void 0===a?t.control:a,i=n.disabled,o=n.name,u=n.exact,l=c.useState(r._formState),f=(0,s.Z)(l,2),h=f[0],p=f[1],g=c.useRef(!0),m=c.useRef({isDirty:!1,isLoading:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1}),y=c.useRef(o);return y.current=o,H({disabled:i,next:function(e){return g.current&&V(y.current,e.name,u)&&G(e,m.current,r._updateFormState)&&p((0,d.Z)((0,d.Z)({},r._formState),e))},subject:r._subjects.state}),c.useEffect((function(){return g.current=!0,m.current.isValid&&r._updateValid(!0),function(){g.current=!1}}),[r]),j(h,r,m.current,!1)}({control:i,name:n}),h=c.useRef(i.register(n,(0,d.Z)((0,d.Z)({},e.rules),{},{value:l})));return h.current=i.register(n,e.rules),c.useEffect((function(){var e=i._options.shouldUnregister||o,t=function(e,t){var n=P(i._fields,e);n&&(n._f.mount=t)};if(t(n,!0),e){var a=k(P(i._options.defaultValues,n));J(i._defaultValues,n,a),O(P(i._formValues,n))&&J(i._formValues,n,a)}return function(){(u?e&&!i._state.action:e)?i.unregister(n):t(n,!1)}}),[n,i,u,o]),c.useEffect((function(){i._updateDisabledField({disabled:a,fields:i._fields,name:n})}),[a,n,i]),{field:{name:n,value:l,onChange:c.useCallback((function(e){return h.current.onChange({target:{value:b(e),name:n},type:M.CHANGE})}),[n]),onBlur:c.useCallback((function(){return h.current.onBlur({target:{value:P(i._formValues,n),name:n},type:M.BLUR})}),[n,i]),ref:function(e){var t=P(i._fields,n);t&&e&&(t._f.ref={focus:function(){return e.focus()},select:function(){return e.select()},setCustomValidity:function(t){return e.setCustomValidity(t)},reportValidity:function(){return e.reportValidity()}})}},formState:f,fieldState:Object.defineProperties({},{invalid:{enumerable:!0,get:function(){return!!P(f.errors,n)}},isDirty:{enumerable:!0,get:function(){return!!P(f.dirtyFields,n)}},isTouched:{enumerable:!0,get:function(){return!!P(f.touchedFields,n)}},error:{enumerable:!0,get:function(){return P(f.errors,n)}}})}}var q=function(e){return e.render(Y(e))};var Q=function(e,t,n,a,i){return t?(0,d.Z)((0,d.Z)({},n[e]),{},{types:(0,d.Z)((0,d.Z)({},n[e]&&n[e].types?n[e].types:{}),{},(0,r.Z)({},a,i||!0))}):{}},X=function e(t,n,a){var r,i=(0,o.Z)(a||Object.keys(t));try{for(i.s();!(r=i.n()).done;){var u=r.value,d=P(t,u);if(d){var s=d._f,c=(0,l.Z)(d,h);if(s&&n(s.name)){if(s.ref.focus){s.ref.focus();break}if(s.refs&&s.refs[0].focus){s.refs[0].focus();break}}else $(c)&&e(c,n)}}}catch(f){i.e(f)}finally{i.f()}},ee=function(e){return{isOnSubmit:!e||e===T.onSubmit,isOnBlur:e===T.onBlur,isOnChange:e===T.onChange,isOnAll:e===T.all,isOnTouch:e===T.onTouched}},te=function(e,t,n){return!n&&(t.watchAll||t.watch.has(e)||(0,a.Z)(t.watch).some((function(t){return e.startsWith(t)&&/^\.\w+/.test(e.slice(t.length))})))},ne=function(e,t,n){var a=N(P(e,n));return J(a,"root",t[n]),J(e,n,a),e},ae=function(e){return"boolean"===typeof e},re=function(e){return"file"===e.type},ie=function(e){return"function"===typeof e},oe=function(e){if(!A)return!1;var t=e?e.ownerDocument:0;return e instanceof(t&&t.defaultView?t.defaultView.HTMLElement:HTMLElement)},ue=function(e){return U(e)},de=function(e){return"radio"===e.type},se=function(e){return e instanceof RegExp},le={value:!1,isValid:!1},ce={value:!0,isValid:!0},fe=function(e){if(Array.isArray(e)){if(e.length>1){var t=e.filter((function(e){return e&&e.checked&&!e.disabled})).map((function(e){return e.value}));return{value:t,isValid:!!t.length}}return e[0].checked&&!e[0].disabled?e[0].attributes&&!O(e[0].attributes.value)?O(e[0].value)||""===e[0].value?ce:{value:e[0].value,isValid:!0}:ce:le}return le},he={isValid:!1,value:null},pe=function(e){return Array.isArray(e)?e.reduce((function(e,t){return t&&t.checked&&!t.disabled?{isValid:!0,value:t.value}:e}),he):he};function ge(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"validate";if(ue(e)||Array.isArray(e)&&e.every(ue)||ae(e)&&!e)return{type:n,message:ue(e)?e:"",ref:t}}var me=function(e){return $(e)&&!se(e)?e:{value:e,message:""}},ye=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t,n,a,r,o){var u,s,l,c,f,h,p,m,v,b,S,C,A,k,N,M,T,R,K,j,G,Z,V,H,_,W,z,J,Y,q,X,ee,te,ne,le,ce,he,ye,ve,$e,be,Se,Ce,Ae,ke,Ne,Oe,Pe;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=t._f,s=u.ref,l=u.refs,c=u.required,f=u.maxLength,h=u.minLength,p=u.min,m=u.max,v=u.pattern,b=u.validate,S=u.name,C=u.valueAsNumber,A=u.mount,k=u.disabled,N=P(n,S),A&&!k){e.next=4;break}return e.abrupt("return",{});case 4:if(M=l?l[0]:s,T=function(e){r&&M.reportValidity&&(M.setCustomValidity(ae(e)?"":e||""),M.reportValidity())},R={},K=de(s),j=g(s),G=K||j,Z=(C||re(s))&&O(s.value)&&O(N)||oe(s)&&""===s.value||""===N||Array.isArray(N)&&!N.length,V=Q.bind(null,S,a,R),H=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:E,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:x,i=e?t:n;R[S]=(0,d.Z)({type:e?a:r,message:i,ref:s},V(e?a:r,i))},!(o?!Array.isArray(N)||!N.length:c&&(!G&&(Z||y(N))||ae(N)&&!N||j&&!fe(l).isValid||K&&!pe(l).isValid))){e.next=20;break}if(_=ue(c)?{value:!!c,message:c}:me(c),W=_.value,z=_.message,!W){e.next=20;break}if(R[S]=(0,d.Z)({type:L,message:z,ref:M},V(L,z)),a){e.next=20;break}return T(z),e.abrupt("return",R);case 20:if(Z||y(p)&&y(m)){e.next=29;break}if(q=me(m),X=me(p),y(N)||isNaN(N)?(te=s.valueAsDate||new Date(N),ne=function(e){return new Date((new Date).toDateString()+" "+e)},le="time"==s.type,ce="week"==s.type,U(q.value)&&N&&(J=le?ne(N)>ne(q.value):ce?N>q.value:te>new Date(q.value)),U(X.value)&&N&&(Y=le?ne(N)<ne(X.value):ce?N<X.value:te<new Date(X.value))):(ee=s.valueAsNumber||(N?+N:N),y(q.value)||(J=ee>q.value),y(X.value)||(Y=ee<X.value)),!J&&!Y){e.next=29;break}if(H(!!J,q.message,X.message,B,w),a){e.next=29;break}return T(R[S].message),e.abrupt("return",R);case 29:if(!f&&!h||Z||!(U(N)||o&&Array.isArray(N))){e.next=39;break}if(he=me(f),ye=me(h),ve=!y(he.value)&&N.length>+he.value,$e=!y(ye.value)&&N.length<+ye.value,!ve&&!$e){e.next=39;break}if(H(ve,he.message,ye.message),a){e.next=39;break}return T(R[S].message),e.abrupt("return",R);case 39:if(!v||Z||!U(N)){e.next=46;break}if(be=me(v),Se=be.value,Ce=be.message,!se(Se)||N.match(Se)){e.next=46;break}if(R[S]=(0,d.Z)({type:I,message:Ce,ref:s},V(I,Ce)),a){e.next=46;break}return T(Ce),e.abrupt("return",R);case 46:if(!b){e.next=80;break}if(!ie(b)){e.next=59;break}return e.next=50,b(N,n);case 50:if(Ae=e.sent,!(ke=ge(Ae,M))){e.next=57;break}if(R[S]=(0,d.Z)((0,d.Z)({},ke),V(D,ke.message)),a){e.next=57;break}return T(ke.message),e.abrupt("return",R);case 57:e.next=80;break;case 59:if(!$(b)){e.next=80;break}Ne={},e.t0=(0,i.Z)().keys(b);case 62:if((e.t1=e.t0()).done){e.next=76;break}if(Oe=e.t1.value,F(Ne)||a){e.next=66;break}return e.abrupt("break",76);case 66:return e.t2=ge,e.next=69,b[Oe](N,n);case 69:e.t3=e.sent,e.t4=M,e.t5=Oe,(Pe=(0,e.t2)(e.t3,e.t4,e.t5))&&(Ne=(0,d.Z)((0,d.Z)({},Pe),V(Oe,Pe.message)),T(Pe.message),a&&(R[S]=Ne)),e.next=62;break;case 76:if(F(Ne)){e.next=80;break}if(R[S]=(0,d.Z)({ref:M},Ne),a){e.next=80;break}return e.abrupt("return",R);case 80:return T(!0),e.abrupt("return",R);case 82:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}();function ve(e,t){var n=Array.isArray(t)?t:W(t)?[t]:z(t),a=1===n.length?e:function(e,t){for(var n=t.slice(0,-1).length,a=0;a<n;)e=O(e)?a++:e[t[a++]];return e}(e,n),r=n.length-1,i=n[r];return a&&delete a[i],0!==r&&($(a)&&F(a)||Array.isArray(a)&&function(e){for(var t in e)if(e.hasOwnProperty(t)&&!O(e[t]))return!1;return!0}(a))&&ve(e,n.slice(0,-1)),e}function $e(){var e=[];return{get observers(){return e},next:function(t){var n,a=(0,o.Z)(e);try{for(a.s();!(n=a.n()).done;){var r=n.value;r.next&&r.next(t)}}catch(i){a.e(i)}finally{a.f()}},subscribe:function(t){return e.push(t),{unsubscribe:function(){e=e.filter((function(e){return e!==t}))}}},unsubscribe:function(){e=[]}}}var be=function(e){return y(e)||!v(e)};function Se(e,t){if(be(e)||be(t))return e===t;if(m(e)&&m(t))return e.getTime()===t.getTime();var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var r=0,i=n;r<i.length;r++){var o=i[r],u=e[o];if(!a.includes(o))return!1;if("ref"!==o){var d=t[o];if(m(u)&&m(d)||$(u)&&$(d)||Array.isArray(u)&&Array.isArray(d)?!Se(u,d):u!==d)return!1}}return!0}var Ce=function(e){return"select-multiple"===e.type},Ae=function(e){return de(e)||g(e)},ke=function(e){return oe(e)&&e.isConnected},Ne=function(e){for(var t in e)if(ie(e[t]))return!0;return!1};function Oe(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Array.isArray(e);if($(e)||n)for(var a in e)Array.isArray(e[a])||$(e[a])&&!Ne(e[a])?(t[a]=Array.isArray(e[a])?[]:{},Oe(e[a],t[a])):y(e[a])||(t[a]=!0);return t}function Pe(e,t,n){var a=Array.isArray(e);if($(e)||a)for(var r in e)Array.isArray(e[r])||$(e[r])&&!Ne(e[r])?O(t)||be(n[r])?n[r]=Array.isArray(e[r])?Oe(e[r],[]):(0,d.Z)({},Oe(e[r])):Pe(e[r],y(t)?{}:t[r],n[r]):n[r]=!Se(e[r],t[r]);return n}var Me=function(e,t){return Pe(e,t,Oe(t))},Te=function(e,t){var n=t.valueAsNumber,a=t.valueAsDate,r=t.setValueAs;return O(e)?e:n?""===e?NaN:e?+e:e:a&&U(e)?new Date(e):r?r(e):e};function Be(e){var t=e.ref;if(!(e.refs?e.refs.every((function(e){return e.disabled})):t.disabled))return re(t)?t.files:de(t)?pe(e.refs).value:Ce(t)?(0,a.Z)(t.selectedOptions).map((function(e){return e.value})):g(t)?fe(e.refs).value:Te(O(t.value)?e.ref.value:t.value,e)}var we=function(e,t,n,r){var i,u={},d=(0,o.Z)(e);try{for(d.s();!(i=d.n()).done;){var s=i.value,l=P(t,s);l&&J(u,s,l._f)}}catch(c){d.e(c)}finally{d.f()}return{criteriaMode:n,names:(0,a.Z)(e),fields:u,shouldUseNativeValidation:r}},Ee=function(e){return O(e)?e:se(e)?e.source:$(e)?se(e.value)?e.value.source:e.value:e},xe=function(e){return e.mount&&(e.required||e.min||e.max||e.maxLength||e.minLength||e.pattern||e.validate)};function Ie(e,t,n){var a=P(e,n);if(a||W(n))return{error:a,name:n};for(var r=n.split(".");r.length;){var i=r.join("."),o=P(t,i),u=P(e,i);if(o&&!Array.isArray(o)&&n!==i)return{name:n};if(u&&u.type)return{name:i,error:u};r.pop()}return{name:n}}var Le=function(e,t,n,a,r){return!r.isOnAll&&(!n&&r.isOnTouch?!(t||e):(n?a.isOnBlur:r.isOnBlur)?!e:!(n?a.isOnChange:r.isOnChange)||e)},De=function(e,t){return!N(P(e,t)).length&&ve(e,t)},Re={mode:T.onSubmit,reValidateMode:T.onChange,shouldFocusError:!0};function Ke(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,s=(0,d.Z)((0,d.Z)({},Re),t),c={submitCount:0,isDirty:!1,isLoading:ie(s.defaultValues),isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},errors:{}},f={},h=($(s.defaultValues)||$(s.values))&&k(s.defaultValues||s.values)||{},v=s.shouldUnregister?{}:k(h),C={action:!1,mount:!1,watch:!1},B={mount:new Set,unMount:new Set,array:new Set,watch:new Set},w=0,E={isDirty:!1,dirtyFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},x={values:$e(),array:$e(),state:$e()},I=t.resetOptions&&t.resetOptions.keepDirtyValues,L=ee(s.mode),D=ee(s.reValidateMode),R=s.criteriaMode===T.all,K=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t){var n;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!E.isValid&&!t){e.next=14;break}if(!s.resolver){e.next=9;break}return e.t1=F,e.next=5,W();case 5:e.t2=e.sent.errors,e.t0=(0,e.t1)(e.t2),e.next=12;break;case 9:return e.next=11,Y(f,!0);case 11:e.t0=e.sent;case 12:(n=e.t0)!==c.isValid&&x.state.next({isValid:n});case 14:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),j=function(e){return E.isValidating&&x.state.next({isValidating:e})},G=function(e,t,n,a){var r=P(f,e);if(r){var i=P(v,e,O(n)?P(h,e):n);O(i)||a&&a.defaultChecked||t?J(v,e,t?i:Be(r._f)):ue(e,i),C.mount&&K()}},V=function(e,t,n,a,r){var i=!1,o=!1,u={name:e};if(!n||a){E.isDirty&&(o=c.isDirty,c.isDirty=u.isDirty=q(),i=o!==u.isDirty);var d=Se(P(h,e),t);o=P(c.dirtyFields,e),d?ve(c.dirtyFields,e):J(c.dirtyFields,e,!0),u.dirtyFields=c.dirtyFields,i=i||E.dirtyFields&&o!==!d}if(n){var s=P(c.touchedFields,e);s||(J(c.touchedFields,e,n),u.touchedFields=c.touchedFields,i=i||E.touchedFields&&s!==n)}return i&&r&&x.state.next(u),i?u:{}},H=function(n,a,r,i){var o,u=P(c.errors,n),s=E.isValid&&ae(a)&&c.isValid!==a;if(t.delayError&&r?(o=function(){return function(e,t){J(c.errors,e,t),x.state.next({errors:c.errors})}(n,r)},(e=function(e){clearTimeout(w),w=setTimeout(o,e)})(t.delayError)):(clearTimeout(w),e=null,r?J(c.errors,n,r):ve(c.errors,n)),(r?!Se(u,r):u)||!F(i)||s){var l=(0,d.Z)((0,d.Z)((0,d.Z)({},i),s&&ae(a)?{isValid:a}:{}),{},{errors:c.errors,name:n});c=(0,d.Z)((0,d.Z)({},c),l),x.state.next(l)}j(!1)},W=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t){return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",s.resolver(v,s.context,we(t||B.mount,f,s.criteriaMode,s.shouldUseNativeValidation)));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),z=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t){var n,a,r,u,d,s;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,W(t);case 2:if(n=e.sent,a=n.errors,t){r=(0,o.Z)(t);try{for(r.s();!(u=r.n()).done;)d=u.value,(s=P(a,d))?J(c.errors,d,s):ve(c.errors,d)}catch(i){r.e(i)}finally{r.f()}}else c.errors=a;return e.abrupt("return",a);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),Y=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t,n){var a,r,o,u,d,f,h,g=arguments;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=g.length>2&&void 0!==g[2]?g[2]:{valid:!0},e.t0=(0,i.Z)().keys(t);case 2:if((e.t1=e.t0()).done){e.next=23;break}if(r=e.t1.value,!(o=t[r])){e.next=21;break}if(u=o._f,d=(0,l.Z)(o,p),!u){e.next=17;break}return f=B.array.has(u.name),e.next=11,ye(o,v,R,s.shouldUseNativeValidation&&!n,f);case 11:if(!(h=e.sent)[u.name]){e.next=16;break}if(a.valid=!1,!n){e.next=16;break}return e.abrupt("break",23);case 16:!n&&(P(h,u.name)?f?ne(c.errors,h,u.name):J(c.errors,u.name,h[u.name]):ve(c.errors,u.name));case 17:if(e.t2=d,!e.t2){e.next=21;break}return e.next=21,Y(d,n,a);case 21:e.next=2;break;case 23:return e.abrupt("return",a.valid);case 24:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),q=function(e,t){return e&&t&&J(v,e,t),!Se(fe(),h)},Q=function(e,t,n){return _(e,B,(0,d.Z)({},C.mount?v:O(t)?h:U(e)?(0,r.Z)({},e,t):t),n,t)},ue=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=P(f,e),i=t;if(r){var o=r._f;o&&(!o.disabled&&J(v,e,Te(t,o)),i=oe(o.ref)&&y(t)?"":t,Ce(o.ref)?(0,a.Z)(o.ref.options).forEach((function(e){return e.selected=i.includes(e.value)})):o.refs?g(o.ref)?o.refs.length>1?o.refs.forEach((function(e){return(!e.defaultChecked||!e.disabled)&&(e.checked=Array.isArray(i)?!!i.find((function(t){return t===e.value})):i===e.value)})):o.refs[0]&&(o.refs[0].checked=!!i):o.refs.forEach((function(e){return e.checked=e.value===i})):re(o.ref)?o.ref.value="":(o.ref.value=i,o.ref.type||x.values.next({name:e,values:(0,d.Z)({},v)})))}(n.shouldDirty||n.shouldTouch)&&V(e,i,n.shouldTouch,n.shouldDirty,!0),n.shouldValidate&&ce(e)},de=function e(t,n,a){for(var r in n){var i=n[r],o="".concat(t,".").concat(r),u=P(f,o);!B.array.has(t)&&be(i)&&(!u||u._f)||m(i)?ue(o,i,a):e(o,i,a)}},se=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=P(f,e),i=B.array.has(e),o=k(t);J(v,e,o),i?(x.array.next({name:e,values:(0,d.Z)({},v)}),(E.isDirty||E.dirtyFields)&&a.shouldDirty&&x.state.next({name:e,dirtyFields:Me(h,v),isDirty:q(e,o)})):!r||r._f||y(o)?ue(e,o,a):de(e,o,a),te(e,B)&&x.state.next((0,d.Z)({},c)),x.values.next({name:e,values:(0,d.Z)({},v)}),!C.mount&&n()},le=function(){var t=(0,u.Z)((0,i.Z)().mark((function t(n){var a,r,o,u,l,h,p,g,m,y,$,S,C,A,k,N,O;return(0,i.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(a=n.target,r=a.name,o=!0,u=P(f,r),l=function(){return a.type?Be(u._f):b(n)},!u){t.next=47;break}if(g=l(),m=n.type===M.BLUR||n.type===M.FOCUS_OUT,y=!xe(u._f)&&!s.resolver&&!P(c.errors,r)&&!u._f.deps||Le(m,P(c.touchedFields,r),c.isSubmitted,D,L),$=te(r,B,m),J(v,r,g),m?(u._f.onBlur&&u._f.onBlur(n),e&&e(0)):u._f.onChange&&u._f.onChange(n),S=V(r,g,m,!1),C=!F(S)||$,!m&&x.values.next({name:r,type:n.type,values:(0,d.Z)({},v)}),!y){t.next=18;break}return E.isValid&&K(),t.abrupt("return",C&&x.state.next((0,d.Z)({name:r},$?{}:S)));case 18:if(!m&&$&&x.state.next((0,d.Z)({},c)),j(!0),!s.resolver){t.next=32;break}return t.next=23,W([r]);case 23:A=t.sent,k=A.errors,N=Ie(c.errors,f,r),O=Ie(k,f,N.name||r),h=O.error,r=O.name,p=F(k),t.next=46;break;case 32:return t.next=34,ye(u,v,R,s.shouldUseNativeValidation);case 34:if(t.t0=r,h=t.sent[t.t0],!(o=isNaN(g)||g===P(v,r,g))){t.next=46;break}if(!h){t.next=42;break}p=!1,t.next=46;break;case 42:if(!E.isValid){t.next=46;break}return t.next=45,Y(f,!0);case 45:p=t.sent;case 46:o&&(u._f.deps&&ce(u._f.deps),H(r,p,h,S));case 47:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),ce=function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t){var n,a,o,l,h,p=arguments;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.length>1&&void 0!==p[1]?p[1]:{},l=Z(t),j(!0),!s.resolver){e.next=11;break}return e.next=6,z(O(t)?t:l);case 6:h=e.sent,a=F(h),o=t?!l.some((function(e){return P(h,e)})):a,e.next=21;break;case 11:if(!t){e.next=18;break}return e.next=14,Promise.all(l.map(function(){var e=(0,u.Z)((0,i.Z)().mark((function e(t){var n;return(0,i.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=P(f,t),e.next=3,Y(n&&n._f?(0,r.Z)({},t,n):n);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 14:((o=e.sent.every(Boolean))||c.isValid)&&K(),e.next=21;break;case 18:return e.next=20,Y(f);case 20:o=a=e.sent;case 21:return x.state.next((0,d.Z)((0,d.Z)((0,d.Z)({},!U(t)||E.isValid&&a!==c.isValid?{}:{name:t}),s.resolver||!t?{isValid:a}:{}),{},{errors:c.errors,isValidating:!1})),n.shouldFocus&&!o&&X(f,(function(e){return e&&P(c.errors,e)}),t?l:B.mount),e.abrupt("return",o);case 24:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),fe=function(e){var t=(0,d.Z)((0,d.Z)({},h),C.mount?v:{});return O(e)?t:U(e)?P(t,e):e.map((function(e){return P(t,e)}))},he=function(e,t){return{invalid:!!P((t||c).errors,e),isDirty:!!P((t||c).dirtyFields,e),isTouched:!!P((t||c).touchedFields,e),error:P((t||c).errors,e)}},pe=function(e,t,n){var a=(P(f,e,{_f:{}})._f||{}).ref;J(c.errors,e,(0,d.Z)((0,d.Z)({},t),{},{ref:a})),x.state.next({name:e,errors:c.errors,isValid:!1}),n&&n.shouldFocus&&a&&a.focus&&a.focus()},ge=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=(0,o.Z)(e?Z(e):B.mount);try{for(a.s();!(t=a.n()).done;){var r=t.value;B.mount.delete(r),B.array.delete(r),n.keepValue||(ve(f,r),ve(v,r)),!n.keepError&&ve(c.errors,r),!n.keepDirty&&ve(c.dirtyFields,r),!n.keepTouched&&ve(c.touchedFields,r),!s.shouldUnregister&&!n.keepDefaultValue&&ve(h,r)}}catch(i){a.e(i)}finally{a.f()}x.values.next({values:(0,d.Z)({},v)}),x.state.next((0,d.Z)((0,d.Z)({},c),n.keepDirty?{isDirty:q()}:{})),!n.keepIsValid&&K()},me=function(e){var t=e.disabled,n=e.name,a=e.field,r=e.fields;if(ae(t)){var i=t?void 0:P(v,n,Be(a?a._f:P(r,n)._f));J(v,n,i),V(n,i,!1,!1,!0)}},Ne=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=P(f,t),i=ae(n.disabled);return J(f,t,(0,d.Z)((0,d.Z)({},r||{}),{},{_f:(0,d.Z)((0,d.Z)({},r&&r._f?r._f:{ref:{name:t}}),{},{name:t,mount:!0},n)})),B.mount.add(t),r?me({field:r,disabled:n.disabled,name:t}):G(t,!0,n.value),(0,d.Z)((0,d.Z)((0,d.Z)({},i?{disabled:n.disabled}:{}),s.progressive?{required:!!n.required,min:Ee(n.min),max:Ee(n.max),minLength:Ee(n.minLength),maxLength:Ee(n.maxLength),pattern:Ee(n.pattern)}:{}),{},{name:t,onChange:le,onBlur:le,ref:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(i){if(i){e(t,n),r=P(f,t);var o=O(i.value)&&i.querySelectorAll&&i.querySelectorAll("input,select,textarea")[0]||i,u=Ae(o),l=r._f.refs||[];if(u?l.find((function(e){return e===o})):o===r._f.ref)return;J(f,t,{_f:(0,d.Z)((0,d.Z)({},r._f),u?{refs:[].concat((0,a.Z)(l.filter(ke)),[o],(0,a.Z)(Array.isArray(P(h,t))?[{}]:[])),ref:{type:o.type,name:t}}:{ref:o})}),G(t,!1,void 0,o)}else(r=P(f,t,{}))._f&&(r._f.mount=!1),(s.shouldUnregister||n.shouldUnregister)&&(!S(B.array,t)||!C.action)&&B.unMount.add(t)}))})},Oe=function(){return s.shouldFocusError&&X(f,(function(e){return e&&P(c.errors,e)}),B.mount)},Pe=function(e,t){return function(){var n=(0,u.Z)((0,i.Z)().mark((function n(a){var r,o,u,l;return(0,i.Z)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(a&&(a.preventDefault&&a.preventDefault(),a.persist&&a.persist()),r=k(v),x.state.next({isSubmitting:!0}),!s.resolver){n.next=13;break}return n.next=6,W();case 6:o=n.sent,u=o.errors,l=o.values,c.errors=u,r=l,n.next=15;break;case 13:return n.next=15,Y(f);case 15:if(ve(c.errors,"root"),!F(c.errors)){n.next=22;break}return x.state.next({errors:{}}),n.next=20,e(r,a);case 20:n.next=27;break;case 22:if(!t){n.next=25;break}return n.next=25,t((0,d.Z)({},c.errors),a);case 25:Oe(),setTimeout(Oe);case 27:x.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:F(c.errors),submitCount:c.submitCount+1,errors:c.errors});case 28:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()},Ke=function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e?k(e):h,i=k(r),u=e&&!F(e)?i:h;if(a.keepDefaultValues||(h=r),!a.keepValues){if(a.keepDirtyValues||I){var s,l=(0,o.Z)(B.mount);try{for(l.s();!(s=l.n()).done;){var p=s.value;P(c.dirtyFields,p)?J(u,p,P(v,p)):se(p,P(u,p))}}catch(N){l.e(N)}finally{l.f()}}else{if(A&&O(e)){var g,m=(0,o.Z)(B.mount);try{for(m.s();!(g=m.n()).done;){var y=g.value,$=P(f,y);if($&&$._f){var b=Array.isArray($._f.refs)?$._f.refs[0]:$._f.ref;if(oe(b)){var S=b.closest("form");if(S){S.reset();break}}}}}catch(N){m.e(N)}finally{m.f()}}f={}}v=t.shouldUnregister?a.keepDefaultValues?k(h):{}:k(u),x.array.next({values:(0,d.Z)({},u)}),x.values.next({values:(0,d.Z)({},u)})}B={mount:new Set,unMount:new Set,array:new Set,watch:new Set,watchAll:!1,focus:""},!C.mount&&n(),C.mount=!E.isValid||!!a.keepIsValid,C.watch=!!t.shouldUnregister,x.state.next({submitCount:a.keepSubmitCount?c.submitCount:0,isDirty:a.keepDirty?c.isDirty:!(!a.keepDefaultValues||Se(e,h)),isSubmitted:!!a.keepIsSubmitted&&c.isSubmitted,dirtyFields:a.keepDirtyValues?c.dirtyFields:a.keepDefaultValues&&e?Me(h,e):{},touchedFields:a.keepTouched?c.touchedFields:{},errors:a.keepErrors?c.errors:{},isSubmitting:!1,isSubmitSuccessful:!1})},je=function(e,t){return Ke(ie(e)?e(v):e,t)};return{control:{register:Ne,unregister:ge,getFieldState:he,handleSubmit:Pe,setError:pe,_executeSchema:W,_getWatch:Q,_getDirty:q,_updateValid:K,_removeUnmounted:function(){var e,t=(0,o.Z)(B.unMount);try{for(t.s();!(e=t.n()).done;){var n=e.value,a=P(f,n);a&&(a._f.refs?a._f.refs.every((function(e){return!ke(e)})):!ke(a._f.ref))&&ge(n)}}catch(r){t.e(r)}finally{t.f()}B.unMount=new Set},_updateFieldArray:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];if(a&&n){if(C.action=!0,i&&Array.isArray(P(f,e))){var o=n(P(f,e),a.argA,a.argB);r&&J(f,e,o)}if(i&&Array.isArray(P(c.errors,e))){var u=n(P(c.errors,e),a.argA,a.argB);r&&J(c.errors,e,u),De(c.errors,e)}if(E.touchedFields&&i&&Array.isArray(P(c.touchedFields,e))){var d=n(P(c.touchedFields,e),a.argA,a.argB);r&&J(c.touchedFields,e,d)}E.dirtyFields&&(c.dirtyFields=Me(h,v)),x.state.next({name:e,isDirty:q(e,t),dirtyFields:c.dirtyFields,errors:c.errors,isValid:c.isValid})}else J(v,e,t)},_updateDisabledField:me,_getFieldArray:function(e){return N(P(C.mount?v:h,e,t.shouldUnregister?P(h,e,[]):[]))},_reset:Ke,_resetDefaultValues:function(){return ie(s.defaultValues)&&s.defaultValues().then((function(e){je(e,s.resetOptions),x.state.next({isLoading:!1})}))},_updateFormState:function(e){c=(0,d.Z)((0,d.Z)({},c),e)},_subjects:x,_proxyFormState:E,get _fields(){return f},get _formValues(){return v},get _state(){return C},set _state(e){C=e},get _defaultValues(){return h},get _names(){return B},set _names(e){B=e},get _formState(){return c},set _formState(e){c=e},get _options(){return s},set _options(e){s=(0,d.Z)((0,d.Z)({},s),e)}},trigger:ce,register:Ne,handleSubmit:Pe,watch:function(e,t){return ie(e)?x.values.subscribe({next:function(n){return e(Q(void 0,t),n)}}):Q(e,t,!0)},setValue:se,getValues:fe,reset:je,resetField:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};P(f,e)&&(O(t.defaultValue)?se(e,P(h,e)):(se(e,t.defaultValue),J(h,e,t.defaultValue)),t.keepTouched||ve(c.touchedFields,e),t.keepDirty||(ve(c.dirtyFields,e),c.isDirty=t.defaultValue?q(e,P(h,e)):q()),t.keepError||(ve(c.errors,e),E.isValid&&K()),x.state.next((0,d.Z)({},c)))},clearErrors:function(e){e&&Z(e).forEach((function(e){return ve(c.errors,e)})),x.state.next({errors:e?c.errors:{}})},unregister:ge,setError:pe,setFocus:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=P(f,e),a=n&&n._f;if(a){var r=a.refs?a.refs[0]:a.ref;r.focus&&(r.focus(),t.shouldSelect&&r.select())}},getFieldState:he}}function je(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=c.useRef(),n=c.useRef(),a=c.useState({isDirty:!1,isValidating:!1,isLoading:ie(e.defaultValues),isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},errors:{},defaultValues:ie(e.defaultValues)?void 0:e.defaultValues}),r=(0,s.Z)(a,2),i=r[0],o=r[1];t.current||(t.current=(0,d.Z)((0,d.Z)({},Ke(e,(function(){return o((function(e){return(0,d.Z)({},e)}))}))),{},{formState:i}));var u=t.current.control;return u._options=e,H({subject:u._subjects.state,next:function(e){G(e,u._proxyFormState,u._updateFormState,!0)&&o((0,d.Z)({},u._formState))}}),c.useEffect((function(){e.values&&!Se(e.values,n.current)?(u._reset(e.values,u._options.resetOptions),n.current=e.values):u._resetDefaultValues()}),[e.values,u]),c.useEffect((function(){u._state.mount||(u._updateValid(),u._state.mount=!0),u._state.watch&&(u._state.watch=!1,u._subjects.state.next((0,d.Z)({},u._formState))),u._removeUnmounted()})),t.current.formState=j(i,u),t.current}},5338:function(e,t,n){"use strict";n.d(t,{yf:function(){return c}});var a=n(6946),r=n(7044),i=n(7853);function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){var e=(0,r.Z)(arguments),t=e.text,n=e.options,a=e.metadata;n=u(u({},n),{},{extract:!1});var o=(0,i.Z)(t,n,a);return o&&o.isValid()||!1}function l(e,t){var n=Array.prototype.slice.call(t);return n.push(a.Z),e.apply(this,n)}(0,n(416).s)(a.Z);function c(){return l(s,arguments)}},416:function(e,t,n){"use strict";n.d(t,{s:function(){return nn},Z:function(){return an}});var a=n(2791),r={ext:"ext.",country:"Phone number country",phone:"Phone",AB:"Abkhazia",AC:"Ascension Island",AD:"Andorra",AE:"United Arab Emirates",AF:"Afghanistan",AG:"Antigua and Barbuda",AI:"Anguilla",AL:"Albania",AM:"Armenia",AO:"Angola",AQ:"Antarctica",AR:"Argentina",AS:"American Samoa",AT:"Austria",AU:"Australia",AW:"Aruba",AX:"\xc5land Islands",AZ:"Azerbaijan",BA:"Bosnia and Herzegovina",BB:"Barbados",BD:"Bangladesh",BE:"Belgium",BF:"Burkina Faso",BG:"Bulgaria",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BL:"Saint Barth\xe9lemy",BM:"Bermuda",BN:"Brunei Darussalam",BO:"Bolivia",BQ:"Bonaire, Sint Eustatius and Saba",BR:"Brazil",BS:"Bahamas",BT:"Bhutan",BV:"Bouvet Island",BW:"Botswana",BY:"Belarus",BZ:"Belize",CA:"Canada",CC:"Cocos (Keeling) Islands",CD:"Congo, Democratic Republic of the",CF:"Central African Republic",CG:"Congo",CH:"Switzerland",CI:"Cote d'Ivoire",CK:"Cook Islands",CL:"Chile",CM:"Cameroon",CN:"China",CO:"Colombia",CR:"Costa Rica",CU:"Cuba",CV:"Cape Verde",CW:"Cura\xe7ao",CX:"Christmas Island",CY:"Cyprus",CZ:"Czech Republic",DE:"Germany",DJ:"Djibouti",DK:"Denmark",DM:"Dominica",DO:"Dominican Republic",DZ:"Algeria",EC:"Ecuador",EE:"Estonia",EG:"Egypt",EH:"Western Sahara",ER:"Eritrea",ES:"Spain",ET:"Ethiopia",FI:"Finland",FJ:"Fiji",FK:"Falkland Islands",FM:"Federated States of Micronesia",FO:"Faroe Islands",FR:"France",GA:"Gabon",GB:"United Kingdom",GD:"Grenada",GE:"Georgia",GF:"French Guiana",GG:"Guernsey",GH:"Ghana",GI:"Gibraltar",GL:"Greenland",GM:"Gambia",GN:"Guinea",GP:"Guadeloupe",GQ:"Equatorial Guinea",GR:"Greece",GS:"South Georgia and the South Sandwich Islands",GT:"Guatemala",GU:"Guam",GW:"Guinea-Bissau",GY:"Guyana",HK:"Hong Kong",HM:"Heard Island and McDonald Islands",HN:"Honduras",HR:"Croatia",HT:"Haiti",HU:"Hungary",ID:"Indonesia",IE:"Ireland",IL:"Israel",IM:"Isle of Man",IN:"India",IO:"British Indian Ocean Territory",IQ:"Iraq",IR:"Iran",IS:"Iceland",IT:"Italy",JE:"Jersey",JM:"Jamaica",JO:"Jordan",JP:"Japan",KE:"Kenya",KG:"Kyrgyzstan",KH:"Cambodia",KI:"Kiribati",KM:"Comoros",KN:"Saint Kitts and Nevis",KP:"North Korea",KR:"South Korea",KW:"Kuwait",KY:"Cayman Islands",KZ:"Kazakhstan",LA:"Laos",LB:"Lebanon",LC:"Saint Lucia",LI:"Liechtenstein",LK:"Sri Lanka",LR:"Liberia",LS:"Lesotho",LT:"Lithuania",LU:"Luxembourg",LV:"Latvia",LY:"Libya",MA:"Morocco",MC:"Monaco",MD:"Moldova",ME:"Montenegro",MF:"Saint Martin (French Part)",MG:"Madagascar",MH:"Marshall Islands",MK:"North Macedonia",ML:"Mali",MM:"Myanmar",MN:"Mongolia",MO:"Macao",MP:"Northern Mariana Islands",MQ:"Martinique",MR:"Mauritania",MS:"Montserrat",MT:"Malta",MU:"Mauritius",MV:"Maldives",MW:"Malawi",MX:"Mexico",MY:"Malaysia",MZ:"Mozambique",NA:"Namibia",NC:"New Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NI:"Nicaragua",NL:"Netherlands",NO:"Norway",NP:"Nepal",NR:"Nauru",NU:"Niue",NZ:"New Zealand",OM:"Oman",OS:"South Ossetia",PA:"Panama",PE:"Peru",PF:"French Polynesia",PG:"Papua New Guinea",PH:"Philippines",PK:"Pakistan",PL:"Poland",PM:"Saint Pierre and Miquelon",PN:"Pitcairn",PR:"Puerto Rico",PS:"Palestine",PT:"Portugal",PW:"Palau",PY:"Paraguay",QA:"Qatar",RE:"Reunion",RO:"Romania",RS:"Serbia",RU:"Russia",RW:"Rwanda",SA:"Saudi Arabia",SB:"Solomon Islands",SC:"Seychelles",SD:"Sudan",SE:"Sweden",SG:"Singapore",SH:"Saint Helena",SI:"Slovenia",SJ:"Svalbard and Jan Mayen",SK:"Slovakia",SL:"Sierra Leone",SM:"San Marino",SN:"Senegal",SO:"Somalia",SR:"Suriname",SS:"South Sudan",ST:"Sao Tome and Principe",SV:"El Salvador",SX:"Sint Maarten",SY:"Syria",SZ:"Swaziland",TA:"Tristan da Cunha",TC:"Turks and Caicos Islands",TD:"Chad",TF:"French Southern Territories",TG:"Togo",TH:"Thailand",TJ:"Tajikistan",TK:"Tokelau",TL:"Timor-Leste",TM:"Turkmenistan",TN:"Tunisia",TO:"Tonga",TR:"Turkey",TT:"Trinidad and Tobago",TV:"Tuvalu",TW:"Taiwan",TZ:"Tanzania",UA:"Ukraine",UG:"Uganda",UM:"United States Minor Outlying Islands",US:"United States",UY:"Uruguay",UZ:"Uzbekistan",VA:"Holy See (Vatican City State)",VC:"Saint Vincent and the Grenadines",VE:"Venezuela",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",VN:"Vietnam",VU:"Vanuatu",WF:"Wallis and Futuna",WS:"Samoa",XK:"Kosovo",YE:"Yemen",YT:"Mayotte",ZA:"South Africa",ZM:"Zambia",ZW:"Zimbabwe",ZZ:"International"},i=n(763),o=n(2007),u=n(1694);function d(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function l(e,t){for(var n,a=0,r=d(t.split(""));!(n=r()).done;){n.value===e&&a++}return a}function c(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return f(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function h(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"x",n=arguments.length>2?arguments[2]:void 0;if(!e)return function(e){return{text:e}};var a=l(t,e);return function(r){if(!r)return{text:"",template:e};for(var i,o=0,u="",d=c(e.split(""));!(i=d()).done;){var s=i.value;if(s===t){if(u+=r[o],++o===r.length&&r.length<a)break}else u+=s}return n&&(u=function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"x",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:" ",r=e.length,i=l("(",e)-l(")",e);i>0&&r<t.length;)e+=t[r].replace(n,a),")"===t[r]&&i--,r++;return e}(u,e)),{text:u,template:e}}}var p={Backspace:8,Delete:46};function g(e,t){void 0!==t&&(!function(){if("undefined"!==typeof navigator)return m.test(navigator.userAgent)}()?e.setSelectionRange(t,t):setTimeout((function(){return e.setSelectionRange(t,t)}),0))}var m=/Android/i;function y(e,t,n,a,r){if(!t.hasAttribute("readonly")){var i=function(e){switch(e.keyCode){case p.Backspace:return"Backspace";case p.Delete:return"Delete"}}(e);switch(i){case"Delete":case"Backspace":e.preventDefault();var o=function(e){if(e.selectionStart!==e.selectionEnd)return{start:e.selectionStart,end:e.selectionEnd}}(t);return o?(v(t,o),$(t,n,a,void 0,r)):$(t,n,a,i,r)}}}function v(e,t){var n=e.value;n=n.slice(0,t.start)+n.slice(t.end),e.value=n,g(e,t.start)}function $(e,t,n,a,r){var i=function(e,t,n){for(var a="",r=0,i=0;i<e.length;){var o=n(e[i],a);void 0!==o&&(a+=o,void 0!==t&&(t===i?r=a.length-1:t>i&&(r=a.length))),i++}return void 0===t&&(r=a.length),{value:a,caret:r}}(e.value,e.selectionStart,t),o=i.value,u=i.caret;if(a){var d=function(e,t,n){switch(n){case"Backspace":t>0&&(e=e.slice(0,t-1)+e.slice(t),t--);break;case"Delete":e=e.slice(0,t)+e.slice(t+1)}return{value:e,caret:t}}(o,u,a);o=d.value,u=d.caret}var s=function(e,t,n){"string"===typeof n&&(n=h(n));var a=n(e)||{},r=a.text,i=a.template;if(void 0===r&&(r=e),i)if(void 0===t)t=r.length;else{for(var o=0,u=!1,d=-1;o<r.length&&o<i.length;){if(r[o]!==i[o]){if(0===t){u=!0,t=o;break}d=o,t--}o++}u||(t=d+1)}return{text:r,caret:t}}(o,u,n),l=s.text;u=s.caret,e.value=l,g(e,u),r(o)}var b=["value","parse","format","inputComponent","onChange","onKeyDown"];function S(){return S=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},S.apply(this,arguments)}function C(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function A(e,t){var n=e.value,r=e.parse,i=e.format,o=e.inputComponent,u=e.onChange,d=e.onKeyDown,s=C(e,b),l=(0,a.useRef)(),c=(0,a.useCallback)((function(e){l.current=e,t&&("function"===typeof t?t(e):t.current=e)}),[t]),f=(0,a.useCallback)((function(e){$(l.current,r,i,void 0,u)}),[l,r,i,u]),h=(0,a.useCallback)((function(e){return d&&d(e),y(e,l.current,r,i,u)}),[l,r,i,u,d]);return a.createElement(o,S({},s,{ref:c,value:i(N(n)?"":n).text,onKeyDown:h,onChange:f}))}(A=a.forwardRef(A)).propTypes={parse:o.func.isRequired,format:o.func.isRequired,inputComponent:o.elementType.isRequired,type:o.string.isRequired,value:o.string,onChange:o.func.isRequired,onKeyDown:o.func,onCut:o.func,onPaste:o.func},A.defaultProps={inputComponent:"input",type:"text"};var k=A;function N(e){return void 0===e||null===e}var O=n(6874),P=n(3919);function M(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var T=function(){function e(t){var n=t.onCountryChange,a=t.onCallingCodeChange;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.onCountryChange=n,this.onCallingCodeChange=a}var t,n,a;return t=e,(n=[{key:"reset",value:function(e){var t=e.country,n=e.callingCode;this.international=!1,this.missingPlus=!1,this.IDDPrefix=void 0,this.callingCode=void 0,this.digits="",this.resetNationalSignificantNumber(),this.initCountryAndCallingCode(t,n)}},{key:"resetNationalSignificantNumber",value:function(){this.nationalSignificantNumber=this.getNationalDigits(),this.nationalSignificantNumberMatchesInput=!0,this.nationalPrefix=void 0,this.carrierCode=void 0,this.complexPrefixBeforeNationalSignificantNumber=void 0}},{key:"update",value:function(e){for(var t=0,n=Object.keys(e);t<n.length;t++){var a=n[t];this[a]=e[a]}}},{key:"initCountryAndCallingCode",value:function(e,t){this.setCountry(e),this.setCallingCode(t)}},{key:"setCountry",value:function(e){this.country=e,this.onCountryChange(e)}},{key:"setCallingCode",value:function(e){this.callingCode=e,this.onCallingCodeChange(e,this.country)}},{key:"startInternationalNumber",value:function(e,t){this.international=!0,this.initCountryAndCallingCode(e,t)}},{key:"appendDigits",value:function(e){this.digits+=e}},{key:"appendNationalSignificantNumberDigits",value:function(e){this.nationalSignificantNumber+=e}},{key:"getNationalDigits",value:function(){return this.international?this.digits.slice((this.IDDPrefix?this.IDDPrefix.length:0)+(this.callingCode?this.callingCode.length:0)):this.digits}},{key:"getDigitsWithoutInternationalPrefix",value:function(){return this.international&&this.IDDPrefix?this.digits.slice(this.IDDPrefix.length):this.digits}}])&&M(t.prototype,n),a&&M(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return w(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return w(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function w(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var E="x",x=new RegExp(E);function I(e,t){if(t<1)return"";for(var n="";t>1;)1&t&&(n+=e),t>>=1,e+=e;return n+e}function L(e,t){return")"===e[t]&&t++,function(e){var t=[],n=0;for(;n<e.length;)"("===e[n]?t.push(n):")"===e[n]&&t.pop(),n++;var a=0,r="";t.push(e.length);for(var i=0,o=t;i<o.length;i++){var u=o[i];r+=e.slice(a,u),a=u+1}return r}(e.slice(0,t))}var D=n(2444),R=n(3298),K=n(5066);function j(e,t,n){var a=n.metadata,r=n.shouldTryNationalPrefixFormattingRule,i=n.getSeparatorAfterNationalPrefix;if(new RegExp("^(?:".concat(t.pattern(),")$")).test(e.nationalSignificantNumber))return function(e,t,n){var a=n.metadata,r=n.shouldTryNationalPrefixFormattingRule,i=n.getSeparatorAfterNationalPrefix;e.nationalSignificantNumber,e.international,e.nationalPrefix,e.carrierCode;if(r(t)){var o=F(e,t,{useNationalPrefixFormattingRule:!0,getSeparatorAfterNationalPrefix:i,metadata:a});if(o)return o}return F(e,t,{useNationalPrefixFormattingRule:!1,getSeparatorAfterNationalPrefix:i,metadata:a})}(e,t,{metadata:a,shouldTryNationalPrefixFormattingRule:r,getSeparatorAfterNationalPrefix:i})}function F(e,t,n){var a=n.metadata,r=n.useNationalPrefixFormattingRule,i=n.getSeparatorAfterNationalPrefix,o=(0,K.Z)(e.nationalSignificantNumber,t,{carrierCode:e.carrierCode,useInternationalFormat:e.international,withNationalPrefix:r,metadata:a});if(r||(e.nationalPrefix?o=e.nationalPrefix+i(t)+o:e.complexPrefixBeforeNationalSignificantNumber&&(o=e.complexPrefixBeforeNationalSignificantNumber+" "+o)),function(e,t){return(0,R.ZP)(e)===t.getNationalDigits()}(o,e))return o}function G(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var Z=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,a;return t=e,(n=[{key:"parse",value:function(e){if(this.context=[{or:!0,instructions:[]}],this.parsePattern(e),1!==this.context.length)throw new Error("Non-finalized contexts left when pattern parse ended");var t=this.context[0],n=t.branches,a=t.instructions;if(n)return{op:"|",args:n.concat([_(a)])};if(0===a.length)throw new Error("Pattern is required");return 1===a.length?a[0]:a}},{key:"startContext",value:function(e){this.context.push(e)}},{key:"endContext",value:function(){this.context.pop()}},{key:"getContext",value:function(){return this.context[this.context.length-1]}},{key:"parsePattern",value:function(e){if(!e)throw new Error("Pattern is required");var t=e.match(U);if(t){var n=t[1],a=e.slice(0,t.index),r=e.slice(t.index+n.length);switch(n){case"(?:":a&&this.parsePattern(a),this.startContext({or:!0,instructions:[],branches:[]});break;case")":if(!this.getContext().or)throw new Error('")" operator must be preceded by "(?:" operator');if(a&&this.parsePattern(a),0===this.getContext().instructions.length)throw new Error('No instructions found after "|" operator in an "or" group');var i=this.getContext().branches;i.push(_(this.getContext().instructions)),this.endContext(),this.getContext().instructions.push({op:"|",args:i});break;case"|":if(!this.getContext().or)throw new Error('"|" operator can only be used inside "or" groups');if(a&&this.parsePattern(a),!this.getContext().branches){if(1!==this.context.length)throw new Error('"branches" not found in an "or" group context');this.getContext().branches=[]}this.getContext().branches.push(_(this.getContext().instructions)),this.getContext().instructions=[];break;case"[":a&&this.parsePattern(a),this.startContext({oneOfSet:!0});break;case"]":if(!this.getContext().oneOfSet)throw new Error('"]" operator must be preceded by "[" operator');this.endContext(),this.getContext().instructions.push({op:"[]",args:V(a)});break;default:throw new Error("Unknown operator: ".concat(n))}r&&this.parsePattern(r)}else{if(H.test(e))throw new Error("Illegal characters found in a pattern: ".concat(e));this.getContext().instructions=this.getContext().instructions.concat(e.split(""))}}}])&&G(t.prototype,n),a&&G(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e){for(var t=[],n=0;n<e.length;){if("-"===e[n]){if(0===n||n===e.length-1)throw new Error("Couldn't parse a one-of set pattern: ".concat(e));for(var a=e[n-1].charCodeAt(0)+1,r=e[n+1].charCodeAt(0)-1,i=a;i<=r;)t.push(String.fromCharCode(i)),i++}else t.push(e[n]);n++}return t}var H=/[\(\)\[\]\?\:\|]/,U=new RegExp("(\\||\\(\\?\\:|\\)|\\[|\\])");function _(e){return 1===e.length?e[0]:e}function W(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return z(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function J(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var Y=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.matchTree=(new Z).parse(t)}var t,n,a;return t=e,n=[{key:"match",value:function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).allowOverflow;if(!e)throw new Error("String is required");var n=q(e.split(""),this.matchTree,!0);if(n&&n.match&&delete n.matchedChars,!n||!n.overflow||t)return n}}],n&&J(t.prototype,n),a&&J(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t,n){if("string"===typeof t){var a=e.join("");return 0===t.indexOf(a)?e.length===t.length?{match:!0,matchedChars:e}:{partialMatch:!0}:0===a.indexOf(t)?n&&e.length>t.length?{overflow:!0}:{match:!0,matchedChars:e.slice(0,t.length)}:void 0}if(Array.isArray(t)){for(var r=e.slice(),i=0;i<t.length;){var o=q(r,t[i],n&&i===t.length-1);if(!o)return;if(o.overflow)return o;if(!o.match){if(o.partialMatch)return{partialMatch:!0};throw new Error("Unsupported match result:\n".concat(JSON.stringify(o,null,2)))}if(0===(r=r.slice(o.matchedChars.length)).length)return i===t.length-1?{match:!0,matchedChars:e}:{partialMatch:!0};i++}return n?{overflow:!0}:{match:!0,matchedChars:e.slice(0,e.length-r.length)}}switch(t.op){case"|":for(var u,d,s=W(t.args);!(d=s()).done;){var l=q(e,d.value,n);if(l){if(l.overflow)return l;if(l.match)return{match:!0,matchedChars:l.matchedChars};if(!l.partialMatch)throw new Error("Unsupported match result:\n".concat(JSON.stringify(l,null,2)));u=!0}}return u?{partialMatch:!0}:void 0;case"[]":for(var c,f=W(t.args);!(c=f()).done;){var h=c.value;if(e[0]===h)return 1===e.length?{match:!0,matchedChars:e}:n?{overflow:!0}:{match:!0,matchedChars:[h]}}return;default:throw new Error("Unsupported instruction tree: ".concat(t))}}var Q=n(3258),X=n(2488);function ee(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return te(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return te(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function ne(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var ae=I("9",15),re=/[- ]/,ie=function(){return/\[([^\[\]])*\]/g},oe=function(){return/\d(?=[^,}][^,}])/g},ue=new RegExp("["+Q.uv+"]*\\$1["+Q.uv+"]*(\\$\\d["+Q.uv+"]*)*$"),de=function(){function e(t){t.state;var n=t.metadata;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.metadata=n,this.resetFormat()}var t,n,a;return t=e,n=[{key:"resetFormat",value:function(){this.chosenFormat=void 0,this.template=void 0,this.nationalNumberTemplate=void 0,this.populatedNationalNumberTemplate=void 0,this.populatedNationalNumberTemplatePosition=-1}},{key:"reset",value:function(e,t){this.resetFormat(),e?(this.isNANP="1"===e.callingCode(),this.matchingFormats=e.formats(),t.nationalSignificantNumber&&this.narrowDownMatchingFormats(t)):(this.isNANP=void 0,this.matchingFormats=[])}},{key:"format",value:function(e,t){var n,a,r=this;if(n=t.nationalSignificantNumber,a=this.metadata,"IS_POSSIBLE"===(0,D.Z)(n,a))for(var i,o=ee(this.matchingFormats);!(i=o()).done;){var u=i.value,d=j(t,u,{metadata:this.metadata,shouldTryNationalPrefixFormattingRule:function(e){return r.shouldTryNationalPrefixFormattingRule(e,{international:t.international,nationalPrefix:t.nationalPrefix})},getSeparatorAfterNationalPrefix:function(e){return r.getSeparatorAfterNationalPrefix(e)}});if(d)return this.resetFormat(),this.chosenFormat=u,this.setNationalNumberTemplate(d.replace(/\d/g,E),t),this.populatedNationalNumberTemplate=d,this.populatedNationalNumberTemplatePosition=this.template.lastIndexOf(E),d}return this.formatNationalNumberWithNextDigits(e,t)}},{key:"formatNationalNumberWithNextDigits",value:function(e,t){var n=this.chosenFormat,a=this.chooseFormat(t);if(a)return a===n?this.formatNextNationalNumberDigits(e):this.formatNextNationalNumberDigits(t.getNationalDigits())}},{key:"narrowDownMatchingFormats",value:function(e){var t=this,n=e.nationalSignificantNumber,a=e.nationalPrefix,r=e.international,i=n,o=i.length-3;o<0&&(o=0),this.matchingFormats=this.matchingFormats.filter((function(e){return t.formatSuits(e,r,a)&&t.formatMatches(e,i,o)})),this.chosenFormat&&-1===this.matchingFormats.indexOf(this.chosenFormat)&&this.resetFormat()}},{key:"formatSuits",value:function(e,t,n){return!(n&&!e.usesNationalPrefix()&&!e.nationalPrefixIsOptionalWhenFormattingInNationalFormat())&&!(!t&&!n&&e.nationalPrefixIsMandatoryWhenFormattingInNationalFormat())}},{key:"formatMatches",value:function(e,t,n){var a=e.leadingDigitsPatterns().length;if(0===a)return!0;n=Math.min(n,a-1);var r=e.leadingDigitsPatterns()[n];if(t.length<3)try{return void 0!==new Y(r).match(t,{allowOverflow:!0})}catch(i){return console.error(i),!0}return new RegExp("^(".concat(r,")")).test(t)}},{key:"getFormatFormat",value:function(e,t){return t?e.internationalFormat():e.format()}},{key:"chooseFormat",value:function(e){for(var t,n=this,a=function(){var a=t.value;return n.chosenFormat===a?"break":ue.test(n.getFormatFormat(a,e.international))?n.createTemplateForFormat(a,e)?(n.chosenFormat=a,"break"):(n.matchingFormats=n.matchingFormats.filter((function(e){return e!==a})),"continue"):"continue"},r=ee(this.matchingFormats.slice());!(t=r()).done;){var i=a();if("break"===i)break}return this.chosenFormat||this.resetFormat(),this.chosenFormat}},{key:"createTemplateForFormat",value:function(e,t){if(!(e.pattern().indexOf("|")>=0)){var n=this.getTemplateForFormat(e,t);return n?(this.setNationalNumberTemplate(n,t),!0):void 0}}},{key:"getSeparatorAfterNationalPrefix",value:function(e){return this.isNANP||e&&e.nationalPrefixFormattingRule()&&re.test(e.nationalPrefixFormattingRule())?" ":""}},{key:"getInternationalPrefixBeforeCountryCallingCode",value:function(e,t){var n=e.IDDPrefix,a=e.missingPlus;return n?t&&!1===t.spacing?n:n+" ":a?"":"+"}},{key:"getTemplate",value:function(e){if(this.template){for(var t=-1,n=0,a=e.international?this.getInternationalPrefixBeforeCountryCallingCode(e,{spacing:!1}):"";n<a.length+e.getDigitsWithoutInternationalPrefix().length;)t=this.template.indexOf(E,t+1),n++;return L(this.template,t+1)}}},{key:"setNationalNumberTemplate",value:function(e,t){this.nationalNumberTemplate=e,this.populatedNationalNumberTemplate=e,this.populatedNationalNumberTemplatePosition=-1,t.international?this.template=this.getInternationalPrefixBeforeCountryCallingCode(t).replace(/[\d\+]/g,E)+I(E,t.callingCode.length)+" "+e:this.template=e}},{key:"getTemplateForFormat",value:function(e,t){var n=t.nationalSignificantNumber,a=t.international,r=t.nationalPrefix,i=t.complexPrefixBeforeNationalSignificantNumber,o=e.pattern();o=o.replace(ie(),"\\d").replace(oe(),"\\d");var u=ae.match(o)[0];if(!(n.length>u.length)){var d=new RegExp("^"+o+"$"),s=n.replace(/\d/g,"9");d.test(s)&&(u=s);var l,c=this.getFormatFormat(e,a);if(this.shouldTryNationalPrefixFormattingRule(e,{international:a,nationalPrefix:r})){var f=c.replace(K.i,e.nationalPrefixFormattingRule());if((0,R.ZP)(e.nationalPrefixFormattingRule())===(r||"")+(0,R.ZP)("$1")&&(c=f,l=!0,r))for(var h=r.length;h>0;)c=c.replace(/\d/,E),h--}var p=u.replace(new RegExp(o),c).replace(new RegExp("9","g"),E);return l||(i?p=I(E,i.length)+" "+p:r&&(p=I(E,r.length)+this.getSeparatorAfterNationalPrefix(e)+p)),a&&(p=(0,X.Z)(p)),p}}},{key:"formatNextNationalNumberDigits",value:function(e){var t=function(e,t,n){for(var a,r=B(n.split(""));!(a=r()).done;){var i=a.value;if(e.slice(t+1).search(x)<0)return;t=e.search(x),e=e.replace(x,i)}return[e,t]}(this.populatedNationalNumberTemplate,this.populatedNationalNumberTemplatePosition,e);if(t)return this.populatedNationalNumberTemplate=t[0],this.populatedNationalNumberTemplatePosition=t[1],L(this.populatedNationalNumberTemplate,this.populatedNationalNumberTemplatePosition+1);this.resetFormat()}},{key:"shouldTryNationalPrefixFormattingRule",value:function(e,t){var n=t.international,a=t.nationalPrefix;if(e.nationalPrefixFormattingRule()){var r=e.usesNationalPrefix();if(r&&a||!r&&!n)return!0}}}],n&&ne(t.prototype,n),a&&ne(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}(),se=n(9511),le=n(9647),ce=n(9690),fe=n(3291);function he(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,i=[],o=!0,u=!1;try{for(n=n.call(e);!(o=(a=n.next()).done)&&(i.push(a.value),!t||i.length!==t);o=!0);}catch(d){u=!0,r=d}finally{try{o||null==n.return||n.return()}finally{if(u)throw r}}return i}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return pe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return pe(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function ge(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var me="["+Q.uv+Q.xc+"]+",ye=new RegExp("^"+me+"$","i"),ve="(?:["+Q.xy+"]["+Q.uv+Q.xc+"]*|["+Q.uv+Q.xc+"]+)",$e=new RegExp("[^"+Q.uv+Q.xc+"]+.*$"),be=/[^\d\[\]]/,Se=function(){function e(t){var n=t.defaultCountry,a=t.defaultCallingCode,r=t.metadata,i=t.onNationalSignificantNumberChange;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.defaultCountry=n,this.defaultCallingCode=a,this.metadata=r,this.onNationalSignificantNumberChange=i}var t,n,a;return t=e,(n=[{key:"input",value:function(e,t){var n,a=function(e){var t=function(e){var t=function(e){var t,n=e.search(ve);if(!(n<0))return"+"===(e=e.slice(n))[0]&&(t=!0,e=e.slice(1)),e=e.replace($e,""),t&&(e="+"+e),e}(e)||"";return"+"===t[0]?[t.slice(1),!0]:[t]}(e),n=he(t,2),a=n[0],r=n[1];return ye.test(a)||(a=""),[a,r]}(e),r=he(a,2),i=r[0],o=r[1],u=(0,R.ZP)(i);return o&&(t.digits||(t.startInternationalNumber(),u||(n=!0))),u&&this.inputDigits(u,t),{digits:u,justLeadingPlus:n}}},{key:"inputDigits",value:function(e,t){var n=t.digits,a=n.length<3&&n.length+e.length>=3;if(t.appendDigits(e),a&&this.extractIddPrefix(t),this.isWaitingForCountryCallingCode(t)){if(!this.extractCountryCallingCode(t))return}else t.appendNationalSignificantNumberDigits(e);t.international||this.hasExtractedNationalSignificantNumber||this.extractNationalSignificantNumber(t.getNationalDigits(),(function(e){return t.update(e)}))}},{key:"isWaitingForCountryCallingCode",value:function(e){var t=e.international,n=e.callingCode;return t&&!n}},{key:"extractCountryCallingCode",value:function(e){var t=(0,se.Z)("+"+e.getDigitsWithoutInternationalPrefix(),this.defaultCountry,this.defaultCallingCode,this.metadata.metadata),n=t.countryCallingCode,a=t.number;if(n)return e.setCallingCode(n),e.update({nationalSignificantNumber:a}),!0}},{key:"reset",value:function(e){if(e){this.hasSelectedNumberingPlan=!0;var t=e._nationalPrefixForParsing();this.couldPossiblyExtractAnotherNationalSignificantNumber=t&&be.test(t)}else this.hasSelectedNumberingPlan=void 0,this.couldPossiblyExtractAnotherNationalSignificantNumber=void 0}},{key:"extractNationalSignificantNumber",value:function(e,t){if(this.hasSelectedNumberingPlan){var n=(0,ce.Z)(e,this.metadata),a=n.nationalPrefix,r=n.nationalNumber,i=n.carrierCode;if(r!==e)return this.onExtractedNationalNumber(a,i,r,e,t),!0}}},{key:"extractAnotherNationalSignificantNumber",value:function(e,t,n){if(!this.hasExtractedNationalSignificantNumber)return this.extractNationalSignificantNumber(e,n);if(this.couldPossiblyExtractAnotherNationalSignificantNumber){var a=(0,ce.Z)(e,this.metadata),r=a.nationalPrefix,i=a.nationalNumber,o=a.carrierCode;if(i!==t)return this.onExtractedNationalNumber(r,o,i,e,n),!0}}},{key:"onExtractedNationalNumber",value:function(e,t,n,a,r){var i,o,u=a.lastIndexOf(n);if(u>=0&&u===a.length-n.length){o=!0;var d=a.slice(0,u);d!==e&&(i=d)}r({nationalPrefix:e,carrierCode:t,nationalSignificantNumber:n,nationalSignificantNumberMatchesInput:o,complexPrefixBeforeNationalSignificantNumber:i}),this.hasExtractedNationalSignificantNumber=!0,this.onNationalSignificantNumberChange()}},{key:"reExtractNationalSignificantNumber",value:function(e){return!!this.extractAnotherNationalSignificantNumber(e.getNationalDigits(),e.nationalSignificantNumber,(function(t){return e.update(t)}))||(this.extractIddPrefix(e)||this.fixMissingPlus(e)?(this.extractCallingCodeAndNationalSignificantNumber(e),!0):void 0)}},{key:"extractIddPrefix",value:function(e){var t=e.international,n=e.IDDPrefix,a=e.digits;if(e.nationalSignificantNumber,!t&&!n){var r=(0,fe.Z)(a,this.defaultCountry,this.defaultCallingCode,this.metadata.metadata);return void 0!==r&&r!==a?(e.update({IDDPrefix:a.slice(0,a.length-r.length)}),this.startInternationalNumber(e,{country:void 0,callingCode:void 0}),!0):void 0}}},{key:"fixMissingPlus",value:function(e){if(!e.international){var t=(0,le.Z)(e.digits,this.defaultCountry,this.defaultCallingCode,this.metadata.metadata),n=t.countryCallingCode;if(t.number,n)return e.update({missingPlus:!0}),this.startInternationalNumber(e,{country:e.country,callingCode:n}),!0}}},{key:"startInternationalNumber",value:function(e,t){var n=t.country,a=t.callingCode;e.startInternationalNumber(n,a),e.nationalSignificantNumber&&(e.resetNationalSignificantNumber(),this.onNationalSignificantNumberChange(),this.hasExtractedNationalSignificantNumber=void 0)}},{key:"extractCallingCodeAndNationalSignificantNumber",value:function(e){this.extractCountryCallingCode(e)&&this.extractNationalSignificantNumber(e.getNationalDigits(),(function(t){return e.update(t)}))}}])&&ge(t.prototype,n),a&&ge(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();var Ce=n(8060),Ae=n(6065);function ke(e){return ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ke(e)}function Ne(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,i=[],o=!0,u=!1;try{for(n=n.call(e);!(o=(a=n.next()).done)&&(i.push(a.value),!t||i.length!==t);o=!0);}catch(d){u=!0,r=d}finally{try{o||null==n.return||n.return()}finally{if(u)throw r}}return i}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return Oe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Oe(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function Pe(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var Me=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.metadata=new O.ZP(n);var a=Ne(this.getCountryAndCallingCode(t),2),r=a[0],i=a[1];this.defaultCountry=r,this.defaultCallingCode=i,this.reset()}var t,n,a;return t=e,(n=[{key:"getCountryAndCallingCode",value:function(e){var t,n;return e&&("object"===ke(e)?(t=e.defaultCountry,n=e.defaultCallingCode):t=e),t&&!this.metadata.hasCountry(t)&&(t=void 0),[t,n]}},{key:"input",value:function(e){var t=this.parser.input(e,this.state),n=t.digits;if(t.justLeadingPlus)this.formattedOutput="+";else if(n){var a;if(this.determineTheCountryIfNeeded(),this.state.nationalSignificantNumber&&this.formatter.narrowDownMatchingFormats(this.state),this.metadata.hasSelectedNumberingPlan()&&(a=this.formatter.format(n,this.state)),void 0===a&&this.parser.reExtractNationalSignificantNumber(this.state)){this.determineTheCountryIfNeeded();var r=this.state.getNationalDigits();r&&(a=this.formatter.format(r,this.state))}this.formattedOutput=a?this.getFullNumber(a):this.getNonFormattedNumber()}return this.formattedOutput}},{key:"reset",value:function(){var e=this;return this.state=new T({onCountryChange:function(t){e.country=t},onCallingCodeChange:function(t,n){e.metadata.selectNumberingPlan(n,t),e.formatter.reset(e.metadata.numberingPlan,e.state),e.parser.reset(e.metadata.numberingPlan)}}),this.formatter=new de({state:this.state,metadata:this.metadata}),this.parser=new Se({defaultCountry:this.defaultCountry,defaultCallingCode:this.defaultCallingCode,metadata:this.metadata,state:this.state,onNationalSignificantNumberChange:function(){e.determineTheCountryIfNeeded(),e.formatter.reset(e.metadata.numberingPlan,e.state)}}),this.state.reset({country:this.defaultCountry,callingCode:this.defaultCallingCode}),this.formattedOutput="",this}},{key:"isInternational",value:function(){return this.state.international}},{key:"getCallingCode",value:function(){if(this.isInternational())return this.state.callingCode}},{key:"getCountryCallingCode",value:function(){return this.getCallingCode()}},{key:"getCountry",value:function(){if(this.state.digits)return this._getCountry()}},{key:"_getCountry",value:function(){var e=this.state.country;return e}},{key:"determineTheCountryIfNeeded",value:function(){this.state.country&&!this.isCountryCallingCodeAmbiguous()||this.determineTheCountry()}},{key:"getFullNumber",value:function(e){var t=this;if(this.isInternational()){var n=function(e){return t.formatter.getInternationalPrefixBeforeCountryCallingCode(t.state,{spacing:!!e})+e},a=this.state.callingCode;return n(a?e?"".concat(a," ").concat(e):a:"".concat(this.state.getDigitsWithoutInternationalPrefix()))}return e}},{key:"getNonFormattedNationalNumberWithPrefix",value:function(){var e=this.state,t=e.nationalSignificantNumber,n=e.complexPrefixBeforeNationalSignificantNumber,a=e.nationalPrefix,r=t,i=n||a;return i&&(r=i+r),r}},{key:"getNonFormattedNumber",value:function(){var e=this.state.nationalSignificantNumberMatchesInput;return this.getFullNumber(e?this.getNonFormattedNationalNumberWithPrefix():this.state.getNationalDigits())}},{key:"getNonFormattedTemplate",value:function(){var e=this.getNonFormattedNumber();if(e)return e.replace(/[\+\d]/g,E)}},{key:"isCountryCallingCodeAmbiguous",value:function(){var e=this.state.callingCode,t=this.metadata.getCountryCodesForCallingCode(e);return t&&t.length>1}},{key:"determineTheCountry",value:function(){this.state.setCountry((0,Ce.Z)(this.isInternational()?this.state.callingCode:this.defaultCallingCode,{nationalNumber:this.state.nationalSignificantNumber,defaultCountry:this.defaultCountry,metadata:this.metadata}))}},{key:"getNumberValue",value:function(){var e=this.state,t=e.digits,n=e.callingCode,a=e.country,r=e.nationalSignificantNumber;if(t)return this.isInternational()?n?"+"+n+r:"+"+t:a||n?"+"+(a?this.metadata.countryCallingCode():n)+r:void 0}},{key:"getNumber",value:function(){var e=this.state,t=e.nationalSignificantNumber,n=e.carrierCode,a=e.callingCode,r=this._getCountry();if(t&&(r||a)){if(r&&r===this.defaultCountry){var i=new O.ZP(this.metadata.metadata);i.selectNumberingPlan(r);var o=i.numberingPlan.callingCode(),u=this.metadata.getCountryCodesForCallingCode(o);if(u.length>1){var d=(0,Ae.Z)(t,{countries:u,defaultCountry:this.defaultCountry,metadata:this.metadata.metadata});d&&(r=d)}}var s=new P.Z(r||a,t,this.metadata.metadata);return n&&(s.carrierCode=n),s}}},{key:"isPossible",value:function(){var e=this.getNumber();return!!e&&e.isPossible()}},{key:"isValid",value:function(){var e=this.getNumber();return!!e&&e.isValid()}},{key:"getNationalNumber",value:function(){return this.state.nationalSignificantNumber}},{key:"getChars",value:function(){return(this.state.international?"+":"")+this.state.digits}},{key:"getTemplate",value:function(){return this.formatter.getTemplate(this.state)||this.getNonFormattedTemplate()||""}}])&&Pe(t.prototype,n),a&&Pe(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}(),Te=n(3527);function Be(e){var t=e.country,n=e.international,a=e.withCountryCallingCode,r=e.metadata;return t&&n&&!a?"+".concat((0,O.Gg)(t,r)):""}function we(e,t){return t&&" "===(e=e.slice(t.length))[0]&&(e=e.slice(1)),e}var Ee=["country","international","withCountryCallingCode","metadata"];function xe(){return xe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},xe.apply(this,arguments)}function Ie(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var Le=function(e){function t(t,n){var r=t.country,i=t.international,o=t.withCountryCallingCode,u=t.metadata,d=void 0===u?e:u,s=Ie(t,Ee),l=(0,a.useCallback)((function(e){var t=new Me(r,d),n=Be({country:r,international:i,withCountryCallingCode:o,metadata:d}),a=t.input(n+e),u=t.getTemplate();return n&&(a=we(a,n),u&&(u=we(u,n))),{text:a,template:u}}),[r,d]);return a.createElement(k,xe({},s,{ref:n,parse:Te.J,format:l}))}return(t=a.forwardRef(t)).propTypes={value:o.string.isRequired,onChange:o.func.isRequired,country:o.string,international:o.bool,withCountryCallingCode:o.bool,metadata:o.object},t}();var De=["value","onChange","country","international","withCountryCallingCode","metadata","inputComponent"];function Re(){return Re=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Re.apply(this,arguments)}function Ke(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var je=function(e){function t(t,n){var r=t.value,i=t.onChange,o=t.country,u=t.international,d=t.withCountryCallingCode,s=t.metadata,l=void 0===s?e:s,c=t.inputComponent,f=void 0===c?"input":c,h=Ke(t,De),p=Be({country:o,international:u,withCountryCallingCode:d,metadata:l}),g=(0,a.useCallback)((function(e){var t=(0,Te.Z)(e.target.value);t===r&&(0===Fe(p,t,o,l).indexOf(e.target.value)&&(t=t.slice(0,-1)));i(t)}),[p,r,i,o,l]);return a.createElement(f,Re({},h,{ref:n,value:Fe(p,r,o,l),onChange:g}))}return(t=a.forwardRef(t)).propTypes={value:o.string.isRequired,onChange:o.func.isRequired,country:o.string,international:o.bool,withCountryCallingCode:o.bool,metadata:o.object,inputComponent:o.elementType},t}();function Fe(e,t,n,a){return we(function(e,t,n){return n||(n=t,t=void 0),new Me(t,n).input(e)}(e+t,n,a),e)}function Ge(e){return String.fromCodePoint(127397+e.toUpperCase().charCodeAt(0))}var Ze=["value","onChange","options"],Ve=["value","options","className","iconComponent","getIconAspectRatio","arrowComponent","unicodeFlags"];function He(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return Ue(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ue(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Ue(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function _e(){return _e=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},_e.apply(this,arguments)}function We(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function ze(e){var t=e.value,n=e.onChange,r=e.options,i=We(e,Ze),o=(0,a.useCallback)((function(e){var t=e.target.value;n("ZZ"===t?void 0:t)}),[n]);(0,a.useMemo)((function(){return Qe(r,t)}),[r,t]);return a.createElement("select",_e({},i,{value:t||"ZZ",onChange:o}),r.map((function(e){var t=e.value,n=e.label,r=e.divider;return a.createElement("option",{key:r?"|":t||"ZZ",value:r?"|":t||"ZZ",disabled:!!r,style:r?Je:void 0},n)})))}ze.propTypes={value:o.string,onChange:o.func.isRequired,options:o.arrayOf(o.shape({value:o.string,label:o.string,divider:o.bool})).isRequired};var Je={fontSize:"1px",backgroundColor:"currentColor",color:"inherit"};function Ye(e){var t,n=e.value,r=e.options,i=e.className,o=e.iconComponent,d=(e.getIconAspectRatio,e.arrowComponent),s=void 0===d?qe:d,l=e.unicodeFlags,c=We(e,Ve),f=(0,a.useMemo)((function(){return Qe(r,n)}),[r,n]);return a.createElement("div",{className:"PhoneInputCountry"},a.createElement(ze,_e({},c,{value:n,options:r,className:u("PhoneInputCountrySelect",i)})),l&&n&&a.createElement("div",{className:"PhoneInputCountryIconUnicode"},Ge((t=n)[0])+Ge(t[1])),!(l&&n)&&a.createElement(o,{"aria-hidden":!0,country:n,label:f&&f.label,aspectRatio:l?1:void 0}),a.createElement(s,null))}function qe(){return a.createElement("div",{className:"PhoneInputCountrySelectArrow"})}function Qe(e,t){for(var n,a=He(e);!(n=a()).done;){var r=n.value;if(!r.divider&&r.value===t)return r}}Ye.propTypes={iconComponent:o.elementType,arrowComponent:o.elementType,unicodeFlags:o.bool};var Xe=["country","countryName","flags","flagUrl"];function et(){return et=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},et.apply(this,arguments)}function tt(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function nt(e){var t=e.country,n=e.countryName,r=e.flags,i=e.flagUrl,o=tt(e,Xe);return r&&r[t]?r[t]({title:n}):a.createElement("img",et({},o,{alt:n,role:n?void 0:"presentation",src:i.replace("{XX}",t).replace("{xx}",t.toLowerCase())}))}nt.propTypes={country:o.string.isRequired,countryName:o.string.isRequired,flags:o.objectOf(o.elementType),flagUrl:o.string.isRequired};var at=["aspectRatio"],rt=["title"],it=["title"];function ot(){return ot=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},ot.apply(this,arguments)}function ut(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function dt(e){var t=e.aspectRatio,n=ut(e,at);return 1===t?a.createElement(lt,n):a.createElement(st,n)}function st(e){var t=e.title,n=ut(e,rt);return a.createElement("svg",ot({},n,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 75 50"}),a.createElement("title",null,t),a.createElement("g",{className:"PhoneInputInternationalIconGlobe",stroke:"currentColor",fill:"none",strokeWidth:"2",strokeMiterlimit:"10"},a.createElement("path",{strokeLinecap:"round",d:"M47.2,36.1C48.1,36,49,36,50,36c7.4,0,14,1.7,18.5,4.3"}),a.createElement("path",{d:"M68.6,9.6C64.2,12.3,57.5,14,50,14c-7.4,0-14-1.7-18.5-4.3"}),a.createElement("line",{x1:"26",y1:"25",x2:"74",y2:"25"}),a.createElement("line",{x1:"50",y1:"1",x2:"50",y2:"49"}),a.createElement("path",{strokeLinecap:"round",d:"M46.3,48.7c1.2,0.2,2.5,0.3,3.7,0.3c13.3,0,24-10.7,24-24S63.3,1,50,1S26,11.7,26,25c0,2,0.3,3.9,0.7,5.8"}),a.createElement("path",{strokeLinecap:"round",d:"M46.8,48.2c1,0.6,2.1,0.8,3.2,0.8c6.6,0,12-10.7,12-24S56.6,1,50,1S38,11.7,38,25c0,1.4,0.1,2.7,0.2,4c0,0.1,0,0.2,0,0.2"})),a.createElement("path",{className:"PhoneInputInternationalIconPhone",stroke:"none",fill:"currentColor",d:"M12.4,17.9c2.9-2.9,5.4-4.8,0.3-11.2S4.1,5.2,1.3,8.1C-2,11.4,1.1,23.5,13.1,35.6s24.3,15.2,27.5,11.9c2.8-2.8,7.8-6.3,1.4-11.5s-8.3-2.6-11.2,0.3c-2,2-7.2-2.2-11.7-6.7S10.4,19.9,12.4,17.9z"}))}function lt(e){var t=e.title,n=ut(e,it);return a.createElement("svg",ot({},n,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 50 50"}),a.createElement("title",null,t),a.createElement("g",{className:"PhoneInputInternationalIconGlobe",stroke:"currentColor",fill:"none",strokeWidth:"2",strokeLinecap:"round"},a.createElement("path",{d:"M8.45,13A21.44,21.44,0,1,1,37.08,41.56"}),a.createElement("path",{d:"M19.36,35.47a36.9,36.9,0,0,1-2.28-13.24C17.08,10.39,21.88.85,27.8.85s10.72,9.54,10.72,21.38c0,6.48-1.44,12.28-3.71,16.21"}),a.createElement("path",{d:"M17.41,33.4A39,39,0,0,1,27.8,32.06c6.62,0,12.55,1.5,16.48,3.86"}),a.createElement("path",{d:"M44.29,8.53c-3.93,2.37-9.86,3.88-16.49,3.88S15.25,10.9,11.31,8.54"}),a.createElement("line",{x1:"27.8",y1:"0.85",x2:"27.8",y2:"34.61"}),a.createElement("line",{x1:"15.2",y1:"22.23",x2:"49.15",y2:"22.23"})),a.createElement("path",{className:"PhoneInputInternationalIconPhone",stroke:"transparent",fill:"currentColor",d:"M9.42,26.64c2.22-2.22,4.15-3.59.22-8.49S3.08,17,.93,19.17c-2.49,2.48-.13,11.74,9,20.89s18.41,11.5,20.89,9c2.15-2.15,5.91-4.77,1-8.71s-6.27-2-8.49.22c-1.55,1.55-5.48-1.69-8.86-5.08S7.87,28.19,9.42,26.64Z"}))}function ct(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return ft(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ft(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function ft(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function ht(e,t){return!!(0,O.aS)(e,t)||(console.error("Country not found: ".concat(e)),!1)}function pt(e,t){return e&&0===(e=e.filter((function(e){return ht(e,t)}))).length&&(e=void 0),e}function gt(e){return new O.ZP(e).getCountries()}dt.propTypes={title:o.string.isRequired,aspectRatio:o.number},st.propTypes={title:o.string.isRequired},lt.propTypes={title:o.string.isRequired};var mt=["country","label","aspectRatio"];function yt(){return yt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},yt.apply(this,arguments)}function vt(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function $t(e){var t=e.flags,n=e.flagUrl,r=e.flagComponent,i=e.internationalIcon;function d(e){var o=e.country,d=e.label,s=e.aspectRatio,l=vt(e,mt),c=i===dt?s:void 0;return a.createElement("div",yt({},l,{className:u("PhoneInputCountryIcon",{"PhoneInputCountryIcon--square":1===c,"PhoneInputCountryIcon--border":o})}),o?a.createElement(r,{country:o,countryName:d,flags:t,flagUrl:n,className:"PhoneInputCountryIconImg"}):a.createElement(i,{title:d,aspectRatio:c,className:"PhoneInputCountryIconImg"}))}return d.propTypes={country:o.string,label:o.string.isRequired,aspectRatio:o.number},d}$t({flagUrl:"https://purecatamphetamine.github.io/country-flag-icons/3x2/{XX}.svg",flagComponent:nt,internationalIcon:dt});var bt=n(7044),St=n(7853);function Ct(e,t){return"+"+(0,O.Gg)(e,t)}function At(e,t){return function(){var e=(0,bt.Z)(arguments),t=e.text,n=e.options,a=e.metadata;return(0,St.Z)(t,n,a)}(e||"",t)}function kt(e,t){var n=t.prevCountry,a=t.newCountry,r=t.metadata,i=t.useNationalFormat;if(n===a)return e;if(!e)return i?"":a?Ct(a,r):"";if(a){if("+"===e[0]){if(i)return 0===e.indexOf("+"+(0,O.Gg)(a,r))?function(e,t,n){if(t){var a="+"+(0,O.Gg)(t,n);if(e.length<a.length){if(0===a.indexOf(e))return""}else if(0===e.indexOf(a))return e.slice(a.length)}for(var r=0,i=Object.keys(n.country_calling_codes);r<i.length;r++){var o=i[r];if(1===e.indexOf(o))return e.slice(1+o.length)}return""}(e,a,r):"";if(n){var o=Ct(a,r);return 0===e.indexOf(o)?e:o}var u=Ct(a,r);return 0===e.indexOf(u)?e:u}}else if("+"!==e[0])return Nt(e,n,r)||"";return e}function Nt(e,t,n){if(e){if("+"===e[0]){if("+"===e)return;var a=new Me(t,n);return a.input(e),a.getNumberValue()}if(t){var r=Bt(e,t,n);return"+".concat((0,O.Gg)(t,n)).concat(r||"")}}}function Ot(e,t,n){var a=Bt(e,t,n);if(a){var r=a.length-function(e,t){return t=new O.ZP(t),t.selectNumberingPlan(e),t.numberingPlan.possibleLengths()[t.numberingPlan.possibleLengths().length-1]}(t,n);if(r>0)return e.slice(0,e.length-r)}return e}function Pt(e,t){var n=t.country,a=t.countries,r=t.required,i=t.metadata;if("+"===e)return n;var o=function(e,t){var n=new Me(null,t);return n.input(e),n.getCountry()}(e,i);return o&&(!a||a.indexOf(o)>=0)?o:!n||r||wt(e,n,i)?n:void 0}function Mt(e,t,n){if(0===e.indexOf(Ct(t,n))){var a=new Me(t,n);a.input(e);var r=a.getNumber();return r?r.formatNational().replace(/\D/g,""):""}return e.replace(/\D/g,"")}function Tt(e,t,n){return String.prototype.localeCompare?e.localeCompare(t,n):e<t?-1:e>t?1:0}function Bt(e,t,n){var a=new Me(t,n);a.input(e);var r=a.getNumber();return r&&r.nationalNumber}function wt(e,t,n){for(var a=Ct(t,n),r=0;r<e.length&&r<a.length;){if(e[r]!==a[r])return!1;r++}return!0}function Et(e){var t=e.value,n=e.phoneNumber,a=e.defaultCountry,r=e.international,i=e.useNationalFormat,o=e.metadata;return(!1===r||i)&&n&&n.country?function(e){return e.formatNational().replace(/\D/g,"")}(n):!t&&r&&a?Ct(a,o):t}function xt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function It(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xt(Object(n),!0).forEach((function(t){Lt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Lt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Dt(e,t){return null===e&&(e=void 0),null===t&&(t=void 0),e===t}function Rt(e){return Rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rt(e)}var Kt=["name","disabled","readOnly","autoComplete","style","className","inputRef","inputComponent","numberInputProps","smartCaret","countrySelectComponent","countrySelectProps","containerComponent","defaultCountry","countries","countryOptionsOrder","labels","flags","flagComponent","flagUrl","addInternationalOption","internationalIcon","displayInitialValueAsLocalNumber","initialValueFormat","onCountryChange","limitMaxLength","countryCallingCodeEditable","focusInputOnCountrySelection","reset","metadata","international","locales"];function jt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function Ft(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?jt(Object(n),!0).forEach((function(t){zt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):jt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Gt(){return Gt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Gt.apply(this,arguments)}function Zt(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function Vt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ht(e,t){return Ht=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ht(e,t)}function Ut(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Wt(e);if(t){var r=Wt(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return function(e,t){if(t&&("object"===Rt(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _t(e)}(this,n)}}function _t(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Wt(e){return Wt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Wt(e)}function zt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Jt=function(e){!function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ht(e,t)}(o,e);var t,n,r,i=Ut(o);function o(e){var t;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),zt(_t(t=i.call(this,e)),"setInputRef",(function(e){t.inputRef.current=e;var n=t.props.inputRef;n&&("function"===typeof n?n(e):n.current=e)})),zt(_t(t),"isCountrySupportedWithError",(function(e){return ht(e,t.props.metadata)})),zt(_t(t),"onCountryChange",(function(e){var n=t.props,a=n.international,r=n.metadata,i=n.onChange,o=n.focusInputOnCountrySelection,u=t.state,d=kt(u.phoneDigits,{prevCountry:u.country,newCountry:e,metadata:r,useNationalFormat:!a}),s=Nt(d,e,r);o&&t.inputRef.current.focus(),t.setState({country:e,hasUserSelectedACountry:!0,phoneDigits:d,value:s},(function(){i(s)}))})),zt(_t(t),"onChange",(function(e){var n=t.props,a=n.defaultCountry,r=n.onChange,i=n.addInternationalOption,o=n.international,u=n.limitMaxLength,d=n.countryCallingCodeEditable,s=n.metadata,l=t.state,c=l.countries,f=function(e,t){var n,a=t.prevPhoneDigits,r=t.country,i=t.defaultCountry,o=t.countryRequired,u=t.getAnyCountry,d=t.countries,s=t.international,l=t.limitMaxLength,c=t.countryCallingCodeEditable,f=t.metadata;if(s&&!1===c&&r){var h,p=Ct(r,f);if(0!==e.indexOf(p))return e&&"+"!==e[0]?h=Nt(e=p+e,r,f):e=p,{phoneDigits:e,value:h,country:r}}return!1===s&&r&&e&&"+"===e[0]&&(e=Mt(e,r,f)),e&&r&&l&&(e=Ot(e,r,f)),!e||"+"===e[0]||r&&!s||(e="+"+e),!e&&a&&"+"===a[0]&&(r=s?void 0:i),"+"===e&&a&&"+"===a[0]&&a.length>1&&(r=void 0),e&&(n="+"===e[0]&&("+"===e||r&&0===Ct(r,f).indexOf(e))?void 0:Nt(e,r,f)),n&&(r=Pt(n,{country:r,countries:d,metadata:f}),!1===s&&r&&e&&"+"===e[0]&&(n=Nt(e=Mt(e,r,f),r,f))),!r&&o&&(r=i||u()),{phoneDigits:e,country:r,value:n}}(e,{prevPhoneDigits:l.phoneDigits,country:l.country,countryRequired:!i,defaultCountry:a,getAnyCountry:function(){return t.getFirstSupportedCountry({countries:c})},countries:c,international:o,limitMaxLength:u,countryCallingCodeEditable:d,metadata:s}),h=f.phoneDigits,p=f.country,g=f.value,m={phoneDigits:h,value:g,country:p};!1===d&&(g||h!==t.state.phoneDigits||(m.forceRerender={})),t.setState(m,(function(){return r(g)}))})),zt(_t(t),"_onFocus",(function(){return t.setState({isFocused:!0})})),zt(_t(t),"_onBlur",(function(){return t.setState({isFocused:!1})})),zt(_t(t),"onFocus",(function(e){t._onFocus();var n=t.props.onFocus;n&&n(e)})),zt(_t(t),"onBlur",(function(e){var n=t.props.onBlur;t._onBlur(),n&&n(e)})),zt(_t(t),"onCountryFocus",(function(e){t._onFocus();var n=t.props.countrySelectProps;if(n){var a=n.onFocus;a&&a(e)}})),zt(_t(t),"onCountryBlur",(function(e){t._onBlur();var n=t.props.countrySelectProps;if(n){var a=n.onBlur;a&&a(e)}})),t.inputRef=a.createRef();var n=t.props,r=n.value,u=(n.labels,n.international),d=n.addInternationalOption,s=n.displayInitialValueAsLocalNumber,l=n.initialValueFormat,c=n.metadata,f=t.props,h=f.defaultCountry,p=f.countries;h&&(t.isCountrySupportedWithError(h)||(h=void 0)),p=pt(p,c);var g=At(r,c);t.CountryIcon=$t(t.props);var m=function(e){var t,n=e.value,a=e.phoneNumber,r=e.defaultCountry,i=e.getAnyCountry,o=e.countries,u=e.required,d=e.metadata;return a&&a.country?t=a.country:r&&(n&&!wt(n,r,d)||(t=r)),o&&o.indexOf(t)<0&&(t=void 0),!t&&u&&o&&o.length>0&&(t=i()),t}({value:r,phoneNumber:g,defaultCountry:h,required:!d,countries:p||gt(c),getAnyCountry:function(){return t.getFirstSupportedCountry({countries:p})},metadata:c});return t.state={props:t.props,country:m,countries:p,phoneDigits:Et({value:r,phoneNumber:g,defaultCountry:h,international:u,useNationalFormat:s||"national"===l,metadata:c}),value:r},t}return t=o,r=[{key:"getDerivedStateFromProps",value:function(e,t){return Ft({props:e},function(e,t,n){var a=e.metadata,r=e.countries,i=e.defaultCountry,o=e.value,u=e.reset,d=e.international,s=e.displayInitialValueAsLocalNumber,l=e.initialValueFormat,c=t.defaultCountry,f=t.value,h=t.reset,p=(n.country,n.value),g=n.hasUserSelectedACountry,m=function(e){return Et(It(It({},e),{},{international:d,useNationalFormat:s||"national"===l,metadata:a}))};if(u!==h)return{phoneDigits:m({value:void 0,defaultCountry:i}),value:void 0,country:i,hasUserSelectedACountry:void 0};if(i!==c){var y=!i||ht(i,a),v=!p||d&&p===m({value:void 0,defaultCountry:c});if(!g&&y&&!o&&v)return{country:i,phoneDigits:m({value:void 0,defaultCountry:i}),value:void 0}}if(!Dt(o,f)&&!Dt(o,p)){var $,b,S;if(o){$=At(o,a);var C=pt(r,a);$&&$.country?(!C||C.indexOf($.country)>=0)&&(b=$.country):(b=Pt(o,{country:void 0,countries:C,metadata:a}))||i&&0===o.indexOf(Ct(i,a))&&(b=i)}return o||(S={hasUserSelectedACountry:void 0}),It(It({},S),{},{phoneDigits:m({phoneNumber:$,value:o,defaultCountry:i}),value:o,country:o?b:i})}}(e,t.props,t))}}],(n=[{key:"componentDidMount",value:function(){var e=this.props.onCountryChange,t=this.props.defaultCountry,n=this.state.country;e&&(t&&(this.isCountrySupportedWithError(t)||(t=void 0)),n!==t&&e(n))}},{key:"componentDidUpdate",value:function(e,t){var n=this.props.onCountryChange,a=this.state.country;n&&a!==t.country&&n(a)}},{key:"getCountrySelectOptions",value:function(e){var t=e.countries,n=this.props,a=n.international,r=n.countryCallingCodeEditable,i=n.countryOptionsOrder,o=n.addInternationalOption,u=n.labels,d=n.locales,s=n.metadata;return this.useMemoCountrySelectOptions((function(){return function(e,t){if(!t)return e;for(var n,a=[],r=[],i=a,o=ct(t);!(n=o()).done;){var u=n.value;"|"===u?i.push({divider:!0}):"..."===u||"\u2026"===u?i=r:function(){var t=void 0;t="\ud83c\udf10"===u?void 0:u;var n=e.indexOf(e.filter((function(e){return e.value===t}))[0]),a=e[n];e.splice(n,1),i.push(a)}()}return a.concat(e).concat(r)}(function(e){var t=e.countries,n=e.countryNames,a=e.addInternationalOption,r=e.compareStringsLocales,i=e.compareStrings;i||(i=Tt);var o=t.map((function(e){return{value:e,label:n[e]||e}}));return o.sort((function(e,t){return i(e.label,t.label,r)})),a&&o.unshift({label:n.ZZ}),o}({countries:t||gt(s),countryNames:u,addInternationalOption:(!a||!1!==r)&&o,compareStringsLocales:d}),function(e,t){if(e&&(e=e.filter((function(e){switch(e){case"\ud83c\udf10":case"|":case"...":case"\u2026":return!0;default:return ht(e,t)}}))).length>0)return e}(i,s))}),[t,i,o,u,s])}},{key:"useMemoCountrySelectOptions",value:function(e,t){return this.countrySelectOptionsMemoDependencies&&function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;){if(e[n]!==t[n])return!1;n++}return!0}(t,this.countrySelectOptionsMemoDependencies)||(this.countrySelectOptionsMemo=e(),this.countrySelectOptionsMemoDependencies=t),this.countrySelectOptionsMemo}},{key:"getFirstSupportedCountry",value:function(e){var t=e.countries;return this.getCountrySelectOptions({countries:t})[0].value}},{key:"render",value:function(){var e=this.props,t=e.name,n=e.disabled,r=e.readOnly,i=e.autoComplete,o=e.style,d=e.className,s=(e.inputRef,e.inputComponent),l=e.numberInputProps,c=e.smartCaret,f=e.countrySelectComponent,h=e.countrySelectProps,p=e.containerComponent,g=(e.defaultCountry,e.countries,e.countryOptionsOrder,e.labels),m=(e.flags,e.flagComponent,e.flagUrl,e.addInternationalOption,e.internationalIcon,e.displayInitialValueAsLocalNumber,e.initialValueFormat,e.onCountryChange,e.limitMaxLength,e.countryCallingCodeEditable,e.focusInputOnCountrySelection,e.reset,e.metadata),y=(e.international,e.locales,Zt(e,Kt)),v=this.state,$=v.country,b=v.countries,S=v.phoneDigits,C=v.isFocused,A=c?Le:je,k=this.getCountrySelectOptions({countries:b});return a.createElement(p,{style:o,className:u(d,"PhoneInput",{"PhoneInput--focus":C,"PhoneInput--disabled":n,"PhoneInput--readOnly":r})},a.createElement(f,Gt({name:t?"".concat(t,"Country"):void 0,"aria-label":g.country},h,{value:$,options:k,onChange:this.onCountryChange,onFocus:this.onCountryFocus,onBlur:this.onCountryBlur,disabled:n||h&&h.disabled,readOnly:r||h&&h.readOnly,iconComponent:this.CountryIcon})),a.createElement(A,Gt({ref:this.setInputRef,type:"tel",autoComplete:i},l,y,{name:t,metadata:m,country:$,value:S||"",onChange:this.onChange,onFocus:this.onFocus,onBlur:this.onBlur,disabled:n,readOnly:r,inputComponent:s,className:u("PhoneInputInput",l&&l.className,y.className)})))}}])&&Vt(t.prototype,n),r&&Vt(t,r),Object.defineProperty(t,"prototype",{writable:!1}),o}(a.PureComponent),Yt=a.forwardRef((function(e,t){return a.createElement(Jt,Gt({},function(e){for(var t in e=Ft({},e),qt)void 0===e[t]&&(e[t]=qt[t]);return e}(e),{inputRef:t}))}));Yt.propTypes={value:o.string,onChange:o.func.isRequired,onFocus:o.func,onBlur:o.func,disabled:o.bool,readOnly:o.bool,autoComplete:o.string,initialValueFormat:o.oneOf(["national"]),displayInitialValueAsLocalNumber:o.bool,defaultCountry:o.string,countries:o.arrayOf(o.string),labels:i.p,locales:o.oneOfType([o.string,o.arrayOf(o.string)]),flagUrl:o.string,flags:o.objectOf(o.elementType),flagComponent:o.elementType,addInternationalOption:o.bool,internationalIcon:o.elementType,countryOptionsOrder:o.arrayOf(o.string),style:o.object,className:o.string,countrySelectComponent:o.elementType,countrySelectProps:o.object,inputComponent:o.elementType,containerComponent:o.elementType,numberInputProps:o.object,smartCaret:o.bool,international:o.bool,limitMaxLength:o.bool,countryCallingCodeEditable:o.bool,metadata:i.P,onCountryChange:o.func,focusInputOnCountrySelection:o.bool};var qt={autoComplete:"tel",countrySelectComponent:Ye,flagComponent:nt,flagUrl:"https://purecatamphetamine.github.io/country-flag-icons/3x2/{XX}.svg",internationalIcon:dt,inputComponent:"input",containerComponent:"div",reset:o.any,smartCaret:!0,addInternationalOption:!0,countryCallingCodeEditable:!0,focusInputOnCountrySelection:!0};var Qt=Yt;var Xt=["metadata","labels"];function en(){return en=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},en.apply(this,arguments)}function tn(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function nn(e){var t=a.forwardRef((function(t,n){var i=t.metadata,o=void 0===i?e:i,u=t.labels,d=void 0===u?r:u,s=tn(t,Xt);return a.createElement(Qt,en({},s,{ref:n,metadata:o,labels:d}))}));return t.propTypes={metadata:i.P,labels:i.p},t}var an=nn()},763:function(e,t,n){"use strict";n.d(t,{P:function(){return r},p:function(){return i}});var a=n(2007),r=a.shape({country_calling_codes:a.object.isRequired,countries:a.object.isRequired}),i=a.objectOf(a.string)},1424:function(e,t,n){"use strict";n.d(t,{Z:function(){return $}});var a=n(6946),r=n(2791),i=n(1134),o=n(2007),u=["Component","name","defaultValue","shouldUnregister","control","rules","onChange","onBlur"],d=["ref","onChange","onBlur"];function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=function(e,t){var n=e.Component,a=e.name,o=e.defaultValue,c=e.shouldUnregister,f=e.control,h=e.rules,p=e.onChange,g=e.onBlur,m=l(e,u),y=(0,r.useRef)(),v=(0,r.useCallback)((function(e){y.current=e,t&&("function"===typeof t?t(e):t.current=e)}),[t]);o=void 0===o?null:o;var $=(0,r.useCallback)((function(){y.current.focus()}),[]);return r.createElement(i.Qr,{control:f,name:a,defaultValue:o,shouldUnregister:c,rules:h,onFocus:$,render:function(e){return function(e){var t=e.ref,a=e.onChange,i=e.onBlur,o=l(e,d);(0,r.useImperativeHandle)(t,(function(){return{focus:function(){y.current.focus()}}}));var u=(0,r.useCallback)((function(e){v(e)}),[t,v]),c=(0,r.useCallback)((function(e){void 0===e&&(e=null),a(e),p&&p(e)}),[a,p]),f=(0,r.useCallback)((function(e){i(e),g&&g(e)}),[i,g]);return r.createElement(n,s({},m,o,{ref:u,onChange:c,onBlur:f}))}(e.field||e)}})};(c=r.forwardRef(c)).propTypes={Component:o.elementType.isRequired,name:o.string.isRequired,defaultValue:o.string,shouldUnregister:o.bool,control:o.object,rules:o.object,onChange:o.func,onBlur:o.func};var f=c,h=n(416),p=n(763),g=["metadata"];function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},m.apply(this,arguments)}function y(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function v(e){var t=function(t,n){var a=t.metadata,i=void 0===a?e:a,o=y(t,g);return r.createElement(f,m({},o,{ref:n,metadata:i,Component:h.Z}))};return(t=r.forwardRef(t)).propTypes={metadata:p.P},t}v();var $=v(a.Z)}}]);
//# sourceMappingURL=868.a154a1da.chunk.js.map